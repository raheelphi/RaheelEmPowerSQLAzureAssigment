<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.ResourceManager</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.GenericResource">
            <summary>
            Resource information.
            </summary>
            <summary>
            Resource information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.Plan,System.Object,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Sku,Microsoft.Azure.Management.ResourceManager.Models.Identity)">
            <summary>
            Initializes a new instance of the GenericResource class.
            </summary>
            <param name="id">Resource ID</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="location">Resource location</param>
            <param name="tags">Resource tags</param>
            <param name="plan">The plan of the resource.</param>
            <param name="properties">The resource properties.</param>
            <param name="kind">The kind of the resource.</param>
            <param name="managedBy">ID of the resource that manages this
            resource.</param>
            <param name="sku">The SKU of the resource.</param>
            <param name="identity">The identity of the resource.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.#ctor">
            <summary>
            Initializes a new instance of the GenericResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.Plan,System.Object,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Sku,Microsoft.Azure.Management.ResourceManager.Models.Identity)">
            <summary>
            Initializes a new instance of the GenericResource class.
            </summary>
            <param name="id">Resource ID</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="location">Resource location</param>
            <param name="extendedLocation">Resource extended location.</param>
            <param name="tags">Resource tags</param>
            <param name="plan">The plan of the resource.</param>
            <param name="properties">The resource properties.</param>
            <param name="kind">The kind of the resource.</param>
            <param name="managedBy">ID of the resource that manages this
            resource.</param>
            <param name="sku">The SKU of the resource.</param>
            <param name="identity">The identity of the resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.Plan">
            <summary>
            Gets or sets the plan of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.Properties">
            <summary>
            Gets or sets the resource properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.Kind">
            <summary>
            Gets or sets the kind of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.ManagedBy">
            <summary>
            Gets or sets ID of the resource that manages this resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.Sku">
            <summary>
            Gets or sets the SKU of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResource.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded">
            <summary>
            Resource information.
            </summary>
            <summary>
            Resource information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.Plan,System.Object,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Sku,Microsoft.Azure.Management.ResourceManager.Models.Identity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the GenericResourceExpanded class.
            </summary>
            <param name="id">Resource ID</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="location">Resource location</param>
            <param name="tags">Resource tags</param>
            <param name="plan">The plan of the resource.</param>
            <param name="properties">The resource properties.</param>
            <param name="kind">The kind of the resource.</param>
            <param name="managedBy">ID of the resource that manages this
            resource.</param>
            <param name="sku">The SKU of the resource.</param>
            <param name="identity">The identity of the resource.</param>
            <param name="createdTime">The created time of the resource. This is
            only present if requested via the $expand query parameter.</param>
            <param name="changedTime">The changed time of the resource. This is
            only present if requested via the $expand query parameter.</param>
            <param name="provisioningState">The provisioning state of the
            resource. This is only present if requested via the $expand query
            parameter.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.#ctor">
            <summary>
            Initializes a new instance of the GenericResourceExpanded class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.Plan,System.Object,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Sku,Microsoft.Azure.Management.ResourceManager.Models.Identity,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the GenericResourceExpanded class.
            </summary>
            <param name="id">Resource ID</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="location">Resource location</param>
            <param name="extendedLocation">Resource extended location.</param>
            <param name="tags">Resource tags</param>
            <param name="plan">The plan of the resource.</param>
            <param name="properties">The resource properties.</param>
            <param name="kind">The kind of the resource.</param>
            <param name="managedBy">ID of the resource that manages this
            resource.</param>
            <param name="sku">The SKU of the resource.</param>
            <param name="identity">The identity of the resource.</param>
            <param name="createdTime">The created time of the resource. This is
            only present if requested via the $expand query parameter.</param>
            <param name="changedTime">The changed time of the resource. This is
            only present if requested via the $expand query parameter.</param>
            <param name="provisioningState">The provisioning state of the
            resource. This is only present if requested via the $expand query
            parameter.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.CreatedTime">
            <summary>
            Gets the created time of the resource. This is only present if
            requested via the $expand query parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.ChangedTime">
            <summary>
            Gets the changed time of the resource. This is only present if
            requested via the $expand query parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.ProvisioningState">
            <summary>
            Gets the provisioning state of the resource. This is only present
            if requested via the $expand query parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceExpanded.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange">
            <summary>
            Information about a single resource change predicted by What-If
            operation.
            </summary>
            <summary>
            Information about a single resource change predicted by What-If
            operation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.ChangeType,System.Object,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange})" -->
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.#ctor">
            <summary>
            Initializes a new instance of the WhatIfChange class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.ChangeType,System.String,System.Object,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange})">
            <summary>
            Initializes a new instance of the WhatIfChange class.
            </summary>
            <param name="resourceId">Resource ID</param>
            <param name="changeType">Type of change that will be made to the
            resource when the deployment is executed. Possible values include:
            'Create', 'Delete', 'Ignore', 'Deploy', 'NoChange', 'Modify',
            'Unsupported'</param>
            <param name="unsupportedReason">The explanation about why the
            resource is unsupported by What-If.</param>
            <param name="before">The snapshot of the resource before the
            deployment is executed.</param>
            <param name="after">The predicted snapshot of the resource after
            the deployment is executed.</param>
            <param name="delta">The predicted changes to resource
            properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.ResourceId">
            <summary>
            Gets or sets resource ID
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.ChangeType">
            <summary>
            Gets or sets type of change that will be made to the resource when
            the deployment is executed. Possible values include: 'Create',
            'Delete', 'Ignore', 'Deploy', 'NoChange', 'Modify', 'Unsupported'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.UnsupportedReason">
            <summary>
            Gets or sets the explanation about why the resource is unsupported
            by What-If.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.Before">
            <summary>
            Gets or sets the snapshot of the resource before the deployment is
            executed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.After">
            <summary>
            Gets or sets the predicted snapshot of the resource after the
            deployment is executed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.Delta">
            <summary>
            Gets or sets the predicted changes to resource properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Alias">
            <summary>
            The alias type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Alias.#ctor">
            <summary>
            Initializes a new instance of the Alias class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Alias.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.AliasPath},System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.AliasType},System.String,Microsoft.Azure.Management.ResourceManager.Models.AliasPattern,Microsoft.Azure.Management.ResourceManager.Models.AliasPathMetadata)">
            <summary>
            Initializes a new instance of the Alias class.
            </summary>
            <param name="name">The alias name.</param>
            <param name="paths">The paths for an alias.</param>
            <param name="type">The type of the alias. Possible values include:
            'NotSpecified', 'PlainText', 'Mask'</param>
            <param name="defaultPath">The default path for an alias.</param>
            <param name="defaultPattern">The default pattern for an
            alias.</param>
            <param name="defaultMetadata">The default alias path metadata.
            Applies to the default path and to any alias path that doesn't have
            metadata</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Alias.Name">
            <summary>
            Gets or sets the alias name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Alias.Paths">
            <summary>
            Gets or sets the paths for an alias.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Alias.Type">
            <summary>
            Gets or sets the type of the alias. Possible values include:
            'NotSpecified', 'PlainText', 'Mask'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Alias.DefaultPath">
            <summary>
            Gets or sets the default path for an alias.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Alias.DefaultPattern">
            <summary>
            Gets or sets the default pattern for an alias.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Alias.DefaultMetadata">
            <summary>
            Gets the default alias path metadata. Applies to the default path
            and to any alias path that doesn't have metadata
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AliasPath">
            <summary>
            The type of the paths for alias.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AliasPath.#ctor">
            <summary>
            Initializes a new instance of the AliasPath class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AliasPath.#ctor(System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.ResourceManager.Models.AliasPattern,Microsoft.Azure.Management.ResourceManager.Models.AliasPathMetadata)">
            <summary>
            Initializes a new instance of the AliasPath class.
            </summary>
            <param name="path">The path of an alias.</param>
            <param name="apiVersions">The API versions.</param>
            <param name="pattern">The pattern for an alias path.</param>
            <param name="metadata">The metadata of the alias path. If missing,
            fall back to the default metadata of the alias.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPath.Path">
            <summary>
            Gets or sets the path of an alias.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPath.ApiVersions">
            <summary>
            Gets or sets the API versions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPath.Pattern">
            <summary>
            Gets or sets the pattern for an alias path.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPath.Metadata">
            <summary>
            Gets the metadata of the alias path. If missing, fall back to the
            default metadata of the alias.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AliasPathAttributes">
            <summary>
            Defines values for AliasPathAttributes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathAttributes.None">
            <summary>
            The token that the alias path is referring to has no attributes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathAttributes.Modifiable">
            <summary>
            The token that the alias path is referring to is modifiable by
            policies with 'modify' effect.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AliasPathMetadata.#ctor">
            <summary>
            Initializes a new instance of the AliasPathMetadata class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AliasPathMetadata.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AliasPathMetadata class.
            </summary>
            <param name="type">The type of the token that the alias path is
            referring to. Possible values include: 'NotSpecified', 'Any',
            'String', 'Object', 'Array', 'Integer', 'Number', 'Boolean'</param>
            <param name="attributes">The attributes of the token that the alias
            path is referring to. Possible values include: 'None',
            'Modifiable'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPathMetadata.Type">
            <summary>
            Gets the type of the token that the alias path is referring to.
            Possible values include: 'NotSpecified', 'Any', 'String', 'Object',
            'Array', 'Integer', 'Number', 'Boolean'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPathMetadata.Attributes">
            <summary>
            Gets the attributes of the token that the alias path is referring
            to. Possible values include: 'None', 'Modifiable'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType">
            <summary>
            Defines values for AliasPathTokenType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.NotSpecified">
            <summary>
            The token type is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.Any">
            <summary>
            The token type can be anything.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.String">
            <summary>
            The token type is string.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.Object">
            <summary>
            The token type is object.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.Array">
            <summary>
            The token type is array.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.Integer">
            <summary>
            The token type is integer.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.Number">
            <summary>
            The token type is number.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPathTokenType.Boolean">
            <summary>
            The token type is boolean.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AliasPattern">
            <summary>
            The type of the pattern for an alias path.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AliasPattern.#ctor">
            <summary>
            Initializes a new instance of the AliasPattern class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AliasPattern.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.AliasPatternType})">
            <summary>
            Initializes a new instance of the AliasPattern class.
            </summary>
            <param name="phrase">The alias pattern phrase.</param>
            <param name="variable">The alias pattern variable.</param>
            <param name="type">The type of alias pattern. Possible values
            include: 'NotSpecified', 'Extract'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPattern.Phrase">
            <summary>
            Gets or sets the alias pattern phrase.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPattern.Variable">
            <summary>
            Gets or sets the alias pattern variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AliasPattern.Type">
            <summary>
            Gets or sets the type of alias pattern. Possible values include:
            'NotSpecified', 'Extract'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AliasPatternType">
            <summary>
            Defines values for AliasPatternType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPatternType.NotSpecified">
            <summary>
            NotSpecified is not allowed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasPatternType.Extract">
            <summary>
            Extract is the only allowed value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AliasType">
            <summary>
            Defines values for AliasType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasType.NotSpecified">
            <summary>
            Alias type is unknown (same as not providing alias type).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasType.PlainText">
            <summary>
            Alias value is not secret.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.AliasType.Mask">
            <summary>
            Alias value is secret.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ApiProfile.#ctor">
            <summary>
            Initializes a new instance of the ApiProfile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ApiProfile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ApiProfile class.
            </summary>
            <param name="profileVersion">The profile version.</param>
            <param name="apiVersion">The API version.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ApiProfile.ProfileVersion">
            <summary>
            Gets the profile version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ApiProfile.ApiVersion">
            <summary>
            Gets the API version.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile">
            <summary>
            Authorization Profile
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.#ctor">
            <summary>
            Initializes a new instance of the AuthorizationProfile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.#ctor(System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the AuthorizationProfile class.
            </summary>
            <param name="requestedTime">The requested time</param>
            <param name="requester">The requester</param>
            <param name="requesterObjectId">The requester object id</param>
            <param name="approvedTime">The approved time</param>
            <param name="approver">The approver</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.RequestedTime">
            <summary>
            Gets the requested time
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.Requester">
            <summary>
            Gets the requester
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.RequesterObjectId">
            <summary>
            Gets the requester object id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.ApprovedTime">
            <summary>
            Gets the approved time
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile.Approver">
            <summary>
            Gets the approver
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript">
            <summary>
            Object model for the Azure CLI script.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.#ctor">
            <summary>
            Initializes a new instance of the AzureCliScript class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.#ctor(System.String,System.TimeSpan,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.SystemData,Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration,Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable},System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the AzureCliScript class.
            </summary>
            <param name="location">The location of the ACI and the storage
            account for the deployment script.</param>
            <param name="retentionInterval">Interval for which the service
            retains the script resource after it reaches a terminal state.
            Resource will be deleted when this duration expires. Duration is
            based on ISO 8601 pattern (for example P7D means one week).</param>
            <param name="azCliVersion">Azure CLI module version to be
            used.</param>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="identity">Optional property. Managed identity to be
            used for this deployment script. Currently, only user-assigned MSI
            is supported.</param>
            <param name="tags">Resource tags.</param>
            <param name="systemData">The system metadata related to this
            resource.</param>
            <param name="containerSettings">Container settings.</param>
            <param name="storageAccountSettings">Storage Account
            settings.</param>
            <param name="cleanupPreference">The clean up preference when the
            script execution gets in a terminal state. Default setting is
            'Always'. Possible values include: 'Always', 'OnSuccess',
            'OnExpiration'</param>
            <param name="provisioningState">State of the script execution. This
            only appears in the response. Possible values include: 'Creating',
            'ProvisioningResources', 'Running', 'Succeeded', 'Failed',
            'Canceled'</param>
            <param name="status">Contains the results of script
            execution.</param>
            <param name="outputs">List of script outputs.</param>
            <param name="primaryScriptUri">Uri for the script. This is the
            entry point for the external script.</param>
            <param name="supportingScriptUris">Supporting files for the
            external script.</param>
            <param name="scriptContent">Script body.</param>
            <param name="arguments">Command line arguments to pass to the
            script. Arguments are separated by spaces. ex: -Name blue*
            -Location 'West US 2' </param>
            <param name="environmentVariables">The environment variables to
            pass over to the script.</param>
            <param name="forceUpdateTag">Gets or sets how the deployment script
            should be forced to execute even if the script resource has not
            changed. Can be current time stamp or a GUID.</param>
            <param name="timeout">Maximum allowed script execution time
            specified in ISO 8601 format. Default value is PT1H</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ContainerSettings">
            <summary>
            Gets or sets container settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.StorageAccountSettings">
            <summary>
            Gets or sets storage Account settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.CleanupPreference">
            <summary>
            Gets or sets the clean up preference when the script execution gets
            in a terminal state. Default setting is 'Always'. Possible values
            include: 'Always', 'OnSuccess', 'OnExpiration'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ProvisioningState">
            <summary>
            Gets state of the script execution. This only appears in the
            response. Possible values include: 'Creating',
            'ProvisioningResources', 'Running', 'Succeeded', 'Failed',
            'Canceled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Status">
            <summary>
            Gets contains the results of script execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Outputs">
            <summary>
            Gets list of script outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.PrimaryScriptUri">
            <summary>
            Gets or sets uri for the script. This is the entry point for the
            external script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.SupportingScriptUris">
            <summary>
            Gets or sets supporting files for the external script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ScriptContent">
            <summary>
            Gets or sets script body.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Arguments">
            <summary>
            Gets or sets command line arguments to pass to the script.
            Arguments are separated by spaces. ex: -Name blue* -Location 'West
            US 2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.EnvironmentVariables">
            <summary>
            Gets or sets the environment variables to pass over to the script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.ForceUpdateTag">
            <summary>
            Gets or sets how the deployment script should be forced to execute
            even if the script resource has not changed. Can be current time
            stamp or a GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.RetentionInterval">
            <summary>
            Gets or sets interval for which the service retains the script
            resource after it reaches a terminal state. Resource will be
            deleted when this duration expires. Duration is based on ISO 8601
            pattern (for example P7D means one week).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Timeout">
            <summary>
            Gets or sets maximum allowed script execution time specified in ISO
            8601 format. Default value is PT1H
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.AzCliVersion">
            <summary>
            Gets or sets azure CLI module version to be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzureCliScript.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript">
            <summary>
            Object model for the Azure PowerShell script.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.#ctor">
            <summary>
            Initializes a new instance of the AzurePowerShellScript class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.#ctor(System.String,System.TimeSpan,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.SystemData,Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration,Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable},System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the AzurePowerShellScript class.
            </summary>
            <param name="location">The location of the ACI and the storage
            account for the deployment script.</param>
            <param name="retentionInterval">Interval for which the service
            retains the script resource after it reaches a terminal state.
            Resource will be deleted when this duration expires. Duration is
            based on ISO 8601 pattern (for example P7D means one week).</param>
            <param name="azPowerShellVersion">Azure PowerShell module version
            to be used.</param>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="identity">Optional property. Managed identity to be
            used for this deployment script. Currently, only user-assigned MSI
            is supported.</param>
            <param name="tags">Resource tags.</param>
            <param name="systemData">The system metadata related to this
            resource.</param>
            <param name="containerSettings">Container settings.</param>
            <param name="storageAccountSettings">Storage Account
            settings.</param>
            <param name="cleanupPreference">The clean up preference when the
            script execution gets in a terminal state. Default setting is
            'Always'. Possible values include: 'Always', 'OnSuccess',
            'OnExpiration'</param>
            <param name="provisioningState">State of the script execution. This
            only appears in the response. Possible values include: 'Creating',
            'ProvisioningResources', 'Running', 'Succeeded', 'Failed',
            'Canceled'</param>
            <param name="status">Contains the results of script
            execution.</param>
            <param name="outputs">List of script outputs.</param>
            <param name="primaryScriptUri">Uri for the script. This is the
            entry point for the external script.</param>
            <param name="supportingScriptUris">Supporting files for the
            external script.</param>
            <param name="scriptContent">Script body.</param>
            <param name="arguments">Command line arguments to pass to the
            script. Arguments are separated by spaces. ex: -Name blue*
            -Location 'West US 2' </param>
            <param name="environmentVariables">The environment variables to
            pass over to the script.</param>
            <param name="forceUpdateTag">Gets or sets how the deployment script
            should be forced to execute even if the script resource has not
            changed. Can be current time stamp or a GUID.</param>
            <param name="timeout">Maximum allowed script execution time
            specified in ISO 8601 format. Default value is PT1H</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.ContainerSettings">
            <summary>
            Gets or sets container settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.StorageAccountSettings">
            <summary>
            Gets or sets storage Account settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.CleanupPreference">
            <summary>
            Gets or sets the clean up preference when the script execution gets
            in a terminal state. Default setting is 'Always'. Possible values
            include: 'Always', 'OnSuccess', 'OnExpiration'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.ProvisioningState">
            <summary>
            Gets state of the script execution. This only appears in the
            response. Possible values include: 'Creating',
            'ProvisioningResources', 'Running', 'Succeeded', 'Failed',
            'Canceled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.Status">
            <summary>
            Gets contains the results of script execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.Outputs">
            <summary>
            Gets list of script outputs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.PrimaryScriptUri">
            <summary>
            Gets or sets uri for the script. This is the entry point for the
            external script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.SupportingScriptUris">
            <summary>
            Gets or sets supporting files for the external script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.ScriptContent">
            <summary>
            Gets or sets script body.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.Arguments">
            <summary>
            Gets or sets command line arguments to pass to the script.
            Arguments are separated by spaces. ex: -Name blue* -Location 'West
            US 2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.EnvironmentVariables">
            <summary>
            Gets or sets the environment variables to pass over to the script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.ForceUpdateTag">
            <summary>
            Gets or sets how the deployment script should be forced to execute
            even if the script resource has not changed. Can be current time
            stamp or a GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.RetentionInterval">
            <summary>
            Gets or sets interval for which the service retains the script
            resource after it reaches a terminal state. Resource will be
            deleted when this duration expires. Duration is based on ISO 8601
            pattern (for example P7D means one week).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.Timeout">
            <summary>
            Gets or sets maximum allowed script execution time specified in ISO
            8601 format. Default value is PT1H
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.AzPowerShellVersion">
            <summary>
            Gets or sets azure PowerShell module version to be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzurePowerShellScript.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase">
            <summary>
            Common properties for all Azure resources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase.#ctor">
            <summary>
            Initializes a new instance of the AzureResourceBase class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData)">
            <summary>
            Initializes a new instance of the AzureResourceBase class.
            </summary>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase.Id">
            <summary>
            Gets string Id used to locate any resource on Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase.Name">
            <summary>
            Gets name of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase.Type">
            <summary>
            Gets type of this resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.AzureResourceBase.SystemData">
            <summary>
            Gets azure Resource Manager metadata containing createdBy and
            modifiedBy information.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.BasicDependency">
            <summary>
            Deployment dependency information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.BasicDependency.#ctor">
            <summary>
            Initializes a new instance of the BasicDependency class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.BasicDependency.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the BasicDependency class.
            </summary>
            <param name="id">The ID of the dependency.</param>
            <param name="resourceType">The dependency resource type.</param>
            <param name="resourceName">The dependency resource name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.BasicDependency.Id">
            <summary>
            Gets or sets the ID of the dependency.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.BasicDependency.ResourceType">
            <summary>
            Gets or sets the dependency resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.BasicDependency.ResourceName">
            <summary>
            Gets or sets the dependency resource name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ChangeType">
            <summary>
            Defines values for ChangeType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.Create">
            <summary>
            The resource does not exist in the current state but is present in
            the desired state. The resource will be created when the deployment
            is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.Delete">
            <summary>
            The resource exists in the current state and is missing from the
            desired state. The resource will be deleted when the deployment is
            executed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.Ignore">
            <summary>
            The resource exists in the current state and is missing from the
            desired state. The resource will not be deployed or modified when
            the deployment is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.Deploy">
            <summary>
            The resource exists in the current state and the desired state and
            will be redeployed when the deployment is executed. The properties
            of the resource may or may not change.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.NoChange">
            <summary>
            The resource exists in the current state and the desired state and
            will be redeployed when the deployment is executed. The properties
            of the resource will not change.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.Modify">
            <summary>
            The resource exists in the current state and the desired state and
            will be redeployed when the deployment is executed. The properties
            of the resource will change.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ChangeType.Unsupported">
            <summary>
            The resource is not supported by What-If.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.CheckResourceNameResult">
            <summary>
            Resource Name valid if not a reserved word, does not contain a reserved
            word and does not start with a reserved word
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.CheckResourceNameResult.#ctor">
            <summary>
            Initializes a new instance of the CheckResourceNameResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.CheckResourceNameResult.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CheckResourceNameResult class.
            </summary>
            <param name="name">Name of Resource</param>
            <param name="type">Type of Resource</param>
            <param name="status">Is the resource name Allowed or Reserved.
            Possible values include: 'Allowed', 'Reserved'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.CheckResourceNameResult.Name">
            <summary>
            Gets or sets name of Resource
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.CheckResourceNameResult.Type">
            <summary>
            Gets or sets type of Resource
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.CheckResourceNameResult.Status">
            <summary>
            Gets or sets is the resource name Allowed or Reserved. Possible
            values include: 'Allowed', 'Reserved'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.CleanupOptions">
            <summary>
            Defines values for CleanupOptions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration">
            <summary>
            Settings to customize ACI container instance.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the ContainerConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContainerConfiguration class.
            </summary>
            <param name="containerGroupName">Container group name, if not
            specified then the name will get auto-generated. Not specifying a
            'containerGroupName' indicates the system to generate a unique name
            which might end up flagging an Azure Policy as non-compliant. Use
            'containerGroupName' when you have an Azure Policy that expects a
            specific naming convention or when you want to fully control the
            name. 'containerGroupName' property must be between 1 and 63
            characters long, must contain only lowercase letters, numbers, and
            dashes and it cannot start or end with a dash and consecutive
            dashes are not allowed. To specify a 'containerGroupName', add the
            following object to properties: { "containerSettings": {
            "containerGroupName": "contoso-container" } }. If you do not want
            to specify a 'containerGroupName' then do not add
            'containerSettings' property.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration.ContainerGroupName">
            <summary>
            Gets or sets container group name, if not specified then the name
            will get auto-generated. Not specifying a 'containerGroupName'
            indicates the system to generate a unique name which might end up
            flagging an Azure Policy as non-compliant. Use 'containerGroupName'
            when you have an Azure Policy that expects a specific naming
            convention or when you want to fully control the name.
            'containerGroupName' property must be between 1 and 63 characters
            long, must contain only lowercase letters, numbers, and dashes and
            it cannot start or end with a dash and consecutive dashes are not
            allowed. To specify a 'containerGroupName', add the following
            object to properties: { "containerSettings": {
            "containerGroupName": "contoso-container" } }. If you do not want
            to specify a 'containerGroupName' then do not add
            'containerSettings' property.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ContainerConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.CreatedByType">
            <summary>
            Defines values for CreatedByType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DataEffect">
            <summary>
            The data effect definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DataEffect.#ctor">
            <summary>
            Initializes a new instance of the DataEffect class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DataEffect.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the DataEffect class.
            </summary>
            <param name="name">The data effect name.</param>
            <param name="detailsSchema">The data effect details schema.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataEffect.Name">
            <summary>
            Gets or sets the data effect name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataEffect.DetailsSchema">
            <summary>
            Gets or sets the data effect details schema.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition">
            <summary>
            The custom resource function definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition.#ctor">
            <summary>
            Initializes a new instance of the
            DataManifestCustomResourceFunctionDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the
            DataManifestCustomResourceFunctionDefinition class.
            </summary>
            <param name="name">The function name as it will appear in the
            policy rule. eg - 'vault'.</param>
            <param name="fullyQualifiedResourceType">The fully qualified
            control plane resource type that this function represents. eg -
            'Microsoft.KeyVault/vaults'.</param>
            <param name="defaultProperties">The top-level properties that can
            be selected on the function's output. eg - [ "name", "location" ]
            if vault().name and vault().location are supported</param>
            <param name="allowCustomProperties">A value indicating whether the
            custom properties within the property bag are allowed. Needs
            api-version to be specified in the policy rule eg -
            vault('2019-06-01').</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition.Name">
            <summary>
            Gets or sets the function name as it will appear in the policy
            rule. eg - 'vault'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition.FullyQualifiedResourceType">
            <summary>
            Gets or sets the fully qualified control plane resource type that
            this function represents. eg - 'Microsoft.KeyVault/vaults'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition.DefaultProperties">
            <summary>
            Gets or sets the top-level properties that can be selected on the
            function's output. eg - [ "name", "location" ] if vault().name and
            vault().location are supported
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition.AllowCustomProperties">
            <summary>
            Gets or sets a value indicating whether the custom properties
            within the property bag are allowed. Needs api-version to be
            specified in the policy rule eg - vault('2019-06-01').
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest">
            <summary>
            The data policy manifest.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.#ctor">
            <summary>
            Initializes a new instance of the DataPolicyManifest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.#ctor(System.Collections.Generic.IList{System.String},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ResourceTypeAliases},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.DataEffect},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.DataManifestCustomResourceFunctionDefinition},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the DataPolicyManifest class.
            </summary>
            <param name="namespaces">The list of namespaces for the data policy
            manifest.</param>
            <param name="policyMode">The policy mode of the data policy
            manifest.</param>
            <param name="isBuiltInOnly">A value indicating whether policy mode
            is allowed only in built-in definitions.</param>
            <param name="resourceTypeAliases">An array of resource type
            aliases.</param>
            <param name="effects">The effect definition.</param>
            <param name="fieldValues">The non-alias field accessor values that
            can be used in the policy rule.</param>
            <param name="standard">The standard resource functions
            (subscription and/or resourceGroup).</param>
            <param name="custom">An array of data manifest custom resource
            definition.</param>
            <param name="id">The ID of the data policy manifest.</param>
            <param name="name">The name of the data policy manifest (it's the
            same as the Policy Mode).</param>
            <param name="type">The type of the resource
            (Microsoft.Authorization/dataPolicyManifests).</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Namespaces">
            <summary>
            Gets or sets the list of namespaces for the data policy manifest.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.PolicyMode">
            <summary>
            Gets or sets the policy mode of the data policy manifest.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.IsBuiltInOnly">
            <summary>
            Gets or sets a value indicating whether policy mode is allowed only
            in built-in definitions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.ResourceTypeAliases">
            <summary>
            Gets or sets an array of resource type aliases.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Effects">
            <summary>
            Gets or sets the effect definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.FieldValues">
            <summary>
            Gets or sets the non-alias field accessor values that can be used
            in the policy rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Standard">
            <summary>
            Gets or sets the standard resource functions (subscription and/or
            resourceGroup).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Custom">
            <summary>
            Gets or sets an array of data manifest custom resource definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Id">
            <summary>
            Gets the ID of the data policy manifest.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Name">
            <summary>
            Gets the name of the data policy manifest (it's the same as the
            Policy Mode).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DataPolicyManifest.Type">
            <summary>
            Gets the type of the resource
            (Microsoft.Authorization/dataPolicyManifests).
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DebugSetting">
            <summary>
            The debug setting.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DebugSetting.#ctor">
            <summary>
            Initializes a new instance of the DebugSetting class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DebugSetting.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DebugSetting class.
            </summary>
            <param name="detailLevel">Specifies the type of information to log
            for debugging. The permitted values are none, requestContent,
            responseContent, or both requestContent and responseContent
            separated by a comma. The default is none. When setting this value,
            carefully consider the type of information you are passing in
            during deployment. By logging information about the request or
            response, you could potentially expose sensitive data that is
            retrieved through the deployment operations.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DebugSetting.DetailLevel">
            <summary>
            Gets or sets specifies the type of information to log for
            debugging. The permitted values are none, requestContent,
            responseContent, or both requestContent and responseContent
            separated by a comma. The default is none. When setting this value,
            carefully consider the type of information you are passing in
            during deployment. By logging information about the request or
            response, you could potentially expose sensitive data that is
            retrieved through the deployment operations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Dependency">
            <summary>
            Deployment dependency information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Dependency.#ctor">
            <summary>
            Initializes a new instance of the Dependency class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Dependency.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.BasicDependency},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Dependency class.
            </summary>
            <param name="dependsOn">The list of dependencies.</param>
            <param name="id">The ID of the dependency.</param>
            <param name="resourceType">The dependency resource type.</param>
            <param name="resourceName">The dependency resource name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Dependency.DependsOn">
            <summary>
            Gets or sets the list of dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Dependency.Id">
            <summary>
            Gets or sets the ID of the dependency.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Dependency.ResourceType">
            <summary>
            Gets or sets the dependency resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Dependency.ResourceName">
            <summary>
            Gets or sets the dependency resource name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Deployment">
            <summary>
            Deployment operation parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Deployment.#ctor">
            <summary>
            Initializes a new instance of the Deployment class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Deployment.#ctor(Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Deployment class.
            </summary>
            <param name="properties">The deployment properties.</param>
            <param name="location">The location to store the deployment
            data.</param>
            <param name="tags">Deployment tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Deployment.Location">
            <summary>
            Gets or sets the location to store the deployment data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Deployment.Properties">
            <summary>
            Gets or sets the deployment properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Deployment.Tags">
            <summary>
            Gets or sets deployment tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Deployment.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExportResult">
            <summary>
            The deployment export result.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExportResult.#ctor">
            <summary>
            Initializes a new instance of the DeploymentExportResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExportResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the DeploymentExportResult class.
            </summary>
            <param name="template">The template content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExportResult.Template">
            <summary>
            Gets or sets the template content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended">
            <summary>
            Deployment information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.#ctor">
            <summary>
            Initializes a new instance of the DeploymentExtended class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the DeploymentExtended class.
            </summary>
            <param name="id">The ID of the deployment.</param>
            <param name="name">The name of the deployment.</param>
            <param name="type">The type of the deployment.</param>
            <param name="location">the location of the deployment.</param>
            <param name="properties">Deployment properties.</param>
            <param name="tags">Deployment tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Id">
            <summary>
            Gets the ID of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Name">
            <summary>
            Gets the name of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Type">
            <summary>
            Gets the type of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Location">
            <summary>
            Gets or sets the location of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Properties">
            <summary>
            Gets or sets deployment properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Tags">
            <summary>
            Gets or sets deployment tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtended.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter">
            <summary>
            Deployment filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter.#ctor">
            <summary>
            Initializes a new instance of the DeploymentExtendedFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DeploymentExtendedFilter class.
            </summary>
            <param name="provisioningState">The provisioning state.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter.ProvisioningState">
            <summary>
            Gets or sets the provisioning state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentMode">
            <summary>
            Defines values for DeploymentMode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperation">
            <summary>
            Deployment operation information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperation.#ctor">
            <summary>
            Initializes a new instance of the DeploymentOperation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperation.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties)">
            <summary>
            Initializes a new instance of the DeploymentOperation class.
            </summary>
            <param name="id">Full deployment operation ID.</param>
            <param name="operationId">Deployment operation ID.</param>
            <param name="properties">Deployment properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperation.Id">
            <summary>
            Gets full deployment operation ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperation.OperationId">
            <summary>
            Gets deployment operation ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperation.Properties">
            <summary>
            Gets or sets deployment properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties">
            <summary>
            Deployment operation properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.#ctor">
            <summary>
            Initializes a new instance of the DeploymentOperationProperties
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.#ctor(System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation},System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.StatusMessage,Microsoft.Azure.Management.ResourceManager.Models.TargetResource,Microsoft.Azure.Management.ResourceManager.Models.HttpMessage,Microsoft.Azure.Management.ResourceManager.Models.HttpMessage)">
            <summary>
            Initializes a new instance of the DeploymentOperationProperties
            class.
            </summary>
            <param name="provisioningOperation">The name of the current
            provisioning operation. Possible values include: 'NotSpecified',
            'Create', 'Delete', 'Waiting', 'AzureAsyncOperationWaiting',
            'ResourceCacheWaiting', 'Action', 'Read',
            'EvaluateDeploymentOutput', 'DeploymentCleanup'</param>
            <param name="provisioningState">The state of the
            provisioning.</param>
            <param name="timestamp">The date and time of the operation.</param>
            <param name="duration">The duration of the operation.</param>
            <param name="serviceRequestId">Deployment operation service request
            id.</param>
            <param name="statusCode">Operation status code from the resource
            provider. This property may not be set if a response has not yet
            been received.</param>
            <param name="statusMessage">Operation status message from the
            resource provider. This property is optional.  It will only be
            provided if an error was received from the resource
            provider.</param>
            <param name="targetResource">The target resource.</param>
            <param name="request">The HTTP request message.</param>
            <param name="response">The HTTP response message.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.ProvisioningOperation">
            <summary>
            Gets the name of the current provisioning operation. Possible
            values include: 'NotSpecified', 'Create', 'Delete', 'Waiting',
            'AzureAsyncOperationWaiting', 'ResourceCacheWaiting', 'Action',
            'Read', 'EvaluateDeploymentOutput', 'DeploymentCleanup'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.ProvisioningState">
            <summary>
            Gets the state of the provisioning.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.Timestamp">
            <summary>
            Gets the date and time of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.Duration">
            <summary>
            Gets the duration of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.ServiceRequestId">
            <summary>
            Gets deployment operation service request id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.StatusCode">
            <summary>
            Gets operation status code from the resource provider. This
            property may not be set if a response has not yet been received.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.StatusMessage">
            <summary>
            Gets operation status message from the resource provider. This
            property is optional.  It will only be provided if an error was
            received from the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.TargetResource">
            <summary>
            Gets the target resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.Request">
            <summary>
            Gets the HTTP request message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentOperationProperties.Response">
            <summary>
            Gets the HTTP response message.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties">
            <summary>
            Deployment properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.#ctor">
            <summary>
            Initializes a new instance of the DeploymentProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.#ctor(Microsoft.Azure.Management.ResourceManager.Models.DeploymentMode,System.Object,Microsoft.Azure.Management.ResourceManager.Models.TemplateLink,System.Object,Microsoft.Azure.Management.ResourceManager.Models.ParametersLink,Microsoft.Azure.Management.ResourceManager.Models.DebugSetting,Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment,Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptions)">
            <summary>
            Initializes a new instance of the DeploymentProperties class.
            </summary>
            <param name="mode">The mode that is used to deploy resources. This
            value can be either Incremental or Complete. In Incremental mode,
            resources are deployed without deleting existing resources that are
            not included in the template. In Complete mode, resources are
            deployed and existing resources in the resource group that are not
            included in the template are deleted. Be careful when using
            Complete mode as you may unintentionally delete resources. Possible
            values include: 'Incremental', 'Complete'</param>
            <param name="template">The template content. You use this element
            when you want to pass the template syntax directly in the request
            rather than link to an existing template. It can be a JObject or
            well-formed JSON string. Use either the templateLink property or
            the template property, but not both.</param>
            <param name="templateLink">The URI of the template. Use either the
            templateLink property or the template property, but not
            both.</param>
            <param name="parameters">Name and value pairs that define the
            deployment parameters for the template. You use this element when
            you want to provide the parameter values directly in the request
            rather than link to an existing parameter file. Use either the
            parametersLink property or the parameters property, but not both.
            It can be a JObject or a well formed JSON string.</param>
            <param name="parametersLink">The URI of parameters file. You use
            this element to link to an existing parameters file. Use either the
            parametersLink property or the parameters property, but not
            both.</param>
            <param name="debugSetting">The debug setting of the
            deployment.</param>
            <param name="onErrorDeployment">The deployment on error
            behavior.</param>
            <param name="expressionEvaluationOptions">Specifies whether
            template expressions are evaluated within the scope of the parent
            template or nested template. Only applicable to nested templates.
            If not specified, default value is outer.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.Template">
            <summary>
            Gets or sets the template content. You use this element when you
            want to pass the template syntax directly in the request rather
            than link to an existing template. It can be a JObject or
            well-formed JSON string. Use either the templateLink property or
            the template property, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.TemplateLink">
            <summary>
            Gets or sets the URI of the template. Use either the templateLink
            property or the template property, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.Parameters">
            <summary>
            Gets or sets name and value pairs that define the deployment
            parameters for the template. You use this element when you want to
            provide the parameter values directly in the request rather than
            link to an existing parameter file. Use either the parametersLink
            property or the parameters property, but not both. It can be a
            JObject or a well formed JSON string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.ParametersLink">
            <summary>
            Gets or sets the URI of parameters file. You use this element to
            link to an existing parameters file. Use either the parametersLink
            property or the parameters property, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.Mode">
            <summary>
            Gets or sets the mode that is used to deploy resources. This value
            can be either Incremental or Complete. In Incremental mode,
            resources are deployed without deleting existing resources that are
            not included in the template. In Complete mode, resources are
            deployed and existing resources in the resource group that are not
            included in the template are deleted. Be careful when using
            Complete mode as you may unintentionally delete resources. Possible
            values include: 'Incremental', 'Complete'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.DebugSetting">
            <summary>
            Gets or sets the debug setting of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.OnErrorDeployment">
            <summary>
            Gets or sets the deployment on error behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.ExpressionEvaluationOptions">
            <summary>
            Gets or sets specifies whether template expressions are evaluated
            within the scope of the parent template or nested template. Only
            applicable to nested templates. If not specified, default value is
            outer.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended">
            <summary>
            Deployment properties with additional details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.#ctor">
            <summary>
            Initializes a new instance of the DeploymentPropertiesExtended
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.String,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.Provider},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.Dependency},Microsoft.Azure.Management.ResourceManager.Models.TemplateLink,System.Object,Microsoft.Azure.Management.ResourceManager.Models.ParametersLink,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.DeploymentMode},Microsoft.Azure.Management.ResourceManager.Models.DebugSetting,Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ResourceReference},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ResourceReference},Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the DeploymentPropertiesExtended
            class.
            </summary>
            <param name="provisioningState">Denotes the state of provisioning.
            Possible values include: 'NotSpecified', 'Accepted', 'Running',
            'Ready', 'Creating', 'Created', 'Deleting', 'Deleted', 'Canceled',
            'Failed', 'Succeeded', 'Updating'</param>
            <param name="correlationId">The correlation ID of the
            deployment.</param>
            <param name="timestamp">The timestamp of the template
            deployment.</param>
            <param name="duration">The duration of the template
            deployment.</param>
            <param name="outputs">Key/value pairs that represent deployment
            output.</param>
            <param name="providers">The list of resource providers needed for
            the deployment.</param>
            <param name="dependencies">The list of deployment
            dependencies.</param>
            <param name="templateLink">The URI referencing the
            template.</param>
            <param name="parameters">Deployment parameters. </param>
            <param name="parametersLink">The URI referencing the parameters.
            </param>
            <param name="mode">The deployment mode. Possible values are
            Incremental and Complete. Possible values include: 'Incremental',
            'Complete'</param>
            <param name="debugSetting">The debug setting of the
            deployment.</param>
            <param name="onErrorDeployment">The deployment on error
            behavior.</param>
            <param name="templateHash">The hash produced for the
            template.</param>
            <param name="outputResources">Array of provisioned
            resources.</param>
            <param name="validatedResources">Array of validated
            resources.</param>
            <param name="error">The deployment error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.ProvisioningState">
            <summary>
            Gets denotes the state of provisioning. Possible values include:
            'NotSpecified', 'Accepted', 'Running', 'Ready', 'Creating',
            'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed',
            'Succeeded', 'Updating'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.CorrelationId">
            <summary>
            Gets the correlation ID of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Timestamp">
            <summary>
            Gets the timestamp of the template deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Duration">
            <summary>
            Gets the duration of the template deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Outputs">
            <summary>
            Gets key/value pairs that represent deployment output.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Providers">
            <summary>
            Gets the list of resource providers needed for the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Dependencies">
            <summary>
            Gets the list of deployment dependencies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.TemplateLink">
            <summary>
            Gets the URI referencing the template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Parameters">
            <summary>
            Gets deployment parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.ParametersLink">
            <summary>
            Gets the URI referencing the parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Mode">
            <summary>
            Gets the deployment mode. Possible values are Incremental and
            Complete. Possible values include: 'Incremental', 'Complete'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.DebugSetting">
            <summary>
            Gets the debug setting of the deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.OnErrorDeployment">
            <summary>
            Gets the deployment on error behavior.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.TemplateHash">
            <summary>
            Gets the hash produced for the template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.OutputResources">
            <summary>
            Gets array of provisioned resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.ValidatedResources">
            <summary>
            Gets array of validated resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Error">
            <summary>
            Gets the deployment error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript">
            <summary>
            Deployment script object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.#ctor">
            <summary>
            Initializes a new instance of the DeploymentScript class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.ResourceManager.Models.SystemData)">
            <summary>
            Initializes a new instance of the DeploymentScript class.
            </summary>
            <param name="location">The location of the ACI and the storage
            account for the deployment script.</param>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="identity">Optional property. Managed identity to be
            used for this deployment script. Currently, only user-assigned MSI
            is supported.</param>
            <param name="tags">Resource tags.</param>
            <param name="systemData">The system metadata related to this
            resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.Identity">
            <summary>
            Gets or sets optional property. Managed identity to be used for
            this deployment script. Currently, only user-assigned MSI is
            supported.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.Location">
            <summary>
            Gets or sets the location of the ACI and the storage account for
            the deployment script.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.SystemData">
            <summary>
            Gets the system metadata related to this resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsError">
            <summary>
            Deployment scripts error response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsError.#ctor">
            <summary>
            Initializes a new instance of the DeploymentScriptsError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsError.#ctor(Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the DeploymentScriptsError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsError.Error">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            <summary>
            Exception thrown for an invalid response with DeploymentScriptsError
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException.#ctor">
            <summary>
            Initializes a new instance of the DeploymentScriptsErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DeploymentScriptsErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the DeploymentScriptsErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter">
            <summary>
            Deployment script parameters to be updated.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter.#ctor">
            <summary>
            Initializes a new instance of the DeploymentScriptUpdateParameter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the DeploymentScriptUpdateParameter
            class.
            </summary>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="tags">Resource tags to be updated.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter.Tags">
            <summary>
            Gets or sets resource tags to be updated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtManagementGroupScopeHeaders">
            <summary>
            Defines headers for WhatIfAtManagementGroupScope operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtManagementGroupScopeHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            DeploymentsWhatIfAtManagementGroupScopeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtManagementGroupScopeHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            DeploymentsWhatIfAtManagementGroupScopeHeaders class.
            </summary>
            <param name="location">URL to get status of this long-running
            operation.</param>
            <param name="retryAfter">Number of seconds to wait before polling
            for status.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtManagementGroupScopeHeaders.Location">
            <summary>
            Gets or sets URL to get status of this long-running operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtManagementGroupScopeHeaders.RetryAfter">
            <summary>
            Gets or sets number of seconds to wait before polling for status.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtSubscriptionScopeHeaders">
            <summary>
            Defines headers for WhatIfAtSubscriptionScope operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtSubscriptionScopeHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            DeploymentsWhatIfAtSubscriptionScopeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtSubscriptionScopeHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            DeploymentsWhatIfAtSubscriptionScopeHeaders class.
            </summary>
            <param name="location">URL to get status of this long-running
            operation.</param>
            <param name="retryAfter">Number of seconds to wait before polling
            for status.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtSubscriptionScopeHeaders.Location">
            <summary>
            Gets or sets URL to get status of this long-running operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtSubscriptionScopeHeaders.RetryAfter">
            <summary>
            Gets or sets number of seconds to wait before polling for status.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtTenantScopeHeaders">
            <summary>
            Defines headers for WhatIfAtTenantScope operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtTenantScopeHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            DeploymentsWhatIfAtTenantScopeHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtTenantScopeHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            DeploymentsWhatIfAtTenantScopeHeaders class.
            </summary>
            <param name="location">URL to get status of this long-running
            operation.</param>
            <param name="retryAfter">Number of seconds to wait before polling
            for status.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtTenantScopeHeaders.Location">
            <summary>
            Gets or sets URL to get status of this long-running operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfAtTenantScopeHeaders.RetryAfter">
            <summary>
            Gets or sets number of seconds to wait before polling for status.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfHeaders">
            <summary>
            Defines headers for WhatIf operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfHeaders.#ctor">
            <summary>
            Initializes a new instance of the DeploymentsWhatIfHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfHeaders.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the DeploymentsWhatIfHeaders class.
            </summary>
            <param name="location">URL to get status of this long-running
            operation.</param>
            <param name="retryAfter">Number of seconds to wait before polling
            for status.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfHeaders.Location">
            <summary>
            Gets or sets URL to get status of this long-running operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentsWhatIfHeaders.RetryAfter">
            <summary>
            Gets or sets number of seconds to wait before polling for status.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentValidateResult">
            <summary>
            Information from validate template deployment response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentValidateResult.#ctor">
            <summary>
            Initializes a new instance of the DeploymentValidateResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentValidateResult.#ctor(Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse,Microsoft.Azure.Management.ResourceManager.Models.DeploymentPropertiesExtended)">
            <summary>
            Initializes a new instance of the DeploymentValidateResult class.
            </summary>
            <param name="error">The deployment validation error.</param>
            <param name="properties">The template deployment
            properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentValidateResult.Error">
            <summary>
            Gets the deployment validation error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentValidateResult.Properties">
            <summary>
            Gets or sets the template deployment properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentValidateResult.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf">
            <summary>
            Deployment What-if operation parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf.#ctor">
            <summary>
            Initializes a new instance of the DeploymentWhatIf class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf.#ctor(Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties,System.String)">
            <summary>
            Initializes a new instance of the DeploymentWhatIf class.
            </summary>
            <param name="properties">The deployment properties.</param>
            <param name="location">The location to store the deployment
            data.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf.Location">
            <summary>
            Gets or sets the location to store the deployment data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf.Properties">
            <summary>
            Gets or sets the deployment properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties">
            <summary>
            Deployment What-if properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties.#ctor">
            <summary>
            Initializes a new instance of the DeploymentWhatIfProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties.#ctor(Microsoft.Azure.Management.ResourceManager.Models.DeploymentMode,System.Object,Microsoft.Azure.Management.ResourceManager.Models.TemplateLink,System.Object,Microsoft.Azure.Management.ResourceManager.Models.ParametersLink,Microsoft.Azure.Management.ResourceManager.Models.DebugSetting,Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment,Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptions,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfSettings)">
            <summary>
            Initializes a new instance of the DeploymentWhatIfProperties class.
            </summary>
            <param name="mode">The mode that is used to deploy resources. This
            value can be either Incremental or Complete. In Incremental mode,
            resources are deployed without deleting existing resources that are
            not included in the template. In Complete mode, resources are
            deployed and existing resources in the resource group that are not
            included in the template are deleted. Be careful when using
            Complete mode as you may unintentionally delete resources. Possible
            values include: 'Incremental', 'Complete'</param>
            <param name="template">The template content. You use this element
            when you want to pass the template syntax directly in the request
            rather than link to an existing template. It can be a JObject or
            well-formed JSON string. Use either the templateLink property or
            the template property, but not both.</param>
            <param name="templateLink">The URI of the template. Use either the
            templateLink property or the template property, but not
            both.</param>
            <param name="parameters">Name and value pairs that define the
            deployment parameters for the template. You use this element when
            you want to provide the parameter values directly in the request
            rather than link to an existing parameter file. Use either the
            parametersLink property or the parameters property, but not both.
            It can be a JObject or a well formed JSON string.</param>
            <param name="parametersLink">The URI of parameters file. You use
            this element to link to an existing parameters file. Use either the
            parametersLink property or the parameters property, but not
            both.</param>
            <param name="debugSetting">The debug setting of the
            deployment.</param>
            <param name="onErrorDeployment">The deployment on error
            behavior.</param>
            <param name="expressionEvaluationOptions">Specifies whether
            template expressions are evaluated within the scope of the parent
            template or nested template. Only applicable to nested templates.
            If not specified, default value is outer.</param>
            <param name="whatIfSettings">Optional What-If operation
            settings.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties.WhatIfSettings">
            <summary>
            Gets or sets optional What-If operation settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfSettings">
            <summary>
            Deployment What-If operation settings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfSettings.#ctor">
            <summary>
            Initializes a new instance of the DeploymentWhatIfSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfSettings.#ctor(System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.WhatIfResultFormat})">
            <summary>
            Initializes a new instance of the DeploymentWhatIfSettings class.
            </summary>
            <param name="resultFormat">The format of the What-If results.
            Possible values include: 'ResourceIdOnly',
            'FullResourcePayloads'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfSettings.ResultFormat">
            <summary>
            Gets or sets the format of the What-If results. Possible values
            include: 'ResourceIdOnly', 'FullResourcePayloads'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.EnforcementMode">
            <summary>
            Defines values for EnforcementMode.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.EnforcementMode.Default">
            <summary>
            The policy effect is enforced during resource creation or update.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.EnforcementMode.DoNotEnforce">
            <summary>
            The policy effect is not enforced during resource creation or
            update.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable">
            <summary>
            The environment variable to pass to the script in the container
            instance.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable.#ctor">
            <summary>
            Initializes a new instance of the EnvironmentVariable class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the EnvironmentVariable class.
            </summary>
            <param name="name">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
            <param name="secureValue">The value of the secure environment
            variable.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable.Name">
            <summary>
            Gets or sets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable.Value">
            <summary>
            Gets or sets the value of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable.SecureValue">
            <summary>
            Gets or sets the value of the secure environment variable.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.EnvironmentVariable.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorAdditionalInfo">
            <summary>
            The resource management error additional info.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorAdditionalInfo.#ctor">
            <summary>
            Initializes a new instance of the ErrorAdditionalInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorAdditionalInfo.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the ErrorAdditionalInfo class.
            </summary>
            <param name="type">The additional info type.</param>
            <param name="info">The additional info.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorAdditionalInfo.Type">
            <summary>
            Gets the additional info type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorAdditionalInfo.Info">
            <summary>
            Gets the additional info.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition">
            <summary>
            Error definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition.#ctor">
            <summary>
            Initializes a new instance of the ErrorDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition})">
            <summary>
            Initializes a new instance of the ErrorDefinition class.
            </summary>
            <param name="code">Service specific error code which serves as the
            substatus for the HTTP error code.</param>
            <param name="message">Description of the error.</param>
            <param name="details">Internal error details.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition.Code">
            <summary>
            Gets service specific error code which serves as the substatus for
            the HTTP error code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition.Message">
            <summary>
            Gets description of the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorDefinition.Details">
            <summary>
            Gets or sets internal error details.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse">
            <summary>
            Error Response
            </summary>
            <remarks>
            Common error response for all Azure Resource Manager APIs to return
            error details for failed operations. (This also follows the OData error
            response format.)
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ErrorAdditionalInfo})">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
            <param name="code">The error code.</param>
            <param name="message">The error message.</param>
            <param name="target">The error target.</param>
            <param name="details">The error details.</param>
            <param name="additionalInfo">The error additional info.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.Target">
            <summary>
            Gets the error target.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.Details">
            <summary>
            Gets the error details.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse.AdditionalInfo">
            <summary>
            Gets the error additional info.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            <summary>
            Exception thrown for an invalid response with ErrorResponse
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ExemptionCategory">
            <summary>
            Defines values for ExemptionCategory.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ExemptionCategory.Waiver">
            <summary>
            This category of exemptions usually means the scope is not
            applicable for the policy.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ExemptionCategory.Mitigated">
            <summary>
            This category of exemptions usually means the mitigation actions
            have been applied to the scope.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest">
            <summary>
            Export resource group template request parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest.#ctor">
            <summary>
            Initializes a new instance of the ExportTemplateRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the ExportTemplateRequest class.
            </summary>
            <param name="resources">The IDs of the resources to filter the
            export by. To export all resources, supply an array with single
            entry '*'.</param>
            <param name="options">The export template options. A CSV-formatted
            list containing zero or more of the following:
            'IncludeParameterDefaultValue', 'IncludeComments',
            'SkipResourceNameParameterization',
            'SkipAllParameterization'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest.Resources">
            <summary>
            Gets or sets the IDs of the resources to filter the export by. To
            export all resources, supply an array with single entry '*'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest.Options">
            <summary>
            Gets or sets the export template options. A CSV-formatted list
            containing zero or more of the following:
            'IncludeParameterDefaultValue', 'IncludeComments',
            'SkipResourceNameParameterization', 'SkipAllParameterization'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptions">
            <summary>
            Specifies whether template expressions are evaluated within the scope
            of the parent template or nested template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptions.#ctor">
            <summary>
            Initializes a new instance of the ExpressionEvaluationOptions
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExpressionEvaluationOptions
            class.
            </summary>
            <param name="scope">The scope to be used for evaluation of
            parameters, variables and functions in a nested template. Possible
            values include: 'NotSpecified', 'Outer', 'Inner'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptions.Scope">
            <summary>
            Gets or sets the scope to be used for evaluation of parameters,
            variables and functions in a nested template. Possible values
            include: 'NotSpecified', 'Outer', 'Inner'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ExpressionEvaluationOptionsScopeType">
            <summary>
            Defines values for ExpressionEvaluationOptionsScopeType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation">
            <summary>
            Resource extended location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation.#ctor">
            <summary>
            Initializes a new instance of the ExtendedLocation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ExtendedLocation class.
            </summary>
            <param name="type">The extended location type. Possible values
            include: 'EdgeZone'</param>
            <param name="name">The extended location name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation.Type">
            <summary>
            Gets or sets the extended location type. Possible values include:
            'EdgeZone'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation.Name">
            <summary>
            Gets or sets the extended location name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocationType">
            <summary>
            Defines values for ExtendedLocationType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.FeatureProperties">
            <summary>
            Information about feature.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.FeatureProperties.#ctor">
            <summary>
            Initializes a new instance of the FeatureProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.FeatureProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FeatureProperties class.
            </summary>
            <param name="state">The registration state of the feature for the
            subscription.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.FeatureProperties.State">
            <summary>
            Gets or sets the registration state of the feature for the
            subscription.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult">
            <summary>
            Previewed feature information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult.#ctor">
            <summary>
            Initializes a new instance of the FeatureResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.FeatureProperties,System.String,System.String)">
            <summary>
            Initializes a new instance of the FeatureResult class.
            </summary>
            <param name="name">The name of the feature.</param>
            <param name="properties">Properties of the previewed
            feature.</param>
            <param name="id">The resource ID of the feature.</param>
            <param name="type">The resource type of the feature.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult.Name">
            <summary>
            Gets or sets the name of the feature.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult.Properties">
            <summary>
            Gets or sets properties of the previewed feature.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult.Id">
            <summary>
            Gets or sets the resource ID of the feature.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.FeatureResult.Type">
            <summary>
            Gets or sets the resource type of the feature.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Filter">
            <summary>
            Defines values for Filter.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter">
            <summary>
            Resource filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter.#ctor">
            <summary>
            Initializes a new instance of the GenericResourceFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the GenericResourceFilter class.
            </summary>
            <param name="resourceType">The resource type.</param>
            <param name="tagname">The tag name.</param>
            <param name="tagvalue">The tag value.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter.ResourceType">
            <summary>
            Gets or sets the resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter.Tagname">
            <summary>
            Gets or sets the tag name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter.Tagvalue">
            <summary>
            Gets or sets the tag value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.HttpMessage">
            <summary>
            HTTP message.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.HttpMessage.#ctor">
            <summary>
            Initializes a new instance of the HttpMessage class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.HttpMessage.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the HttpMessage class.
            </summary>
            <param name="content">HTTP message content.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.HttpMessage.Content">
            <summary>
            Gets or sets HTTP message content.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Identity">
            <summary>
            Identity for the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Identity.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType},System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.IdentityUserAssignedIdentitiesValue})">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
            <param name="principalId">The principal ID of resource
            identity.</param>
            <param name="tenantId">The tenant ID of resource.</param>
            <param name="type">The identity type. Possible values include:
            'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
            'None'</param>
            <param name="userAssignedIdentities">The list of user identities
            associated with the resource. The user identity dictionary key
            references will be ARM resource ids in the form:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Identity.PrincipalId">
            <summary>
            Gets the principal ID of resource identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Identity.TenantId">
            <summary>
            Gets the tenant ID of resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Identity.Type">
            <summary>
            Gets or sets the identity type. Possible values include:
            'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
            'None'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Identity.UserAssignedIdentities">
            <summary>
            Gets or sets the list of user identities associated with the
            resource. The user identity dictionary key references will be ARM
            resource ids in the form:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.IdentityUserAssignedIdentitiesValue.#ctor">
            <summary>
            Initializes a new instance of the
            IdentityUserAssignedIdentitiesValue class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.IdentityUserAssignedIdentitiesValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            IdentityUserAssignedIdentitiesValue class.
            </summary>
            <param name="principalId">The principal id of user assigned
            identity.</param>
            <param name="clientId">The client id of user assigned
            identity.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.IdentityUserAssignedIdentitiesValue.PrincipalId">
            <summary>
            Gets the principal id of user assigned identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.IdentityUserAssignedIdentitiesValue.ClientId">
            <summary>
            Gets the client id of user assigned identity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.LastModifiedByType">
            <summary>
            Defines values for LastModifiedByType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact">
            <summary>
            Represents a Template Spec artifact containing an embedded Azure
            Resource Manager template for use as a linked template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact.#ctor">
            <summary>
            Initializes a new instance of the LinkedTemplateArtifact class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the LinkedTemplateArtifact class.
            </summary>
            <param name="path">A filesystem safe relative path of the
            artifact.</param>
            <param name="template">The Azure Resource Manager template.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact.Path">
            <summary>
            Gets or sets a filesystem safe relative path of the artifact.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact.Template">
            <summary>
            Gets or sets the Azure Resource Manager template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Location">
            <summary>
            Location information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor">
            <summary>
            Initializes a new instance of the Location class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Location.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.LocationType},System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata)">
            <summary>
            Initializes a new instance of the Location class.
            </summary>
            <param name="id">The fully qualified ID of the location. For
            example,
            /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.</param>
            <param name="subscriptionId">The subscription ID.</param>
            <param name="name">The location name.</param>
            <param name="type">The location type. Possible values include:
            'Region', 'EdgeZone'</param>
            <param name="displayName">The display name of the location.</param>
            <param name="regionalDisplayName">The display name of the location
            and its region.</param>
            <param name="metadata">Metadata of the location, such as lat/long,
            paired region, and others.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.Id">
            <summary>
            Gets the fully qualified ID of the location. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.SubscriptionId">
            <summary>
            Gets the subscription ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.Name">
            <summary>
            Gets the location name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.Type">
            <summary>
            Gets the location type. Possible values include: 'Region',
            'EdgeZone'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.DisplayName">
            <summary>
            Gets the display name of the location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.RegionalDisplayName">
            <summary>
            Gets the display name of the location and its region.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Location.Metadata">
            <summary>
            Gets or sets metadata of the location, such as lat/long, paired
            region, and others.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata">
            <summary>
            Location metadata information
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.#ctor">
            <summary>
            Initializes a new instance of the LocationMetadata class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.PairedRegion},System.String)">
            <summary>
            Initializes a new instance of the LocationMetadata class.
            </summary>
            <param name="regionType">The type of the region. Possible values
            include: 'Physical', 'Logical'</param>
            <param name="regionCategory">The category of the region. Possible
            values include: 'Recommended', 'Extended', 'Other'</param>
            <param name="geographyGroup">The geography group of the
            location.</param>
            <param name="longitude">The longitude of the location.</param>
            <param name="latitude">The latitude of the location.</param>
            <param name="physicalLocation">The physical location of the Azure
            location.</param>
            <param name="pairedRegion">The regions paired to this
            region.</param>
            <param name="homeLocation">The home location of an edge
            zone.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.RegionType">
            <summary>
            Gets the type of the region. Possible values include: 'Physical',
            'Logical'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.RegionCategory">
            <summary>
            Gets the category of the region. Possible values include:
            'Recommended', 'Extended', 'Other'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.GeographyGroup">
            <summary>
            Gets the geography group of the location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.Longitude">
            <summary>
            Gets the longitude of the location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.Latitude">
            <summary>
            Gets the latitude of the location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.PhysicalLocation">
            <summary>
            Gets the physical location of the Azure location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.PairedRegion">
            <summary>
            Gets or sets the regions paired to this region.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.LocationMetadata.HomeLocation">
            <summary>
            Gets the home location of an edge zone.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.LocationType">
            <summary>
            Defines values for LocationType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.LockLevel">
            <summary>
            Defines values for LockLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ManagedByTenant">
            <summary>
            Information about a tenant managing the subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagedByTenant.#ctor">
            <summary>
            Initializes a new instance of the ManagedByTenant class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagedByTenant.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ManagedByTenant class.
            </summary>
            <param name="tenantId">The tenant ID of the managing tenant. This
            is a GUID.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagedByTenant.TenantId">
            <summary>
            Gets the tenant ID of the managing tenant. This is a GUID.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity">
            <summary>
            Managed identity generic object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity.#ctor">
            <summary>
            Initializes a new instance of the ManagedServiceIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.UserAssignedIdentity})">
            <summary>
            Initializes a new instance of the ManagedServiceIdentity class.
            </summary>
            <param name="type">Type of the managed identity. Possible values
            include: 'UserAssigned'</param>
            <param name="userAssignedIdentities">The list of user-assigned
            managed identities associated with the resource. Key is the Azure
            resource Id of the managed identity.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity.Type">
            <summary>
            Gets or sets type of the managed identity. Possible values include:
            'UserAssigned'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentity.UserAssignedIdentities">
            <summary>
            Gets or sets the list of user-assigned managed identities
            associated with the resource. Key is the Azure resource Id of the
            managed identity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ManagedServiceIdentityType">
            <summary>
            Defines values for ManagedServiceIdentityType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject">
            <summary>
            The lock information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor">
            <summary>
            Initializes a new instance of the ManagementLockObject class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ManagementLockObject class.
            </summary>
            <param name="level">The level of the lock. Possible values are:
            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users are able to read and modify the resources, but not delete.
            ReadOnly means authorized users can only read from a resource, but
            they can't modify or delete it. Possible values include:
            'NotSpecified', 'CanNotDelete', 'ReadOnly'</param>
            <param name="notes">Notes about the lock. Maximum of 512
            characters.</param>
            <param name="owners">The owners of the lock.</param>
            <param name="id">The resource ID of the lock.</param>
            <param name="type">The resource type of the lock -
            Microsoft.Authorization/locks.</param>
            <param name="name">The name of the lock.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Level">
            <summary>
            Gets or sets the level of the lock. Possible values are:
            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users are able to read and modify the resources, but not delete.
            ReadOnly means authorized users can only read from a resource, but
            they can't modify or delete it. Possible values include:
            'NotSpecified', 'CanNotDelete', 'ReadOnly'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Notes">
            <summary>
            Gets or sets notes about the lock. Maximum of 512 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Owners">
            <summary>
            Gets or sets the owners of the lock.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Id">
            <summary>
            Gets the resource ID of the lock.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Type">
            <summary>
            Gets the resource type of the lock - Microsoft.Authorization/locks.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Name">
            <summary>
            Gets or sets the name of the lock.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner">
            <summary>
            Lock owner properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner.#ctor">
            <summary>
            Initializes a new instance of the ManagementLockOwner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ManagementLockOwner class.
            </summary>
            <param name="applicationId">The application ID of the lock
            owner.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ManagementLockOwner.ApplicationId">
            <summary>
            Gets or sets the application ID of the lock owner.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage">
            <summary>
            A message that describes why a resource is non-compliant with the
            policy. This is shown in 'deny' error messages and on resource's
            non-compliant compliance results.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage.#ctor">
            <summary>
            Initializes a new instance of the NonComplianceMessage class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the NonComplianceMessage class.
            </summary>
            <param name="message">A message that describes why a resource is
            non-compliant with the policy. This is shown in 'deny' error
            messages and on resource's non-compliant compliance
            results.</param>
            <param name="policyDefinitionReferenceId">The policy definition
            reference ID within a policy set definition the message is intended
            for. This is only applicable if the policy assignment assigns a
            policy set definition. If this is not provided the message applies
            to all policies assigned by this policy assignment.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage.Message">
            <summary>
            Gets or sets a message that describes why a resource is
            non-compliant with the policy. This is shown in 'deny' error
            messages and on resource's non-compliant compliance results.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage.PolicyDefinitionReferenceId">
            <summary>
            Gets or sets the policy definition reference ID within a policy set
            definition the message is intended for. This is only applicable if
            the policy assignment assigns a policy set definition. If this is
            not provided the message applies to all policies assigned by this
            policy assignment.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment">
            <summary>
            Deployment on error behavior.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment.#ctor">
            <summary>
            Initializes a new instance of the OnErrorDeployment class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment.#ctor(System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentType},System.String)">
            <summary>
            Initializes a new instance of the OnErrorDeployment class.
            </summary>
            <param name="type">The deployment on error behavior type. Possible
            values are LastSuccessful and SpecificDeployment. Possible values
            include: 'LastSuccessful', 'SpecificDeployment'</param>
            <param name="deploymentName">The deployment to be used on error
            case.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment.Type">
            <summary>
            Gets or sets the deployment on error behavior type. Possible values
            are LastSuccessful and SpecificDeployment. Possible values include:
            'LastSuccessful', 'SpecificDeployment'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeployment.DeploymentName">
            <summary>
            Gets or sets the deployment to be used on error case.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended">
            <summary>
            Deployment on error behavior with additional details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended.#ctor">
            <summary>
            Initializes a new instance of the OnErrorDeploymentExtended class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentType},System.String)">
            <summary>
            Initializes a new instance of the OnErrorDeploymentExtended class.
            </summary>
            <param name="provisioningState">The state of the provisioning for
            the on error deployment.</param>
            <param name="type">The deployment on error behavior type. Possible
            values are LastSuccessful and SpecificDeployment. Possible values
            include: 'LastSuccessful', 'SpecificDeployment'</param>
            <param name="deploymentName">The deployment to be used on error
            case.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended.ProvisioningState">
            <summary>
            Gets the state of the provisioning for the on error deployment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended.Type">
            <summary>
            Gets or sets the deployment on error behavior type. Possible values
            are LastSuccessful and SpecificDeployment. Possible values include:
            'LastSuccessful', 'SpecificDeployment'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentExtended.DeploymentName">
            <summary>
            Gets or sets the deployment to be used on error case.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.OnErrorDeploymentType">
            <summary>
            Defines values for OnErrorDeploymentType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Operation">
            <summary>
            Microsoft.Resources operation
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Operation.#ctor">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay)">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
            <param name="name">Operation name:
            {provider}/{resource}/{operation}</param>
            <param name="display">The object that represents the
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Operation.Name">
            <summary>
            Gets or sets operation name: {provider}/{resource}/{operation}
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Operation.Display">
            <summary>
            Gets or sets the object that represents the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay">
            <summary>
            The object that represents the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay.#ctor">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
            <param name="provider">Service provider:
            Microsoft.Resources</param>
            <param name="resource">Resource on which the operation is
            performed: Profile, endpoint, etc.</param>
            <param name="operation">Operation type: Read, write, delete,
            etc.</param>
            <param name="description">Description of the operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay.Provider">
            <summary>
            Gets or sets service provider: Microsoft.Resources
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay.Resource">
            <summary>
            Gets or sets resource on which the operation is performed: Profile,
            endpoint, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay.Operation">
            <summary>
            Gets or sets operation type: Read, write, delete, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OperationDisplay.Description">
            <summary>
            Gets or sets description of the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.OperationListResult">
            <summary>
            Result of the request to list Microsoft.Resources operations. It
            contains a list of operations and a URL link to get the next set of
            results.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OperationListResult.#ctor">
            <summary>
            Initializes a new instance of the OperationListResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.OperationListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.Operation},System.String)">
            <summary>
            Initializes a new instance of the OperationListResult class.
            </summary>
            <param name="value">List of Microsoft.Resources operations.</param>
            <param name="nextLink">URL to get the next set of operation list
            results if there are any.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OperationListResult.Value">
            <summary>
            Gets or sets list of Microsoft.Resources operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.OperationListResult.NextLink">
            <summary>
            Gets or sets URL to get the next set of operation list results if
            there are any.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Page1`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Page1`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Page1`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Page1`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PairedRegion">
            <summary>
            Information regarding paired region.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PairedRegion.#ctor">
            <summary>
            Initializes a new instance of the PairedRegion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PairedRegion.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PairedRegion class.
            </summary>
            <param name="name">The name of the paired region.</param>
            <param name="id">The fully qualified ID of the location. For
            example,
            /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.</param>
            <param name="subscriptionId">The subscription ID.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PairedRegion.Name">
            <summary>
            Gets the name of the paired region.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PairedRegion.Id">
            <summary>
            Gets the fully qualified ID of the location. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PairedRegion.SubscriptionId">
            <summary>
            Gets the subscription ID.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue">
            <summary>
            The definition of a parameter that can be provided to the policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue.#ctor">
            <summary>
            Initializes a new instance of the ParameterDefinitionsValue class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue.#ctor(System.String,System.Collections.Generic.IList{System.Object},System.Object,Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata)">
            <summary>
            Initializes a new instance of the ParameterDefinitionsValue class.
            </summary>
            <param name="type">The data type of the parameter. Possible values
            include: 'String', 'Array', 'Object', 'Boolean', 'Integer',
            'Float', 'DateTime'</param>
            <param name="allowedValues">The allowed values for the
            parameter.</param>
            <param name="defaultValue">The default value for the parameter if
            no value is provided.</param>
            <param name="metadata">General metadata for the parameter.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue.Type">
            <summary>
            Gets or sets the data type of the parameter. Possible values
            include: 'String', 'Array', 'Object', 'Boolean', 'Integer',
            'Float', 'DateTime'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue.AllowedValues">
            <summary>
            Gets or sets the allowed values for the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue.DefaultValue">
            <summary>
            Gets or sets the default value for the parameter if no value is
            provided.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue.Metadata">
            <summary>
            Gets or sets general metadata for the parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata">
            <summary>
            General metadata for the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.#ctor">
            <summary>
            Initializes a new instance of the ParameterDefinitionsValueMetadata
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ParameterDefinitionsValueMetadata
            class.
            </summary>
            <param name="additionalProperties">Unmatched properties from the
            message are deserialized this collection</param>
            <param name="displayName">The display name for the
            parameter.</param>
            <param name="description">The description of the parameter.</param>
            <param name="strongType">Used when assigning the policy definition
            through the portal. Provides a context aware list of values for the
            user to choose from.</param>
            <param name="assignPermissions">Set to true to have Azure portal
            create role assignments on the resource ID or resource scope value
            of this parameter during policy assignment. This property is useful
            in case you wish to assign permissions outside the assignment
            scope.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.AdditionalProperties">
            <summary>
            Gets or sets unmatched properties from the message are deserialized
            this collection
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.DisplayName">
            <summary>
            Gets or sets the display name for the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.Description">
            <summary>
            Gets or sets the description of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.StrongType">
            <summary>
            Gets or sets used when assigning the policy definition through the
            portal. Provides a context aware list of values for the user to
            choose from.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValueMetadata.AssignPermissions">
            <summary>
            Gets or sets set to true to have Azure portal create role
            assignments on the resource ID or resource scope value of this
            parameter during policy assignment. This property is useful in case
            you wish to assign permissions outside the assignment scope.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ParametersLink">
            <summary>
            Entity representing the reference to the deployment parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParametersLink.#ctor">
            <summary>
            Initializes a new instance of the ParametersLink class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParametersLink.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ParametersLink class.
            </summary>
            <param name="uri">The URI of the parameters file.</param>
            <param name="contentVersion">If included, must match the
            ContentVersion in the template.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParametersLink.Uri">
            <summary>
            Gets or sets the URI of the parameters file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParametersLink.ContentVersion">
            <summary>
            Gets or sets if included, must match the ContentVersion in the
            template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParametersLink.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ParameterType">
            <summary>
            Defines values for ParameterType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ParameterValuesValue">
            <summary>
            The value of a parameter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParameterValuesValue.#ctor">
            <summary>
            Initializes a new instance of the ParameterValuesValue class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ParameterValuesValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the ParameterValuesValue class.
            </summary>
            <param name="value">The value of the parameter.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ParameterValuesValue.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Permission">
            <summary>
            Role definition permissions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Permission.#ctor">
            <summary>
            Initializes a new instance of the Permission class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Permission.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the Permission class.
            </summary>
            <param name="actions">Allowed actions.</param>
            <param name="notActions">Denied actions.</param>
            <param name="dataActions">Allowed Data actions.</param>
            <param name="notDataActions">Denied Data actions.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Permission.Actions">
            <summary>
            Gets or sets allowed actions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Permission.NotActions">
            <summary>
            Gets or sets denied actions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Permission.DataActions">
            <summary>
            Gets or sets allowed Data actions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Permission.NotDataActions">
            <summary>
            Gets or sets denied Data actions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Plan">
            <summary>
            Plan for the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Plan.#ctor">
            <summary>
            Initializes a new instance of the Plan class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Plan.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Plan class.
            </summary>
            <param name="name">The plan ID.</param>
            <param name="publisher">The publisher ID.</param>
            <param name="product">The offer ID.</param>
            <param name="promotionCode">The promotion code.</param>
            <param name="version">The plan's version.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Plan.Name">
            <summary>
            Gets or sets the plan ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Plan.Publisher">
            <summary>
            Gets or sets the publisher ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Plan.Product">
            <summary>
            Gets or sets the offer ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Plan.PromotionCode">
            <summary>
            Gets or sets the promotion code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Plan.Version">
            <summary>
            Gets or sets the plan's version.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment">
            <summary>
            The policy assignment.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.#ctor">
            <summary>
            Initializes a new instance of the PolicyAssignment class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.ParameterValuesValue},System.String,System.Object,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.NonComplianceMessage},System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Identity,Microsoft.Azure.Management.ResourceManager.Models.SystemData)">
            <summary>
            Initializes a new instance of the PolicyAssignment class.
            </summary>
            <param name="displayName">The display name of the policy
            assignment.</param>
            <param name="policyDefinitionId">The ID of the policy definition or
            policy set definition being assigned.</param>
            <param name="scope">The scope for the policy assignment.</param>
            <param name="notScopes">The policy's excluded scopes.</param>
            <param name="parameters">The parameter values for the assigned
            policy rule. The keys are the parameter names.</param>
            <param name="description">This message will be part of response in
            case of policy violation.</param>
            <param name="metadata">The policy assignment metadata. Metadata is
            an open ended object and is typically a collection of key value
            pairs.</param>
            <param name="enforcementMode">The policy assignment enforcement
            mode. Possible values are Default and DoNotEnforce. Possible values
            include: 'Default', 'DoNotEnforce'</param>
            <param name="nonComplianceMessages">The messages that describe why
            a resource is non-compliant with the policy.</param>
            <param name="id">The ID of the policy assignment.</param>
            <param name="type">The type of the policy assignment.</param>
            <param name="name">The name of the policy assignment.</param>
            <param name="location">The location of the policy assignment. Only
            required when utilizing managed identity.</param>
            <param name="identity">The managed identity associated with the
            policy assignment.</param>
            <param name="systemData">The system metadata relating to this
            resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.DisplayName">
            <summary>
            Gets or sets the display name of the policy assignment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.PolicyDefinitionId">
            <summary>
            Gets or sets the ID of the policy definition or policy set
            definition being assigned.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Scope">
            <summary>
            Gets the scope for the policy assignment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.NotScopes">
            <summary>
            Gets or sets the policy's excluded scopes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Parameters">
            <summary>
            Gets or sets the parameter values for the assigned policy rule. The
            keys are the parameter names.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Description">
            <summary>
            Gets or sets this message will be part of response in case of
            policy violation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Metadata">
            <summary>
            Gets or sets the policy assignment metadata. Metadata is an open
            ended object and is typically a collection of key value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.EnforcementMode">
            <summary>
            Gets or sets the policy assignment enforcement mode. Possible
            values are Default and DoNotEnforce. Possible values include:
            'Default', 'DoNotEnforce'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.NonComplianceMessages">
            <summary>
            Gets or sets the messages that describe why a resource is
            non-compliant with the policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Id">
            <summary>
            Gets the ID of the policy assignment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Type">
            <summary>
            Gets the type of the policy assignment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Name">
            <summary>
            Gets the name of the policy assignment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Location">
            <summary>
            Gets or sets the location of the policy assignment. Only required
            when utilizing managed identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.Identity">
            <summary>
            Gets or sets the managed identity associated with the policy
            assignment.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment.SystemData">
            <summary>
            Gets the system metadata relating to this resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate.#ctor">
            <summary>
            Initializes a new instance of the PolicyAssignmentUpdate class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.Identity)">
            <summary>
            Initializes a new instance of the PolicyAssignmentUpdate class.
            </summary>
            <param name="location">The location of the policy assignment. Only
            required when utilizing managed identity.</param>
            <param name="identity">The managed identity associated with the
            policy assignment.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate.Location">
            <summary>
            Gets or sets the location of the policy assignment. Only required
            when utilizing managed identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate.Identity">
            <summary>
            Gets or sets the managed identity associated with the policy
            assignment.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition">
            <summary>
            The policy definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.#ctor">
            <summary>
            Initializes a new instance of the PolicyDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.#ctor(System.String,System.String,System.String,System.String,System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue},System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData)">
            <summary>
            Initializes a new instance of the PolicyDefinition class.
            </summary>
            <param name="policyType">The type of policy definition. Possible
            values are NotSpecified, BuiltIn, Custom, and Static. Possible
            values include: 'NotSpecified', 'BuiltIn', 'Custom',
            'Static'</param>
            <param name="mode">The policy definition mode. Some examples are
            All, Indexed, Microsoft.KeyVault.Data.</param>
            <param name="displayName">The display name of the policy
            definition.</param>
            <param name="description">The policy definition
            description.</param>
            <param name="policyRule">The policy rule.</param>
            <param name="metadata">The policy definition metadata.  Metadata is
            an open ended object and is typically a collection of key value
            pairs.</param>
            <param name="parameters">The parameter definitions for parameters
            used in the policy rule. The keys are the parameter names.</param>
            <param name="id">The ID of the policy definition.</param>
            <param name="name">The name of the policy definition.</param>
            <param name="type">The type of the resource
            (Microsoft.Authorization/policyDefinitions).</param>
            <param name="systemData">The system metadata relating to this
            resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.PolicyType">
            <summary>
            Gets or sets the type of policy definition. Possible values are
            NotSpecified, BuiltIn, Custom, and Static. Possible values include:
            'NotSpecified', 'BuiltIn', 'Custom', 'Static'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Mode">
            <summary>
            Gets or sets the policy definition mode. Some examples are All,
            Indexed, Microsoft.KeyVault.Data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.DisplayName">
            <summary>
            Gets or sets the display name of the policy definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Description">
            <summary>
            Gets or sets the policy definition description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.PolicyRule">
            <summary>
            Gets or sets the policy rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Metadata">
            <summary>
            Gets or sets the policy definition metadata.  Metadata is an open
            ended object and is typically a collection of key value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Parameters">
            <summary>
            Gets or sets the parameter definitions for parameters used in the
            policy rule. The keys are the parameter names.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Id">
            <summary>
            Gets the ID of the policy definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Name">
            <summary>
            Gets the name of the policy definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.Type">
            <summary>
            Gets the type of the resource
            (Microsoft.Authorization/policyDefinitions).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition.SystemData">
            <summary>
            Gets the system metadata relating to this resource.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup">
            <summary>
            The policy definition group.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.#ctor">
            <summary>
            Initializes a new instance of the PolicyDefinitionGroup class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PolicyDefinitionGroup class.
            </summary>
            <param name="name">The name of the group.</param>
            <param name="displayName">The group's display name.</param>
            <param name="category">The group's category.</param>
            <param name="description">The group's description.</param>
            <param name="additionalMetadataId">A resource ID of a resource that
            contains additional metadata about the group.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.Name">
            <summary>
            Gets or sets the name of the group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.DisplayName">
            <summary>
            Gets or sets the group's display name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.Category">
            <summary>
            Gets or sets the group's category.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.Description">
            <summary>
            Gets or sets the group's description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.AdditionalMetadataId">
            <summary>
            Gets or sets a resource ID of a resource that contains additional
            metadata about the group.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference">
            <summary>
            The policy definition reference.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.#ctor">
            <summary>
            Initializes a new instance of the PolicyDefinitionReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.ParameterValuesValue},System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the PolicyDefinitionReference class.
            </summary>
            <param name="policyDefinitionId">The ID of the policy definition or
            policy set definition.</param>
            <param name="parameters">The parameter values for the referenced
            policy rule. The keys are the parameter names.</param>
            <param name="policyDefinitionReferenceId">A unique id (within the
            policy set definition) for this policy definition
            reference.</param>
            <param name="groupNames">The name of the groups that this policy
            definition reference belongs to.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.PolicyDefinitionId">
            <summary>
            Gets or sets the ID of the policy definition or policy set
            definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.Parameters">
            <summary>
            Gets or sets the parameter values for the referenced policy rule.
            The keys are the parameter names.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.PolicyDefinitionReferenceId">
            <summary>
            Gets or sets a unique id (within the policy set definition) for
            this policy definition reference.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.GroupNames">
            <summary>
            Gets or sets the name of the groups that this policy definition
            reference belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption">
            <summary>
            The policy exemption.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.#ctor">
            <summary>
            Initializes a new instance of the PolicyExemption class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},System.String,System.String,System.Object,Microsoft.Azure.Management.ResourceManager.Models.SystemData,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PolicyExemption class.
            </summary>
            <param name="policyAssignmentId">The ID of the policy assignment
            that is being exempted.</param>
            <param name="exemptionCategory">The policy exemption category.
            Possible values are Waiver and Mitigated. Possible values include:
            'Waiver', 'Mitigated'</param>
            <param name="policyDefinitionReferenceIds">The policy definition
            reference ID list when the associated policy assignment is an
            assignment of a policy set definition.</param>
            <param name="expiresOn">The expiration date and time (in UTC ISO
            8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption.</param>
            <param name="displayName">The display name of the policy
            exemption.</param>
            <param name="description">The description of the policy
            exemption.</param>
            <param name="metadata">The policy exemption metadata. Metadata is
            an open ended object and is typically a collection of key value
            pairs.</param>
            <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
            <param name="id">The ID of the policy exemption.</param>
            <param name="name">The name of the policy exemption.</param>
            <param name="type">The type of the resource
            (Microsoft.Authorization/policyExemptions).</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.PolicyAssignmentId">
            <summary>
            Gets or sets the ID of the policy assignment that is being
            exempted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.PolicyDefinitionReferenceIds">
            <summary>
            Gets or sets the policy definition reference ID list when the
            associated policy assignment is an assignment of a policy set
            definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.ExemptionCategory">
            <summary>
            Gets or sets the policy exemption category. Possible values are
            Waiver and Mitigated. Possible values include: 'Waiver',
            'Mitigated'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.ExpiresOn">
            <summary>
            Gets or sets the expiration date and time (in UTC ISO 8601 format
            yyyy-MM-ddTHH:mm:ssZ) of the policy exemption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.DisplayName">
            <summary>
            Gets or sets the display name of the policy exemption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.Description">
            <summary>
            Gets or sets the description of the policy exemption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.Metadata">
            <summary>
            Gets or sets the policy exemption metadata. Metadata is an open
            ended object and is typically a collection of key value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.SystemData">
            <summary>
            Gets azure Resource Manager metadata containing createdBy and
            modifiedBy information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.Id">
            <summary>
            Gets the ID of the policy exemption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.Name">
            <summary>
            Gets the name of the policy exemption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.Type">
            <summary>
            Gets the type of the resource
            (Microsoft.Authorization/policyExemptions).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition">
            <summary>
            The policy set definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.#ctor">
            <summary>
            Initializes a new instance of the PolicySetDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionReference},System.String,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.ParameterDefinitionsValue},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinitionGroup},System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData)">
            <summary>
            Initializes a new instance of the PolicySetDefinition class.
            </summary>
            <param name="policyDefinitions">An array of policy definition
            references.</param>
            <param name="policyType">The type of policy definition. Possible
            values are NotSpecified, BuiltIn, Custom, and Static. Possible
            values include: 'NotSpecified', 'BuiltIn', 'Custom',
            'Static'</param>
            <param name="displayName">The display name of the policy set
            definition.</param>
            <param name="description">The policy set definition
            description.</param>
            <param name="metadata">The policy set definition metadata.
            Metadata is an open ended object and is typically a collection of
            key value pairs.</param>
            <param name="parameters">The policy set definition parameters that
            can be used in policy definition references.</param>
            <param name="policyDefinitionGroups">The metadata describing groups
            of policy definition references within the policy set
            definition.</param>
            <param name="id">The ID of the policy set definition.</param>
            <param name="name">The name of the policy set definition.</param>
            <param name="type">The type of the resource
            (Microsoft.Authorization/policySetDefinitions).</param>
            <param name="systemData">The system metadata relating to this
            resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.PolicyType">
            <summary>
            Gets or sets the type of policy definition. Possible values are
            NotSpecified, BuiltIn, Custom, and Static. Possible values include:
            'NotSpecified', 'BuiltIn', 'Custom', 'Static'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.DisplayName">
            <summary>
            Gets or sets the display name of the policy set definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Description">
            <summary>
            Gets or sets the policy set definition description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Metadata">
            <summary>
            Gets or sets the policy set definition metadata.  Metadata is an
            open ended object and is typically a collection of key value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Parameters">
            <summary>
            Gets or sets the policy set definition parameters that can be used
            in policy definition references.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.PolicyDefinitions">
            <summary>
            Gets or sets an array of policy definition references.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.PolicyDefinitionGroups">
            <summary>
            Gets or sets the metadata describing groups of policy definition
            references within the policy set definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Id">
            <summary>
            Gets the ID of the policy set definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Name">
            <summary>
            Gets the name of the policy set definition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Type">
            <summary>
            Gets the type of the resource
            (Microsoft.Authorization/policySetDefinitions).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.SystemData">
            <summary>
            Gets the system metadata relating to this resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PolicyType">
            <summary>
            Defines values for PolicyType.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkAssociation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation.#ctor(Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PrivateLinkAssociation class.
            </summary>
            <param name="properties">The private link association
            properties.</param>
            <param name="id">The plaResourceID.</param>
            <param name="type">The operation type.</param>
            <param name="name">The pla name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation.Properties">
            <summary>
            Gets or sets the private link association properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation.Id">
            <summary>
            Gets the plaResourceID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation.Type">
            <summary>
            Gets the operation type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation.Name">
            <summary>
            Gets the pla name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationGetResult">
            <summary>
            Result of the request to get PLA for a MG scope.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationGetResult.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationGetResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationGetResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociation})">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationGetResult
            class.
            </summary>
            <param name="value">private link association information.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationGetResult.Value">
            <summary>
            Gets or sets private link association information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationObject
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject.#ctor(Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationProperties)">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationObject
            class.
            </summary>
            <param name="properties">The properties of the
            PrivateLinkAssociation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject.Properties">
            <summary>
            Gets or sets the properties of the PrivateLinkAssociation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationProperties.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationProperties
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationProperties.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationProperties
            class.
            </summary>
            <param name="privateLink">The rmpl Resource ID.</param>
            <param name="publicNetworkAccess">Possible values include:
            'Enabled', 'Disabled'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationProperties.PrivateLink">
            <summary>
            Gets or sets the rmpl Resource ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationProperties.PublicNetworkAccess">
            <summary>
            Gets or sets possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded">
            <summary>
            Private Link Association Properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded.#ctor">
            <summary>
            Initializes a new instance of the
            PrivateLinkAssociationPropertiesExpanded class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the
            PrivateLinkAssociationPropertiesExpanded class.
            </summary>
            <param name="privateLink">The rmpl Resource ID.</param>
            <param name="publicNetworkAccess">Possible values include:
            'Enabled', 'Disabled'</param>
            <param name="tenantID">The TenantID.</param>
            <param name="scope">The scope of the private link
            association.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded.PrivateLink">
            <summary>
            Gets or sets the rmpl Resource ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded.PublicNetworkAccess">
            <summary>
            Gets or sets possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded.TenantID">
            <summary>
            Gets or sets the TenantID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationPropertiesExpanded.Scope">
            <summary>
            Gets or sets the scope of the private link association.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType">
            <summary>
            Defines values for PropertyChangeType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType.Create">
            <summary>
            The property does not exist in the current state but is present in
            the desired state. The property will be created when the deployment
            is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType.Delete">
            <summary>
            The property exists in the current state and is missing from the
            desired state. It will be deleted when the deployment is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType.Modify">
            <summary>
            The property exists in both current and desired state and is
            different. The value of the property will change when the
            deployment is executed.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType.Array">
            <summary>
            The property is an array and contains nested changes.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType.NoEffect">
            <summary>
            The property will not be set or updated.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Provider">
            <summary>
            Resource provider information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor">
            <summary>
            Initializes a new instance of the Provider class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Provider.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType},System.String)">
            <summary>
            Initializes a new instance of the Provider class.
            </summary>
            <param name="id">The provider ID.</param>
            <param name="namespaceProperty">The namespace of the resource
            provider.</param>
            <param name="registrationState">The registration state of the
            resource provider.</param>
            <param name="registrationPolicy">The registration policy of the
            resource provider.</param>
            <param name="resourceTypes">The collection of provider resource
            types.</param>
            <param name="providerAuthorizationConsentState">The provider
            authorization consent state. Possible values include:
            'NotSpecified', 'Required', 'NotRequired', 'Consented'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Provider.Id">
            <summary>
            Gets the provider ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Provider.NamespaceProperty">
            <summary>
            Gets or sets the namespace of the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationState">
            <summary>
            Gets the registration state of the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Provider.RegistrationPolicy">
            <summary>
            Gets the registration policy of the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Provider.ResourceTypes">
            <summary>
            Gets the collection of provider resource types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Provider.ProviderAuthorizationConsentState">
            <summary>
            Gets or sets the provider authorization consent state. Possible
            values include: 'NotSpecified', 'Required', 'NotRequired',
            'Consented'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderAuthorizationConsentState">
            <summary>
            Defines values for ProviderAuthorizationConsentState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderConsentDefinition">
            <summary>
            The provider consent.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderConsentDefinition.#ctor">
            <summary>
            Initializes a new instance of the ProviderConsentDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderConsentDefinition.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ProviderConsentDefinition class.
            </summary>
            <param name="consentToAuthorization">A value indicating whether
            authorization is consented or not.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderConsentDefinition.ConsentToAuthorization">
            <summary>
            Gets or sets a value indicating whether authorization is consented
            or not.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation">
            <summary>
            The provider extended location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation.#ctor">
            <summary>
            Initializes a new instance of the ProviderExtendedLocation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the ProviderExtendedLocation class.
            </summary>
            <param name="location">The azure location.</param>
            <param name="type">The extended location type.</param>
            <param name="extendedLocations">The extended locations for the
            azure location.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation.Location">
            <summary>
            Gets or sets the azure location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation.Type">
            <summary>
            Gets or sets the extended location type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation.ExtendedLocations">
            <summary>
            Gets or sets the extended locations for the azure location.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission">
            <summary>
            The provider permission
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission.#ctor">
            <summary>
            Initializes a new instance of the ProviderPermission class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition,Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition,System.String)">
            <summary>
            Initializes a new instance of the ProviderPermission class.
            </summary>
            <param name="applicationId">The application id.</param>
            <param name="roleDefinition">Role definition properties.</param>
            <param name="managedByRoleDefinition">Role definition
            properties.</param>
            <param name="providerAuthorizationConsentState">The provider
            authorization consent state. Possible values include:
            'NotSpecified', 'Required', 'NotRequired', 'Consented'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission.ApplicationId">
            <summary>
            Gets or sets the application id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission.RoleDefinition">
            <summary>
            Gets or sets role definition properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission.ManagedByRoleDefinition">
            <summary>
            Gets or sets role definition properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission.ProviderAuthorizationConsentState">
            <summary>
            Gets or sets the provider authorization consent state. Possible
            values include: 'NotSpecified', 'Required', 'NotRequired',
            'Consented'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermissionListResult">
            <summary>
            List of provider permissions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermissionListResult.#ctor">
            <summary>
            Initializes a new instance of the ProviderPermissionListResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermissionListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderPermission},System.String)">
            <summary>
            Initializes a new instance of the ProviderPermissionListResult
            class.
            </summary>
            <param name="value">An array of provider permissions.</param>
            <param name="nextLink">The URL to use for getting the next set of
            results.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermissionListResult.Value">
            <summary>
            Gets or sets an array of provider permissions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderPermissionListResult.NextLink">
            <summary>
            Gets the URL to use for getting the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest">
            <summary>
            The provider registration definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest.#ctor">
            <summary>
            Initializes a new instance of the ProviderRegistrationRequest
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest.#ctor(Microsoft.Azure.Management.ResourceManager.Models.ProviderConsentDefinition)">
            <summary>
            Initializes a new instance of the ProviderRegistrationRequest
            class.
            </summary>
            <param name="thirdPartyProviderConsent">The provider
            consent.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest.ThirdPartyProviderConsent">
            <summary>
            Gets or sets the provider consent.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType">
            <summary>
            Resource type managed by the resource provider.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor">
            <summary>
            Initializes a new instance of the ProviderResourceType class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderExtendedLocation},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.Alias},System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ApiProfile},System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the ProviderResourceType class.
            </summary>
            <param name="resourceType">The resource type.</param>
            <param name="locations">The collection of locations where this
            resource type can be created.</param>
            <param name="locationMappings">The location mappings that are
            supported by this resource type.</param>
            <param name="aliases">The aliases that are supported by this
            resource type.</param>
            <param name="apiVersions">The API version.</param>
            <param name="defaultApiVersion">The default API version.</param>
            <param name="apiProfiles">The API profiles for the resource
            provider.</param>
            <param name="capabilities">The additional capabilities offered by
            this resource type.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ResourceType">
            <summary>
            Gets or sets the resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Locations">
            <summary>
            Gets or sets the collection of locations where this resource type
            can be created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.LocationMappings">
            <summary>
            Gets or sets the location mappings that are supported by this
            resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Aliases">
            <summary>
            Gets or sets the aliases that are supported by this resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiVersions">
            <summary>
            Gets or sets the API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.DefaultApiVersion">
            <summary>
            Gets the default API version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.ApiProfiles">
            <summary>
            Gets the API profiles for the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Capabilities">
            <summary>
            Gets or sets the additional capabilities offered by this resource
            type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceTypeListResult">
            <summary>
            List of resource types of a resource provider.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceTypeListResult.#ctor">
            <summary>
            Initializes a new instance of the ProviderResourceTypeListResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceTypeListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceType},System.String)">
            <summary>
            Initializes a new instance of the ProviderResourceTypeListResult
            class.
            </summary>
            <param name="value">An array of resource types.</param>
            <param name="nextLink">The URL to use for getting the next set of
            results.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceTypeListResult.Value">
            <summary>
            Gets or sets an array of resource types.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProviderResourceTypeListResult.NextLink">
            <summary>
            Gets the URL to use for getting the next set of results.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation">
            <summary>
            Defines values for ProvisioningOperation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.NotSpecified">
            <summary>
            The provisioning operation is not specified.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.Create">
            <summary>
            The provisioning operation is create.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.Delete">
            <summary>
            The provisioning operation is delete.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.Waiting">
            <summary>
            The provisioning operation is waiting.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.AzureAsyncOperationWaiting">
            <summary>
            The provisioning operation is waiting Azure async operation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.ResourceCacheWaiting">
            <summary>
            The provisioning operation is waiting for resource cache.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.Action">
            <summary>
            The provisioning operation is action.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.Read">
            <summary>
            The provisioning operation is read.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.EvaluateDeploymentOutput">
            <summary>
            The provisioning operation is evaluate output.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningOperation.DeploymentCleanup">
            <summary>
            The provisioning operation is cleanup. This operation is part of
            the 'complete' mode deployment.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProvisioningState">
            <summary>
            Defines values for ProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ProxyResource">
            <summary>
            An Azure proxy resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProxyResource.#ctor">
            <summary>
            Initializes a new instance of the ProxyResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ProxyResource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ProxyResource class.
            </summary>
            <param name="id">Azure resource Id.</param>
            <param name="name">Azure resource name.</param>
            <param name="type">Azure resource type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProxyResource.Id">
            <summary>
            Gets azure resource Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProxyResource.Name">
            <summary>
            Gets azure resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ProxyResource.Type">
            <summary>
            Gets azure resource type.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.PublicNetworkAccessOptions">
            <summary>
            Defines values for PublicNetworkAccessOptions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.RegionCategory">
            <summary>
            Defines values for RegionCategory.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.RegionType">
            <summary>
            Defines values for RegionType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Resource">
            <summary>
            Specified resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Resource.#ctor">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Resource.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
            <param name="id">Resource ID</param>
            <param name="name">Resource name</param>
            <param name="type">Resource type</param>
            <param name="location">Resource location</param>
            <param name="extendedLocation">Resource extended location.</param>
            <param name="tags">Resource tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Resource.Id">
            <summary>
            Gets resource ID
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Resource.Name">
            <summary>
            Gets resource name
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Resource.Type">
            <summary>
            Gets resource type
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Resource.Location">
            <summary>
            Gets or sets resource location
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Resource.ExtendedLocation">
            <summary>
            Gets or sets resource extended location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Resource.Tags">
            <summary>
            Gets or sets resource tags
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup">
            <summary>
            Resource group information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor">
            <summary>
            Initializes a new instance of the ResourceGroup class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the ResourceGroup class.
            </summary>
            <param name="location">The location of the resource group. It
            cannot be changed after the resource group has been created. It
            must be one of the supported Azure locations.</param>
            <param name="id">The ID of the resource group.</param>
            <param name="name">The name of the resource group.</param>
            <param name="type">The type of the resource group.</param>
            <param name="properties">The resource group properties.</param>
            <param name="managedBy">The ID of the resource that manages this
            resource group.</param>
            <param name="tags">The tags attached to the resource group.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Id">
            <summary>
            Gets the ID of the resource group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Name">
            <summary>
            Gets the name of the resource group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Type">
            <summary>
            Gets the type of the resource group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Properties">
            <summary>
            Gets or sets the resource group properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Location">
            <summary>
            Gets or sets the location of the resource group. It cannot be
            changed after the resource group has been created. It must be one
            of the supported Azure locations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.ManagedBy">
            <summary>
            Gets or sets the ID of the resource that manages this resource
            group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Tags">
            <summary>
            Gets or sets the tags attached to the resource group.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult">
            <summary>
            Resource group export result.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult.#ctor">
            <summary>
            Initializes a new instance of the ResourceGroupExportResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult.#ctor(System.Object,Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the ResourceGroupExportResult class.
            </summary>
            <param name="template">The template content.</param>
            <param name="error">The template export error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult.Template">
            <summary>
            Gets or sets the template content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupExportResult.Error">
            <summary>
            Gets or sets the template export error.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter">
            <summary>
            Resource group filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter.#ctor">
            <summary>
            Initializes a new instance of the ResourceGroupFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceGroupFilter class.
            </summary>
            <param name="tagName">The tag name.</param>
            <param name="tagValue">The tag value.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter.TagName">
            <summary>
            Gets or sets the tag name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter.TagValue">
            <summary>
            Gets or sets the tag value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable">
            <summary>
            Resource group information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable.#ctor">
            <summary>
            Initializes a new instance of the ResourceGroupPatchable class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the ResourceGroupPatchable class.
            </summary>
            <param name="name">The name of the resource group.</param>
            <param name="properties">The resource group properties.</param>
            <param name="managedBy">The ID of the resource that manages this
            resource group.</param>
            <param name="tags">The tags attached to the resource group.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable.Name">
            <summary>
            Gets or sets the name of the resource group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable.Properties">
            <summary>
            Gets or sets the resource group properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable.ManagedBy">
            <summary>
            Gets or sets the ID of the resource that manages this resource
            group.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable.Tags">
            <summary>
            Gets or sets the tags attached to the resource group.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties">
            <summary>
            The resource group properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties.#ctor">
            <summary>
            Initializes a new instance of the ResourceGroupProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceGroupProperties class.
            </summary>
            <param name="provisioningState">The provisioning state. </param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupProperties.ProvisioningState">
            <summary>
            Gets the provisioning state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType">
            <summary>
            Defines values for ResourceIdentityType.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType.SystemAssigned">
            <summary>
            Indicates that a system assigned identity is associated with the
            resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType.UserAssigned">
            <summary>
            Indicates that a user assigned identity is associated with the
            resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType.SystemAssignedUserAssigned">
            <summary>
            Indicates that a system and user assigned identity is associated
            with the resource.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.ResourceIdentityType.None">
            <summary>
            Indicates that no identity is associated with the resource or that
            the existing identity should be removed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink">
            <summary>
            The resource link.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink.#ctor">
            <summary>
            Initializes a new instance of the ResourceLink class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties)">
            <summary>
            Initializes a new instance of the ResourceLink class.
            </summary>
            <param name="id">The fully qualified ID of the resource
            link.</param>
            <param name="name">The name of the resource link.</param>
            <param name="properties">Properties for resource link.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink.Id">
            <summary>
            Gets the fully qualified ID of the resource link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink.Name">
            <summary>
            Gets the name of the resource link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink.Properties">
            <summary>
            Gets or sets properties for resource link.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLink.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter">
            <summary>
            Resource link filter.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter.#ctor">
            <summary>
            Initializes a new instance of the ResourceLinkFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceLinkFilter class.
            </summary>
            <param name="targetId">The ID of the target resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter.TargetId">
            <summary>
            Gets or sets the ID of the target resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties">
            <summary>
            The resource link properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties.#ctor">
            <summary>
            Initializes a new instance of the ResourceLinkProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceLinkProperties class.
            </summary>
            <param name="targetId">The fully qualified ID of the target
            resource in the link.</param>
            <param name="sourceId">The fully qualified ID of the source
            resource in the link. </param>
            <param name="notes">Notes about the resource link.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties.SourceId">
            <summary>
            Gets the fully qualified ID of the source resource in the link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties.TargetId">
            <summary>
            Gets or sets the fully qualified ID of the target resource in the
            link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties.Notes">
            <summary>
            Gets or sets notes about the resource link.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails">
            <summary>
            The detailed error message of resource management.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails.#ctor">
            <summary>
            Initializes a new instance of the
            ResourceManagementErrorWithDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails})">
            <summary>
            Initializes a new instance of the
            ResourceManagementErrorWithDetails class.
            </summary>
            <param name="code">The error code returned when exporting the
            template.</param>
            <param name="message">The error message describing the export
            error.</param>
            <param name="target">The target of the error.</param>
            <param name="details">Validation error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails.Code">
            <summary>
            Gets the error code returned when exporting the template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails.Message">
            <summary>
            Gets the error message describing the export error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails.Target">
            <summary>
            Gets the target of the error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementErrorWithDetails.Details">
            <summary>
            Gets validation error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.#ctor">
            <summary>
            Initializes a new instance of the ResourceManagementPrivateLink
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.#ctor(Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkEndpointConnections,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceManagementPrivateLink
            class.
            </summary>
            <param name="id">The rmplResourceID.</param>
            <param name="name">The rmpl Name.</param>
            <param name="type">The operation type.</param>
            <param name="location">the region of the rmpl</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.Properties">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.Id">
            <summary>
            Gets the rmplResourceID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.Name">
            <summary>
            Gets the rmpl Name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.Type">
            <summary>
            Gets the operation type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink.Location">
            <summary>
            Gets or sets the region of the rmpl
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkEndpointConnections.#ctor">
            <summary>
            Initializes a new instance of the
            ResourceManagementPrivateLinkEndpointConnections class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkEndpointConnections.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the
            ResourceManagementPrivateLinkEndpointConnections class.
            </summary>
            <param name="privateEndpointConnections">The private endpoint
            connections.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkEndpointConnections.PrivateEndpointConnections">
            <summary>
            Gets or sets the private endpoint connections.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkListResult.#ctor">
            <summary>
            Initializes a new instance of the
            ResourceManagementPrivateLinkListResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLink})">
            <summary>
            Initializes a new instance of the
            ResourceManagementPrivateLinkListResult class.
            </summary>
            <param name="value">An array of resource management private
            links.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkListResult.Value">
            <summary>
            Gets or sets an array of resource management private links.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation.#ctor">
            <summary>
            Initializes a new instance of the
            ResourceManagementPrivateLinkLocation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            ResourceManagementPrivateLinkLocation class.
            </summary>
            <param name="location">the region to create private link
            association.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation.Location">
            <summary>
            Gets or sets the region to create private link association.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceName">
            <summary>
            Name and Type of the Resource
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceName.#ctor">
            <summary>
            Initializes a new instance of the ResourceName class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceName class.
            </summary>
            <param name="name">Name of the resource</param>
            <param name="type">The type of the resource</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceName.Name">
            <summary>
            Gets or sets name of the resource
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceName.Type">
            <summary>
            Gets or sets the type of the resource
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceName.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceNameStatus">
            <summary>
            Defines values for ResourceNameStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties">
            <summary>
            Resource provider operation's display properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.#ctor">
            <summary>
            Initializes a new instance of the
            ResourceProviderOperationDisplayProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the
            ResourceProviderOperationDisplayProperties class.
            </summary>
            <param name="publisher">Operation description.</param>
            <param name="provider">Operation provider.</param>
            <param name="resource">Operation resource.</param>
            <param name="operation">Resource provider operation.</param>
            <param name="description">Operation description.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.Publisher">
            <summary>
            Gets or sets operation description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.Provider">
            <summary>
            Gets or sets operation provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.Resource">
            <summary>
            Gets or sets operation resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.Operation">
            <summary>
            Gets or sets resource provider operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceProviderOperationDisplayProperties.Description">
            <summary>
            Gets or sets operation description.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceReference">
            <summary>
            The resource Id model.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceReference.#ctor">
            <summary>
            Initializes a new instance of the ResourceReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceReference class.
            </summary>
            <param name="id">The fully qualified resource Id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceReference.Id">
            <summary>
            Gets the fully qualified resource Id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo">
            <summary>
            Parameters of move resources.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo.#ctor">
            <summary>
            Initializes a new instance of the ResourcesMoveInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the ResourcesMoveInfo class.
            </summary>
            <param name="resources">The IDs of the resources.</param>
            <param name="targetResourceGroup">The target resource
            group.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo.Resources">
            <summary>
            Gets or sets the IDs of the resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo.TargetResourceGroup">
            <summary>
            Gets or sets the target resource group.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ResourceTypeAliases">
            <summary>
            The resource type aliases definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceTypeAliases.#ctor">
            <summary>
            Initializes a new instance of the ResourceTypeAliases class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ResourceTypeAliases.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.Alias})">
            <summary>
            Initializes a new instance of the ResourceTypeAliases class.
            </summary>
            <param name="resourceType">The resource type name.</param>
            <param name="aliases">The aliases for property names.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceTypeAliases.ResourceType">
            <summary>
            Gets or sets the resource type name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ResourceTypeAliases.Aliases">
            <summary>
            Gets or sets the aliases for property names.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition">
            <summary>
            Role definition properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.#ctor">
            <summary>
            Initializes a new instance of the RoleDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.Permission},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the RoleDefinition class.
            </summary>
            <param name="id">The role definition ID.</param>
            <param name="name">The role definition name.</param>
            <param name="isServiceRole">If this is a service role.</param>
            <param name="permissions">Role definition permissions.</param>
            <param name="scopes">Role definition assignable scopes.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.Id">
            <summary>
            Gets or sets the role definition ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.Name">
            <summary>
            Gets or sets the role definition name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.IsServiceRole">
            <summary>
            Gets or sets if this is a service role.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.Permissions">
            <summary>
            Gets or sets role definition permissions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.RoleDefinition.Scopes">
            <summary>
            Gets or sets role definition assignable scopes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment">
            <summary>
            Deployment operation parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment.#ctor">
            <summary>
            Initializes a new instance of the ScopedDeployment class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentProperties,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the ScopedDeployment class.
            </summary>
            <param name="location">The location to store the deployment
            data.</param>
            <param name="properties">The deployment properties.</param>
            <param name="tags">Deployment tags</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment.Location">
            <summary>
            Gets or sets the location to store the deployment data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment.Properties">
            <summary>
            Gets or sets the deployment properties.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment.Tags">
            <summary>
            Gets or sets deployment tags
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf">
            <summary>
            Deployment What-if operation parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf.#ctor">
            <summary>
            Initializes a new instance of the ScopedDeploymentWhatIf class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIfProperties)">
            <summary>
            Initializes a new instance of the ScopedDeploymentWhatIf class.
            </summary>
            <param name="location">The location to store the deployment
            data.</param>
            <param name="properties">The deployment properties.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf.Location">
            <summary>
            Gets or sets the location to store the deployment data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf.Properties">
            <summary>
            Gets or sets the deployment properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ScriptLog">
            <summary>
            Script execution log object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScriptLog.#ctor">
            <summary>
            Initializes a new instance of the ScriptLog class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScriptLog.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ScriptLog class.
            </summary>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="log">Script execution logs in text format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptLog.Log">
            <summary>
            Gets script execution logs in text format.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ScriptLogsList">
            <summary>
            Deployment script execution logs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScriptLogsList.#ctor">
            <summary>
            Initializes a new instance of the ScriptLogsList class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScriptLogsList.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ScriptLog})">
            <summary>
            Initializes a new instance of the ScriptLogsList class.
            </summary>
            <param name="value">Deployment scripts logs.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptLogsList.Value">
            <summary>
            Gets or sets deployment scripts logs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ScriptProvisioningState">
            <summary>
            Defines values for ScriptProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus">
            <summary>
            Generic object modeling results of script execution.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.#ctor">
            <summary>
            Initializes a new instance of the ScriptStatus class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the ScriptStatus class.
            </summary>
            <param name="containerInstanceId">ACI resource Id.</param>
            <param name="storageAccountId">Storage account resource Id.</param>
            <param name="startTime">Start time of the script execution.</param>
            <param name="endTime">End time of the script execution.</param>
            <param name="expirationTime">Time the deployment script resource
            will expire.</param>
            <param name="error">Error that is relayed from the script
            execution.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.ContainerInstanceId">
            <summary>
            Gets ACI resource Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.StorageAccountId">
            <summary>
            Gets storage account resource Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.StartTime">
            <summary>
            Gets start time of the script execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.EndTime">
            <summary>
            Gets end time of the script execution.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.ExpirationTime">
            <summary>
            Gets time the deployment script resource will expire.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.ScriptStatus.Error">
            <summary>
            Gets or sets error that is relayed from the script execution.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Sku">
            <summary>
            SKU for the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Sku.#ctor">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Sku.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
            <param name="name">The SKU name.</param>
            <param name="tier">The SKU tier.</param>
            <param name="size">The SKU size.</param>
            <param name="family">The SKU family.</param>
            <param name="model">The SKU model.</param>
            <param name="capacity">The SKU capacity.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Sku.Name">
            <summary>
            Gets or sets the SKU name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Sku.Tier">
            <summary>
            Gets or sets the SKU tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Sku.Size">
            <summary>
            Gets or sets the SKU size.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Sku.Family">
            <summary>
            Gets or sets the SKU family.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Sku.Model">
            <summary>
            Gets or sets the SKU model.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Sku.Capacity">
            <summary>
            Gets or sets the SKU capacity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SpendingLimit">
            <summary>
            Defines values for SpendingLimit.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.StatusMessage">
            <summary>
            Operation status message object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.StatusMessage.#ctor">
            <summary>
            Initializes a new instance of the StatusMessage class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.StatusMessage.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the StatusMessage class.
            </summary>
            <param name="status">Status of the deployment operation.</param>
            <param name="error">The error reported by the operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.StatusMessage.Status">
            <summary>
            Gets or sets status of the deployment operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.StatusMessage.Error">
            <summary>
            Gets or sets the error reported by the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration">
            <summary>
            Settings to use an existing storage account. Valid storage account
            kinds are: Storage, StorageV2 and FileStorage
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountConfiguration
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the StorageAccountConfiguration
            class.
            </summary>
            <param name="storageAccountName">The storage account name.</param>
            <param name="storageAccountKey">The storage account access
            key.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration.StorageAccountName">
            <summary>
            Gets or sets the storage account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.StorageAccountConfiguration.StorageAccountKey">
            <summary>
            Gets or sets the storage account access key.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SubResource">
            <summary>
            Sub-resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubResource.#ctor">
            <summary>
            Initializes a new instance of the SubResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SubResource class.
            </summary>
            <param name="id">Resource ID</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubResource.Id">
            <summary>
            Gets or sets resource ID
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Subscription">
            <summary>
            Subscription information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor">
            <summary>
            Initializes a new instance of the Subscription class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Subscription.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState},Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.ManagedByTenant},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Subscription class.
            </summary>
            <param name="id">The fully qualified ID for the subscription. For
            example,
            /subscriptions/00000000-0000-0000-0000-000000000000.</param>
            <param name="subscriptionId">The subscription ID.</param>
            <param name="displayName">The subscription display name.</param>
            <param name="tenantId">The subscription tenant ID.</param>
            <param name="state">The subscription state. Possible values are
            Enabled, Warned, PastDue, Disabled, and Deleted. Possible values
            include: 'Enabled', 'Warned', 'PastDue', 'Disabled',
            'Deleted'</param>
            <param name="subscriptionPolicies">The subscription
            policies.</param>
            <param name="authorizationSource">The authorization source of the
            request. Valid values are one or more combinations of Legacy,
            RoleBased, Bypassed, Direct and Management. For example, 'Legacy,
            RoleBased'.</param>
            <param name="managedByTenants">An array containing the tenants
            managing the subscription.</param>
            <param name="tags">The tags attached to the subscription.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.Id">
            <summary>
            Gets the fully qualified ID for the subscription. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionId">
            <summary>
            Gets the subscription ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.DisplayName">
            <summary>
            Gets the subscription display name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.TenantId">
            <summary>
            Gets the subscription tenant ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.State">
            <summary>
            Gets the subscription state. Possible values are Enabled, Warned,
            PastDue, Disabled, and Deleted. Possible values include: 'Enabled',
            'Warned', 'PastDue', 'Disabled', 'Deleted'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.SubscriptionPolicies">
            <summary>
            Gets or sets the subscription policies.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.AuthorizationSource">
            <summary>
            Gets or sets the authorization source of the request. Valid values
            are one or more combinations of Legacy, RoleBased, Bypassed, Direct
            and Management. For example, 'Legacy, RoleBased'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.ManagedByTenants">
            <summary>
            Gets or sets an array containing the tenants managing the
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Subscription.Tags">
            <summary>
            Gets or sets the tags attached to the subscription.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration">
            <summary>
            Subscription feature registration details
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration.#ctor">
            <summary>
            Initializes a new instance of the SubscriptionFeatureRegistration
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties)">
            <summary>
            Initializes a new instance of the SubscriptionFeatureRegistration
            class.
            </summary>
            <param name="id">Azure resource Id.</param>
            <param name="name">Azure resource name.</param>
            <param name="type">Azure resource type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration.Properties">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationApprovalType">
            <summary>
            Defines values for SubscriptionFeatureRegistrationApprovalType.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.#ctor">
            <summary>
            Initializes a new instance of the
            SubscriptionFeatureRegistrationProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.AuthorizationProfile,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the
            SubscriptionFeatureRegistrationProperties class.
            </summary>
            <param name="tenantId">The tenantId.</param>
            <param name="subscriptionId">The subscriptionId.</param>
            <param name="featureName">The featureName.</param>
            <param name="displayName">The featureDisplayName.</param>
            <param name="providerNamespace">The providerNamespace.</param>
            <param name="state">The state. Possible values include:
            'NotSpecified', 'NotRegistered', 'Pending', 'Registering',
            'Registered', 'Unregistering', 'Unregistered'</param>
            <param name="metadata">Key-value pairs for meta data.</param>
            <param name="releaseDate">The feature release date.</param>
            <param name="registrationDate">The feature registration
            date.</param>
            <param name="documentationLink">The feature documentation
            link.</param>
            <param name="approvalType">The feature approval type. Possible
            values include: 'NotSpecified', 'ApprovalRequired',
            'AutoApproval'</param>
            <param name="shouldFeatureDisplayInPortal">Indicates whether
            feature should be displayed in Portal.</param>
            <param name="description">The feature description.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.TenantId">
            <summary>
            Gets the tenantId.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.SubscriptionId">
            <summary>
            Gets the subscriptionId.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.FeatureName">
            <summary>
            Gets the featureName.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.DisplayName">
            <summary>
            Gets the featureDisplayName.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.ProviderNamespace">
            <summary>
            Gets the providerNamespace.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.State">
            <summary>
            Gets or sets the state. Possible values include: 'NotSpecified',
            'NotRegistered', 'Pending', 'Registering', 'Registered',
            'Unregistering', 'Unregistered'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.AuthorizationProfile">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.Metadata">
            <summary>
            Gets or sets key-value pairs for meta data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.ReleaseDate">
            <summary>
            Gets the feature release date.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.RegistrationDate">
            <summary>
            Gets the feature registration date.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.DocumentationLink">
            <summary>
            Gets the feature documentation link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.ApprovalType">
            <summary>
            Gets the feature approval type. Possible values include:
            'NotSpecified', 'ApprovalRequired', 'AutoApproval'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.ShouldFeatureDisplayInPortal">
            <summary>
            Gets or sets indicates whether feature should be displayed in
            Portal.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.Description">
            <summary>
            Gets or sets the feature description.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistrationState">
            <summary>
            Defines values for SubscriptionFeatureRegistrationState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies">
            <summary>
            Subscription policies.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies.#ctor">
            <summary>
            Initializes a new instance of the SubscriptionPolicies class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.SpendingLimit})">
            <summary>
            Initializes a new instance of the SubscriptionPolicies class.
            </summary>
            <param name="locationPlacementId">The subscription location
            placement ID. The ID indicates which regions are visible for a
            subscription. For example, a subscription with a location placement
            Id of Public_2014-09-01 has access to Azure public regions.</param>
            <param name="quotaId">The subscription quota ID.</param>
            <param name="spendingLimit">The subscription spending limit.
            Possible values include: 'On', 'Off', 'CurrentPeriodOff'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies.LocationPlacementId">
            <summary>
            Gets the subscription location placement ID. The ID indicates which
            regions are visible for a subscription. For example, a subscription
            with a location placement Id of Public_2014-09-01 has access to
            Azure public regions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies.QuotaId">
            <summary>
            Gets the subscription quota ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionPolicies.SpendingLimit">
            <summary>
            Gets the subscription spending limit. Possible values include:
            'On', 'Off', 'CurrentPeriodOff'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SubscriptionState">
            <summary>
            Defines values for SubscriptionState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.SystemData">
            <summary>
            Metadata pertaining to creation and last modification of the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SystemData.#ctor">
            <summary>
            Initializes a new instance of the SystemData class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.SystemData.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SystemData class.
            </summary>
            <param name="createdBy">The identity that created the
            resource.</param>
            <param name="createdByType">The type of identity that created the
            resource. Possible values include: 'User', 'Application',
            'ManagedIdentity', 'Key'</param>
            <param name="createdAt">The timestamp of resource creation
            (UTC).</param>
            <param name="lastModifiedBy">The identity that last modified the
            resource.</param>
            <param name="lastModifiedByType">The type of identity that last
            modified the resource. Possible values include: 'User',
            'Application', 'ManagedIdentity', 'Key'</param>
            <param name="lastModifiedAt">The timestamp of resource last
            modification (UTC)</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SystemData.CreatedBy">
            <summary>
            Gets or sets the identity that created the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SystemData.CreatedByType">
            <summary>
            Gets or sets the type of identity that created the resource.
            Possible values include: 'User', 'Application', 'ManagedIdentity',
            'Key'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SystemData.CreatedAt">
            <summary>
            Gets or sets the timestamp of resource creation (UTC).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SystemData.LastModifiedBy">
            <summary>
            Gets or sets the identity that last modified the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SystemData.LastModifiedByType">
            <summary>
            Gets or sets the type of identity that last modified the resource.
            Possible values include: 'User', 'Application', 'ManagedIdentity',
            'Key'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.SystemData.LastModifiedAt">
            <summary>
            Gets or sets the timestamp of resource last modification (UTC)
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TagCount">
            <summary>
            Tag count.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagCount.#ctor">
            <summary>
            Initializes a new instance of the TagCount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagCount.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the TagCount class.
            </summary>
            <param name="type">Type of count.</param>
            <param name="value">Value of count.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagCount.Type">
            <summary>
            Gets or sets type of count.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagCount.Value">
            <summary>
            Gets or sets value of count.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TagDetails">
            <summary>
            Tag details.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor">
            <summary>
            Initializes a new instance of the TagDetails class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagCount,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.TagValue})">
            <summary>
            Initializes a new instance of the TagDetails class.
            </summary>
            <param name="id">The tag name ID.</param>
            <param name="tagName">The tag name.</param>
            <param name="count">The total number of resources that use the
            resource tag. When a tag is initially created and has no associated
            resources, the value is 0.</param>
            <param name="values">The list of tag values.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Id">
            <summary>
            Gets the tag name ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.TagName">
            <summary>
            Gets or sets the tag name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Count">
            <summary>
            Gets or sets the total number of resources that use the resource
            tag. When a tag is initially created and has no associated
            resources, the value is 0.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagDetails.Values">
            <summary>
            Gets or sets the list of tag values.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.Tags">
            <summary>
            A dictionary of name and value pairs.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Tags.#ctor">
            <summary>
            Initializes a new instance of the Tags class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.Tags.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the Tags class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.Tags.TagsProperty">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchOperation">
            <summary>
            Defines values for TagsPatchOperation.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchOperation.Replace">
            <summary>
            The 'replace' option replaces the entire set of existing tags with
            a new set.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchOperation.Merge">
            <summary>
            The 'merge' option allows adding tags with new names and updating
            the values of tags with existing names.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchOperation.Delete">
            <summary>
            The 'delete' option allows selectively deleting tags based on given
            names or name/value pairs.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource">
            <summary>
            Wrapper resource for tags patch API request only.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource.#ctor">
            <summary>
            Initializes a new instance of the TagsPatchResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.Tags)">
            <summary>
            Initializes a new instance of the TagsPatchResource class.
            </summary>
            <param name="operation">The operation type for the patch API.
            Possible values include: 'Replace', 'Merge', 'Delete'</param>
            <param name="properties">The set of tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource.Operation">
            <summary>
            Gets or sets the operation type for the patch API. Possible values
            include: 'Replace', 'Merge', 'Delete'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource.Properties">
            <summary>
            Gets or sets the set of tags.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TagsResource">
            <summary>
            Wrapper resource for tags API requests and responses.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.#ctor">
            <summary>
            Initializes a new instance of the TagsResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.#ctor(Microsoft.Azure.Management.ResourceManager.Models.Tags,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TagsResource class.
            </summary>
            <param name="properties">The set of tags.</param>
            <param name="id">The ID of the tags wrapper resource.</param>
            <param name="name">The name of the tags wrapper resource.</param>
            <param name="type">The type of the tags wrapper resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.Id">
            <summary>
            Gets the ID of the tags wrapper resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.Name">
            <summary>
            Gets the name of the tags wrapper resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.Type">
            <summary>
            Gets the type of the tags wrapper resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.Properties">
            <summary>
            Gets or sets the set of tags.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagsResource.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TagValue">
            <summary>
            Tag information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagValue.#ctor">
            <summary>
            Initializes a new instance of the TagValue class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TagValue.#ctor(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagCount)">
            <summary>
            Initializes a new instance of the TagValue class.
            </summary>
            <param name="id">The tag value ID.</param>
            <param name="tagValueProperty">The tag value.</param>
            <param name="count">The tag value count.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagValue.Id">
            <summary>
            Gets the tag value ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagValue.TagValueProperty">
            <summary>
            Gets or sets the tag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TagValue.Count">
            <summary>
            Gets or sets the tag value count.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TargetResource">
            <summary>
            Target resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TargetResource.#ctor">
            <summary>
            Initializes a new instance of the TargetResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TargetResource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TargetResource class.
            </summary>
            <param name="id">The ID of the resource.</param>
            <param name="resourceName">The name of the resource.</param>
            <param name="resourceType">The type of the resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TargetResource.Id">
            <summary>
            Gets or sets the ID of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TargetResource.ResourceName">
            <summary>
            Gets or sets the name of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TargetResource.ResourceType">
            <summary>
            Gets or sets the type of the resource.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateHashResult">
            <summary>
            Result of the request to calculate template hash. It contains a string
            of minified template and its hash.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateHashResult.#ctor">
            <summary>
            Initializes a new instance of the TemplateHashResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateHashResult.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TemplateHashResult class.
            </summary>
            <param name="minifiedTemplate">The minified template
            string.</param>
            <param name="templateHash">The template hash.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateHashResult.MinifiedTemplate">
            <summary>
            Gets or sets the minified template string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateHashResult.TemplateHash">
            <summary>
            Gets or sets the template hash.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink">
            <summary>
            Entity representing the reference to the template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.#ctor">
            <summary>
            Initializes a new instance of the TemplateLink class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TemplateLink class.
            </summary>
            <param name="uri">The URI of the template to deploy. Use either the
            uri or id property, but not both.</param>
            <param name="id">The resource id of a Template Spec. Use either the
            id or uri property, but not both.</param>
            <param name="relativePath">The relativePath property can be used to
            deploy a linked template at a location relative to the parent. If
            the parent template was linked with a TemplateSpec, this will
            reference an artifact in the TemplateSpec.  If the parent was
            linked with a URI, the child deployment will be a combination of
            the parent and relativePath URIs</param>
            <param name="contentVersion">If included, must match the
            ContentVersion in the template.</param>
            <param name="queryString">The query string (for example, a SAS
            token) to be used with the templateLink URI.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.Uri">
            <summary>
            Gets or sets the URI of the template to deploy. Use either the uri
            or id property, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.Id">
            <summary>
            Gets or sets the resource id of a Template Spec. Use either the id
            or uri property, but not both.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.RelativePath">
            <summary>
            Gets or sets the relativePath property can be used to deploy a
            linked template at a location relative to the parent. If the parent
            template was linked with a TemplateSpec, this will reference an
            artifact in the TemplateSpec.  If the parent was linked with a URI,
            the child deployment will be a combination of the parent and
            relativePath URIs
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.ContentVersion">
            <summary>
            Gets or sets if included, must match the ContentVersion in the
            template.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateLink.QueryString">
            <summary>
            Gets or sets the query string (for example, a SAS token) to be used
            with the templateLink URI.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec">
            <summary>
            Template Spec object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpec class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData,System.String,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TemplateSpec class.
            </summary>
            <param name="location">The location of the Template Spec. It cannot
            be changed after Template Spec creation. It must be one of the
            supported Azure locations.</param>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
            <param name="description">Template Spec description.</param>
            <param name="displayName">Template Spec display name.</param>
            <param name="metadata">The Template Spec metadata. Metadata is an
            open-ended object and is typically a collection of key-value
            pairs.</param>
            <param name="versions">High-level information about the versions
            within this Template Spec. The keys are the version names. Only
            populated if the $expand query parameter is set to
            'versions'.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.Location">
            <summary>
            Gets or sets the location of the Template Spec. It cannot be
            changed after Template Spec creation. It must be one of the
            supported Azure locations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.Description">
            <summary>
            Gets or sets template Spec description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.DisplayName">
            <summary>
            Gets or sets template Spec display name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.Metadata">
            <summary>
            Gets or sets the Template Spec metadata. Metadata is an open-ended
            object and is typically a collection of key-value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.Versions">
            <summary>
            Gets high-level information about the versions within this Template
            Spec. The keys are the version names. Only populated if the $expand
            query parameter is set to 'versions'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecArtifact">
            <summary>
            Represents a Template Spec artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecArtifact.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecArtifact class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecArtifact.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TemplateSpecArtifact class.
            </summary>
            <param name="path">A filesystem safe relative path of the
            artifact.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecArtifact.Path">
            <summary>
            Gets or sets a filesystem safe relative path of the artifact.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecArtifact.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecExpandKind">
            <summary>
            Defines values for TemplateSpecExpandKind.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecExpandKind.Versions">
            <summary>
            Includes version information with the Template Spec.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsError">
            <summary>
            Template Specs error response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsError.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecsError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsError.#ctor(Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the TemplateSpecsError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsError.Error">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            <summary>
            Exception thrown for an invalid response with TemplateSpecsError
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecsErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TemplateSpecsErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TemplateSpecsErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecTemplateArtifact">
            <summary>
            Represents a Template Spec artifact containing an embedded Azure
            Resource Manager template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecTemplateArtifact.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecTemplateArtifact
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecTemplateArtifact.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the TemplateSpecTemplateArtifact
            class.
            </summary>
            <param name="path">A filesystem safe relative path of the
            artifact.</param>
            <param name="template">The Azure Resource Manager template.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecTemplateArtifact.Template">
            <summary>
            Gets or sets the Azure Resource Manager template.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecTemplateArtifact.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel">
            <summary>
            Template Spec properties to be updated (only tags are currently
            supported).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecUpdateModel class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TemplateSpecUpdateModel class.
            </summary>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion">
            <summary>
            Template Spec Version object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecVersion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.#ctor(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.LinkedTemplateArtifact},System.Object,System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TemplateSpecVersion class.
            </summary>
            <param name="location">The location of the Template Spec Version.
            It must match the location of the parent Template Spec.</param>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
            <param name="description">Template Spec version
            description.</param>
            <param name="linkedTemplates">An array of linked template
            artifacts.</param>
            <param name="metadata">The version metadata. Metadata is an
            open-ended object and is typically a collection of key-value
            pairs.</param>
            <param name="mainTemplate">The main Azure Resource Manager template
            content.</param>
            <param name="uiFormDefinition">The Azure Resource Manager template
            UI definition content.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.Location">
            <summary>
            Gets or sets the location of the Template Spec Version. It must
            match the location of the parent Template Spec.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.Description">
            <summary>
            Gets or sets template Spec version description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.LinkedTemplates">
            <summary>
            Gets or sets an array of linked template artifacts.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.Metadata">
            <summary>
            Gets or sets the version metadata. Metadata is an open-ended object
            and is typically a collection of key-value pairs.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.MainTemplate">
            <summary>
            Gets or sets the main Azure Resource Manager template content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.UiFormDefinition">
            <summary>
            Gets or sets the Azure Resource Manager template UI definition
            content.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo">
            <summary>
            High-level information about a Template Spec version.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecVersionInfo class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TemplateSpecVersionInfo class.
            </summary>
            <param name="description">Template Spec version
            description.</param>
            <param name="timeCreated">The timestamp of when the version was
            created.</param>
            <param name="timeModified">The timestamp of when the version was
            last modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo.Description">
            <summary>
            Gets template Spec version description.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo.TimeCreated">
            <summary>
            Gets the timestamp of when the version was created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionInfo.TimeModified">
            <summary>
            Gets the timestamp of when the version was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel">
            <summary>
            Template Spec Version properties to be updated (only tags are currently
            supported).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel.#ctor">
            <summary>
            Initializes a new instance of the TemplateSpecVersionUpdateModel
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SystemData,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TemplateSpecVersionUpdateModel
            class.
            </summary>
            <param name="id">String Id used to locate any resource on
            Azure.</param>
            <param name="name">Name of this resource.</param>
            <param name="type">Type of this resource.</param>
            <param name="systemData">Azure Resource Manager metadata containing
            createdBy and modifiedBy information.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TenantCategory">
            <summary>
            Defines values for TenantCategory.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription">
            <summary>
            Tenant Id information.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.#ctor">
            <summary>
            Initializes a new instance of the TenantIdDescription class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.ResourceManager.Models.TenantCategory},System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TenantIdDescription class.
            </summary>
            <param name="id">The fully qualified ID of the tenant. For example,
            /tenants/00000000-0000-0000-0000-000000000000.</param>
            <param name="tenantId">The tenant ID. For example,
            00000000-0000-0000-0000-000000000000.</param>
            <param name="tenantCategory">Category of the tenant. Possible
            values include: 'Home', 'ProjectedBy', 'ManagedBy'</param>
            <param name="country">Country/region name of the address for the
            tenant.</param>
            <param name="countryCode">Country/region abbreviation for the
            tenant.</param>
            <param name="displayName">The display name of the tenant.</param>
            <param name="domains">The list of domains for the tenant.</param>
            <param name="defaultDomain">The default domain for the
            tenant.</param>
            <param name="tenantType">The tenant type. Only available for 'Home'
            tenant category.</param>
            <param name="tenantBrandingLogoUrl">The tenant's branding logo URL.
            Only available for 'Home' tenant category.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.Id">
            <summary>
            Gets the fully qualified ID of the tenant. For example,
            /tenants/00000000-0000-0000-0000-000000000000.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.TenantId">
            <summary>
            Gets the tenant ID. For example,
            00000000-0000-0000-0000-000000000000.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.TenantCategory">
            <summary>
            Gets category of the tenant. Possible values include: 'Home',
            'ProjectedBy', 'ManagedBy'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.Country">
            <summary>
            Gets country/region name of the address for the tenant.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.CountryCode">
            <summary>
            Gets country/region abbreviation for the tenant.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.DisplayName">
            <summary>
            Gets the display name of the tenant.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.Domains">
            <summary>
            Gets the list of domains for the tenant.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.DefaultDomain">
            <summary>
            Gets the default domain for the tenant.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.TenantType">
            <summary>
            Gets the tenant type. Only available for 'Home' tenant category.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.TenantIdDescription.TenantBrandingLogoUrl">
            <summary>
            Gets the tenant's branding logo URL. Only available for 'Home'
            tenant category.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.UserAssignedIdentity">
            <summary>
            User-assigned managed identity.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.UserAssignedIdentity.#ctor">
            <summary>
            Initializes a new instance of the UserAssignedIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.UserAssignedIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UserAssignedIdentity class.
            </summary>
            <param name="principalId">Azure Active Directory principal ID
            associated with this identity.</param>
            <param name="clientId">Client App Id associated with this
            identity.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.UserAssignedIdentity.PrincipalId">
            <summary>
            Gets or sets azure Active Directory principal ID associated with
            this identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.UserAssignedIdentity.ClientId">
            <summary>
            Gets or sets client App Id associated with this identity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.WhatIfOperationResult">
            <summary>
            Result of the What-If operation. Contains a list of predicted changes
            and a URL link to get to the next set of results.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfOperationResult.#ctor">
            <summary>
            Initializes a new instance of the WhatIfOperationResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfOperationResult.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.WhatIfChange},Microsoft.Azure.Management.ResourceManager.Models.ErrorResponse)">
            <summary>
            Initializes a new instance of the WhatIfOperationResult class.
            </summary>
            <param name="status">Status of the What-If operation.</param>
            <param name="changes">List of resource changes predicted by What-If
            operation.</param>
            <param name="error">Error when What-If operation fails.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfOperationResult.Status">
            <summary>
            Gets or sets status of the What-If operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfOperationResult.Changes">
            <summary>
            Gets or sets list of resource changes predicted by What-If
            operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfOperationResult.Error">
            <summary>
            Gets or sets error when What-If operation fails.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange">
            <summary>
            The predicted change to the resource property.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.#ctor">
            <summary>
            Initializes a new instance of the WhatIfPropertyChange class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.#ctor(System.String,Microsoft.Azure.Management.ResourceManager.Models.PropertyChangeType,System.Object,System.Object,System.Collections.Generic.IList{Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange})">
            <summary>
            Initializes a new instance of the WhatIfPropertyChange class.
            </summary>
            <param name="path">The path of the property.</param>
            <param name="propertyChangeType">The type of property change.
            Possible values include: 'Create', 'Delete', 'Modify', 'Array',
            'NoEffect'</param>
            <param name="before">The value of the property before the
            deployment is executed.</param>
            <param name="after">The value of the property after the deployment
            is executed.</param>
            <param name="children">Nested property changes.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.Path">
            <summary>
            Gets or sets the path of the property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.PropertyChangeType">
            <summary>
            Gets or sets the type of property change. Possible values include:
            'Create', 'Delete', 'Modify', 'Array', 'NoEffect'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.Before">
            <summary>
            Gets or sets the value of the property before the deployment is
            executed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.After">
            <summary>
            Gets or sets the value of the property after the deployment is
            executed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.Children">
            <summary>
            Gets or sets nested property changes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Models.WhatIfPropertyChange.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Models.WhatIfResultFormat">
            <summary>
            Defines values for WhatIfResultFormat.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperations">
            <summary>
            DataPolicyManifestsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.PolicyClient)">
            <summary>
            Initializes a new instance of the DataPolicyManifestsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperations.Client">
            <summary>
            Gets a reference to the PolicyClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperations.GetByPolicyModeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a data policy manifest.
            </summary>
            <remarks>
            This operation retrieves the data policy manifest with the given policy
            mode.
            </remarks>
            <param name='policyMode'>
            The policy mode of the data policy manifest to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests that match
            the optional given $filter. Valid values for $filter are:
            "$filter=namespace eq '{0}'". If $filter is not provided, the unfiltered
            list includes all data policy manifests for data resource types. If
            $filter=namespace is provided, the returned list only includes all data
            policy manifests that have a namespace matching the provided value.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            "namespace eq '{value}'". If $filter is not provided, no filtering is
            performed. If $filter=namespace eq '{value}' is provided, the returned list
            only includes all data policy manifests that have a namespace matching the
            provided value.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests that match
            the optional given $filter. Valid values for $filter are:
            "$filter=namespace eq '{0}'". If $filter is not provided, the unfiltered
            list includes all data policy manifests for data resource types. If
            $filter=namespace is provided, the returned list only includes all data
            policy manifests that have a namespace matching the provided value.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions">
            <summary>
            Extension methods for DataPolicyManifestsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions.GetByPolicyMode(Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations,System.String)">
            <summary>
            Retrieves a data policy manifest.
            </summary>
            <remarks>
            This operation retrieves the data policy manifest with the given policy
            mode.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyMode'>
            The policy mode of the data policy manifest to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions.GetByPolicyModeAsync(Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a data policy manifest.
            </summary>
            <remarks>
            This operation retrieves the data policy manifest with the given policy
            mode.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyMode'>
            The policy mode of the data policy manifest to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations,System.String)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests that match
            the optional given $filter. Valid values for $filter are:
            "$filter=namespace eq '{0}'". If $filter is not provided, the unfiltered
            list includes all data policy manifests for data resource types. If
            $filter=namespace is provided, the returned list only includes all data
            policy manifests that have a namespace matching the provided value.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            "namespace eq '{value}'". If $filter is not provided, no filtering is
            performed. If $filter=namespace eq '{value}' is provided, the returned list
            only includes all data policy manifests that have a namespace matching the
            provided value.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests that match
            the optional given $filter. Valid values for $filter are:
            "$filter=namespace eq '{0}'". If $filter is not provided, the unfiltered
            list includes all data policy manifests for data resource types. If
            $filter=namespace is provided, the returned list only includes all data
            policy manifests that have a namespace matching the provided value.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            "namespace eq '{value}'". If $filter is not provided, no filtering is
            performed. If $filter=namespace eq '{value}' is provided, the returned list
            only includes all data policy manifests that have a namespace matching the
            provided value.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations,System.String)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests that match
            the optional given $filter. Valid values for $filter are:
            "$filter=namespace eq '{0}'". If $filter is not provided, the unfiltered
            list includes all data policy manifests for data resource types. If
            $filter=namespace is provided, the returned list only includes all data
            policy manifests that have a namespace matching the provided value.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DataPolicyManifestsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests that match
            the optional given $filter. Valid values for $filter are:
            "$filter=namespace eq '{0}'". If $filter is not provided, the unfiltered
            list includes all data policy manifests for data resource types. If
            $filter=namespace is provided, the returned list only includes all data
            policy manifests that have a namespace matching the provided value.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentOperations">
            <summary>
            DeploymentOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the DeploymentOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.GetAtScopeWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtScopeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.GetAtTenantScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtTenantScopeWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.GetAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.GetAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtTenantScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtManagementGroupScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListAtSubscriptionScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions">
            <summary>
            Extension methods for DeploymentOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.String)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.String)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.String)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtTenantScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtTenantScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtManagementGroupScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtManagementGroupScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtSubscriptionScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListAtSubscriptionScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient">
            <summary>
            The APIs listed in this specification can be used to manage Deployment
            Scripts resource through the Azure Resource Manager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.SubscriptionId">
            <summary>
            Subscription Id which forms part of the URI for every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.ApiVersion">
            <summary>
            Client Api version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.DeploymentScripts">
            <summary>
            Gets the IDeploymentScriptsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling DeploymentScriptsClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling DeploymentScriptsClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the DeploymentScriptsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations">
            <summary>
            DeploymentScriptsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.DeploymentScriptsClient)">
            <summary>
            Initializes a new instance of the DeploymentScriptsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.Client">
            <summary>
            Gets a reference to the DeploymentScriptsClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates deployment script tags with specified values.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script resource with the tags to be updated.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment script. When operation completes, status code 200
            returned without content.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.ListBySubscriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.GetLogsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.GetLogsDefaultWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='tail'>
            The number of lines to show from the tail of the deployment script log.
            Valid value is a positive number up to 1000. If 'tail' is not provided, all
            available logs are shown up to container instance log capacity of 4mb.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions">
            <summary>
            Extension methods for DeploymentScriptsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.Create(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript,System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.Update(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter)">
            <summary>
            Updates deployment script tags with specified values.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script resource with the tags to be updated.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter,System.Threading.CancellationToken)">
            <summary>
            Updates deployment script tags with specified values.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script resource with the tags to be updated.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String)">
            <summary>
            Gets a deployment script with a given name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment script. When operation completes, status code 200
            returned without content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment script. When operation completes, status code 200
            returned without content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListBySubscription(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListBySubscriptionAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.GetLogs(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.GetLogsAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.GetLogsDefault(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='tail'>
            The number of lines to show from the tail of the deployment script log.
            Valid value is a positive number up to 1000. If 'tail' is not provided, all
            available logs are shown up to container instance log capacity of 4mb.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.GetLogsDefaultAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='tail'>
            The number of lines to show from the tail of the deployment script log.
            Valid value is a positive number up to 1000. If 'tail' is not provided, all
            available logs are shown up to container instance log capacity of 4mb.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript,System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListBySubscriptionNext(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListBySubscriptionNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentScriptsOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations">
            <summary>
            DeploymentsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the DeploymentsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.DeleteAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CheckExistenceAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CreateOrUpdateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.GetAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CancelAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ValidateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ExportTemplateAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtScopeWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.DeleteAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CheckExistenceAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CreateOrUpdateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.GetAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CancelAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ValidateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.WhatIfAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the tenant group.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ExportTemplateAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtTenantScopeWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.DeleteAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CheckExistenceAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CreateOrUpdateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.GetAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CancelAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ValidateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.WhatIfAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the management group.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ExportTemplateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtManagementGroupScopeWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.DeleteAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CheckExistenceAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CreateOrUpdateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.GetAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CancelAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ValidateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.WhatIfAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the subscription.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ExportTemplateAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtSubscriptionScopeWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations.
            Deleting a template deployment does not affect the state of the resource
            group. This is an asynchronous operation that returns a status of 202 until
            the template deployment is successfully deleted. The Location response
            header contains the URI that is used to obtain the status of the process.
            While the process is running, a call to the URI in the Location header
            returns a status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous request
            failed, the URI in the Location header returns an error-level status code.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CheckExistenceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to check. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name is case
            insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CancelWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resource group partially deployed.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ValidateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.WhatIfWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ExportTemplateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group with the deployments to get. The name is
            case insensitive.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.CalculateTemplateHashWithHttpMessagesAsync(System.Object,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            </summary>
            <param name='template'>
            The template provided to calculate hash.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginDeleteAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginCreateOrUpdateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginValidateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginDeleteAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginCreateOrUpdateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginValidateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginWhatIfAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the tenant group.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginDeleteAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginCreateOrUpdateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginValidateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginWhatIfAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the management group.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginDeleteAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginCreateOrUpdateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginValidateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginWhatIfAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the subscription.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations.
            Deleting a template deployment does not affect the state of the resource
            group. This is an asynchronous operation that returns a status of 202 until
            the template deployment is successfully deleted. The Location response
            header contains the URI that is used to obtain the status of the process.
            While the process is running, a call to the URI in the Location header
            returns a status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous request
            failed, the URI in the Location header returns an error-level status code.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name is case
            insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginValidateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.BeginWhatIfWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtTenantScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtManagementGroupScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListAtSubscriptionScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions">
            <summary>
            Extension methods for DeploymentsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter})">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the tenant group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the tenant group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter})">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter})">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resources partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter})">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations.
            Deleting a template deployment does not affect the state of the resource
            group. This is an asynchronous operation that returns a status of 202 until
            the template deployment is successfully deleted. The Location response
            header contains the URI that is used to obtain the status of the process.
            While the process is running, a call to the URI in the Location header
            returns a status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous request
            failed, the URI in the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations.
            Deleting a template deployment does not affect the state of the resource
            group. This is an asynchronous operation that returns a status of 202 until
            the template deployment is successfully deleted. The Location response
            header contains the URI that is used to obtain the status of the process.
            While the process is running, a call to the URI in the Location header
            returns a status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous request
            failed, the URI in the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to check. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to check. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name is case
            insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name is case
            insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.Cancel(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resource group partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CancelAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is Accepted or
            Running. After the deployment is canceled, the provisioningState is set to
            Canceled. Canceling a template deployment stops the currently running
            template deployment and leaves the resource group partially deployed.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.Validate(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ValidateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIf(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.WhatIfAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplate(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter})">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployments to get. The name is
            case insensitive.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployments to get. The name is
            case insensitive.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CalculateTemplateHash(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.Object)">
            <summary>
            Calculate the hash of the given template.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='template'>
            The template provided to calculate hash.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.CalculateTemplateHashAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.Object,System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='template'>
            The template provided to calculate hash.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAtTenantScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the tenant group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the tenant group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations. This is
            an asynchronous operation that returns a status of 202 until the template
            deployment is successfully deleted. The Location response header contains
            the URI that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a status of
            202. When the process finishes, the URI in the Location header returns a
            status of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAtSubscriptionScope(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAtSubscriptionScopeAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations.
            Deleting a template deployment does not affect the state of the resource
            group. This is an asynchronous operation that returns a status of 202 until
            the template deployment is successfully deleted. The Location response
            header contains the URI that is used to obtain the status of the process.
            While the process is running, a call to the URI in the Location header
            returns a status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous request
            failed, the URI in the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted. Deleting
            a template deployment removes the associated deployment operations.
            Deleting a template deployment does not affect the state of the resource
            group. This is an asynchronous operation that returns a status of 202 until
            the template deployment is successfully deleted. The Location response
            header contains the URI that is used to obtain the status of the process.
            While the process is running, a call to the URI in the Location header
            returns a status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous request
            failed, the URI in the Location header returns an error-level status code.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The name is
            case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name is case
            insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request or link
            to JSON files.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name is case
            insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidate(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginValidateAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct and will
            be accepted by Azure Resource Manager..
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIf(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.BeginWhatIfAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at the
            scope of the resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to. The name
            is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtTenantScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtTenantScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtManagementGroupScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtManagementGroupScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtSubscriptionScopeNext(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListAtSubscriptionScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.DeploymentsOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.SubscriptionId">
            <summary>
            The Azure subscription ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.Features">
            <summary>
            Gets the IFeaturesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeatureClient.SubscriptionFeatureRegistrations">
            <summary>
            Gets the ISubscriptionFeatureRegistrationsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling FeatureClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling FeatureClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FeatureClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.ListOperationsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClient.ListOperationsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.FeatureClientExtensions">
            <summary>
            Extension methods for FeatureClient.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClientExtensions.ListOperations(Microsoft.Azure.Management.ResourceManager.IFeatureClient)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClientExtensions.ListOperationsAsync(Microsoft.Azure.Management.ResourceManager.IFeatureClient,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClientExtensions.ListOperationsNext(Microsoft.Azure.Management.ResourceManager.IFeatureClient,System.String)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeatureClientExtensions.ListOperationsNextAsync(Microsoft.Azure.Management.ResourceManager.IFeatureClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.FeaturesOperations">
            <summary>
            FeaturesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.#ctor(Microsoft.Azure.Management.ResourceManager.FeatureClient)">
            <summary>
            Initializes a new instance of the FeaturesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.Client">
            <summary>
            Gets a reference to the FeatureClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.ListAllWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features that are available through AFEC for the
            subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features in a provider namespace that are available
            through AFEC for the subscription.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider for getting features.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the preview feature with the specified name.
            </summary>
            <param name='resourceProviderNamespace'>
            The resource provider namespace for the feature.
            </param>
            <param name='featureName'>
            The name of the feature to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.RegisterWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Registers the preview feature for the subscription.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to register.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.UnregisterWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Unregisters the preview feature for the subscription.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to unregister.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.ListAllNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features that are available through AFEC for the
            subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features in a provider namespace that are available
            through AFEC for the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions">
            <summary>
            Extension methods for FeaturesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListAll(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations)">
            <summary>
            Gets all the preview features that are available through AFEC for the
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListAllAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features that are available through AFEC for the
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String)">
            <summary>
            Gets all the preview features in a provider namespace that are available
            through AFEC for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider for getting features.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features in a provider namespace that are available
            through AFEC for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider for getting features.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.String)">
            <summary>
            Gets the preview feature with the specified name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace for the feature.
            </param>
            <param name='featureName'>
            The name of the feature to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the preview feature with the specified name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace for the feature.
            </param>
            <param name='featureName'>
            The name of the feature to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.Register(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.String)">
            <summary>
            Registers the preview feature for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to register.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.RegisterAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Registers the preview feature for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to register.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.Unregister(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.String)">
            <summary>
            Unregisters the preview feature for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to unregister.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unregisters the preview feature for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to unregister.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListAllNext(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String)">
            <summary>
            Gets all the preview features that are available through AFEC for the
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListAllNextAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features that are available through AFEC for the
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String)">
            <summary>
            Gets all the preview features in a provider namespace that are available
            through AFEC for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.FeaturesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IFeaturesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features in a provider namespace that are available
            through AFEC for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations">
            <summary>
            DataPolicyManifestsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations.GetByPolicyModeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a data policy manifest.
            </summary>
            <remarks>
            This operation retrieves the data policy manifest with the given
            policy mode.
            </remarks>
            <param name='policyMode'>
            The policy mode of the data policy manifest to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests
            that match the optional given $filter. Valid values for $filter
            are: "$filter=namespace eq '{0}'". If $filter is not provided, the
            unfiltered list includes all data policy manifests for data
            resource types. If $filter=namespace is provided, the returned list
            only includes all data policy manifests that have a namespace
            matching the provided value.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            "namespace eq '{value}'". If $filter is not provided, no filtering
            is performed. If $filter=namespace eq '{value}' is provided, the
            returned list only includes all data policy manifests that have a
            namespace matching the provided value.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDataPolicyManifestsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves data policy manifests
            </summary>
            <remarks>
            This operation retrieves a list of all the data policy manifests
            that match the optional given $filter. Valid values for $filter
            are: "$filter=namespace eq '{0}'". If $filter is not provided, the
            unfiltered list includes all data policy manifests for data
            resource types. If $filter=namespace is provided, the returned list
            only includes all data policy manifests that have a namespace
            matching the provided value.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations">
            <summary>
            DeploymentOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.GetAtScopeWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtScopeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.GetAtTenantScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtTenantScopeWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.GetAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.GetAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployments operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='operationId'>
            The ID of the operation to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='top'>
            The number of results to return.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtTenantScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtManagementGroupScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListAtSubscriptionScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all deployments operations for a deployment.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient">
            <summary>
            The APIs listed in this specification can be used to manage Deployment
            Scripts resource through the Azure Resource Manager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.SubscriptionId">
            <summary>
            Subscription Id which forms part of the URI for every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.ApiVersion">
            <summary>
            Client Api version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsClient.DeploymentScripts">
            <summary>
            Gets the IDeploymentScriptsOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations">
            <summary>
            DeploymentScriptsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptUpdateParameter,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates deployment script tags with specified values.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script resource with the tags to be updated.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment script with a given name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment script. When operation completes, status code
            200 returned without content.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.ListBySubscriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.GetLogsWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.GetLogsDefaultWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets deployment script logs for a given deployment script name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='tail'>
            The number of lines to show from the tail of the deployment script
            log. Valid value is a positive number up to 1000. If 'tail' is not
            provided, all available logs are shown up to container instance log
            capacity of 4mb.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentScript,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a deployment script.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='scriptName'>
            Name of the deployment script.
            </param>
            <param name='deploymentScript'>
            Deployment script supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all deployment scripts for a given subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentScriptsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deployments scripts.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.DeploymentScriptsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations">
            <summary>
            DeploymentsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.DeleteAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CheckExistenceAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CreateOrUpdateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.GetAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CancelAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is
            Accepted or Running. After the deployment is canceled, the
            provisioningState is set to Canceled. Canceling a template
            deployment stops the currently running template deployment and
            leaves the resources partially deployed.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ValidateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ExportTemplateAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtScopeWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.DeleteAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CheckExistenceAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CreateOrUpdateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.GetAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CancelAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is
            Accepted or Running. After the deployment is canceled, the
            provisioningState is set to Canceled. Canceling a template
            deployment stops the currently running template deployment and
            leaves the resources partially deployed.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ValidateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.WhatIfAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the tenant group.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ExportTemplateAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtTenantScopeWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.DeleteAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CheckExistenceAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CreateOrUpdateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.GetAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CancelAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is
            Accepted or Running. After the deployment is canceled, the
            provisioningState is set to Canceled. Canceling a template
            deployment stops the currently running template deployment and
            leaves the resources partially deployed.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ValidateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.WhatIfAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the management group.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ExportTemplateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtManagementGroupScopeWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.DeleteAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CheckExistenceAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CreateOrUpdateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.GetAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CancelAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is
            Accepted or Running. After the deployment is canceled, the
            provisioningState is set to Canceled. Canceling a template
            deployment stops the currently running template deployment and
            leaves the resources partially deployed.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ValidateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.WhatIfAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the subscription.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ExportTemplateAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtSubscriptionScopeWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. Deleting a template deployment does not affect the
            state of the resource group. This is an asynchronous operation that
            returns a status of 202 until the template deployment is
            successfully deleted. The Location response header contains the URI
            that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a
            status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous
            request failed, the URI in the Location header returns an
            error-level status code.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The
            name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CheckExistenceWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the deployment exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to check. The
            name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name
            is case insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a deployment.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CancelWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a currently running template deployment.
            </summary>
            <remarks>
            You can cancel a deployment only if the provisioningState is
            Accepted or Running. After the deployment is canceled, the
            provisioningState is set to Canceled. Canceling a template
            deployment stops the currently running template deployment and
            leaves the resource group partially deployed.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ValidateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to.
            The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.WhatIfWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to.
            The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ExportTemplateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Exports the template used for specified deployment.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.DeploymentExtendedFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group with the deployments to get. The
            name is case insensitive.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.CalculateTemplateHashWithHttpMessagesAsync(System.Object,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Calculate the hash of the given template.
            </summary>
            <param name='template'>
            The template provided to calculate hash.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginDeleteAtScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginCreateOrUpdateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at a given scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginValidateAtScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginDeleteAtTenantScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginCreateOrUpdateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at tenant scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginValidateAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginWhatIfAtTenantScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the tenant group.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginDeleteAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginCreateOrUpdateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at management group scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginValidateAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginWhatIfAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ScopedDeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the management group.
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginDeleteAtSubscriptionScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. This is an asynchronous operation that returns a status
            of 202 until the template deployment is successfully deleted. The
            Location response header contains the URI that is used to obtain
            the status of the process. While the process is running, a call to
            the URI in the Location header returns a status of 202. When the
            process finishes, the URI in the Location header returns a status
            of 204 on success. If the asynchronous request failed, the URI in
            the Location header returns an error-level status code.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginCreateOrUpdateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources at subscription scope.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginValidateAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginWhatIfAtSubscriptionScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the subscription.
            </summary>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to What If.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a deployment from the deployment history.
            </summary>
            <remarks>
            A template deployment that is currently running cannot be deleted.
            Deleting a template deployment removes the associated deployment
            operations. Deleting a template deployment does not affect the
            state of the resource group. This is an asynchronous operation that
            returns a status of 202 until the template deployment is
            successfully deleted. The Location response header contains the URI
            that is used to obtain the status of the process. While the process
            is running, a call to the URI in the Location header returns a
            status of 202. When the process finishes, the URI in the Location
            header returns a status of 204 on success. If the asynchronous
            request failed, the URI in the Location header returns an
            error-level status code.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group with the deployment to delete. The
            name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deploys resources to a resource group.
            </summary>
            <remarks>
            You can provide the template and parameters directly in the request
            or link to JSON files.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to deploy the resources to. The name
            is case insensitive. The resource group must already exist.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Additional parameters supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginValidateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.Deployment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether the specified template is syntactically correct
            and will be accepted by Azure Resource Manager..
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to.
            The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.BeginWhatIfWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.DeploymentWhatIf,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns changes that will be made by the deployment if executed at
            the scope of the resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group the template will be deployed to.
            The name is case insensitive.
            </param>
            <param name='deploymentName'>
            The name of the deployment.
            </param>
            <param name='parameters'>
            Parameters to validate.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the given scope.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtTenantScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments at the tenant scope.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtManagementGroupScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a management group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListAtSubscriptionScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IDeploymentsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the deployments for a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IFeatureClient">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.SubscriptionId">
            <summary>
            The Azure subscription ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.Features">
            <summary>
            Gets the IFeaturesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IFeatureClient.SubscriptionFeatureRegistrations">
            <summary>
            Gets the ISubscriptionFeatureRegistrationsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeatureClient.ListOperationsWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeatureClient.ListOperationsNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Features REST API operations.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations">
            <summary>
            FeaturesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.ListAllWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features that are available through AFEC for
            the subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features in a provider namespace that are
            available through AFEC for the subscription.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider for getting features.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the preview feature with the specified name.
            </summary>
            <param name='resourceProviderNamespace'>
            The resource provider namespace for the feature.
            </param>
            <param name='featureName'>
            The name of the feature to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.RegisterWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Registers the preview feature for the subscription.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to register.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.UnregisterWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Unregisters the preview feature for the subscription.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='featureName'>
            The name of the feature to unregister.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.ListAllNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features that are available through AFEC for
            the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IFeaturesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the preview features in a provider namespace that are
            available through AFEC for the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient">
            <summary>
            Azure resources can be linked together to form logical relationships.
            You can establish links between resources belonging to different
            resource groups. However, all the linked resources must belong to the
            same subscription. Each resource can be linked to 50 other resources.
            If any of the linked resources are deleted or moved, the link owner
            must clean up the remaining link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.ApiVersion">
            <summary>
            The API version to use for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLinkClient.ResourceLinks">
            <summary>
            Gets the IResourceLinksOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IManagementLockClient">
            <summary>
            Azure resources can be locked to prevent other users in your
            organization from deleting or modifying resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.ApiVersion">
            <summary>
            The API version to use for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IManagementLockClient.ManagementLocks">
            <summary>
            Gets the IManagementLocksOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations">
            <summary>
            ManagementLocksOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.CreateOrUpdateAtResourceGroupLevelWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the resource group level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources
            inherit the same lock. To create management locks, you must have
            access to Microsoft.Authorization/* or
            Microsoft.Authorization/locks/* actions. Of the built-in roles,
            only Owner and User Access Administrator are granted those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to lock.
            </param>
            <param name='lockName'>
            The lock name. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control
            characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.DeleteAtResourceGroupLevelWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a management lock at the resource group level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/*
            actions. Of the built-in roles, only Owner and User Access
            Administrator are granted those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the lock.
            </param>
            <param name='lockName'>
            The name of lock to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.GetAtResourceGroupLevelWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a management lock at the resource group level.
            </summary>
            <param name='resourceGroupName'>
            The name of the locked resource group.
            </param>
            <param name='lockName'>
            The name of the lock to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.CreateOrUpdateByScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a management lock by scope.
            </summary>
            <param name='scope'>
            The scope for the lock. When providing a scope for the assignment,
            use '/subscriptions/{subscriptionId}' for subscriptions,
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for resource groups, and
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
            for resources.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='parameters'>
            Create or update management lock parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.DeleteByScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a management lock by scope.
            </summary>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.GetByScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a management lock by scope.
            </summary>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.CreateOrUpdateAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the resource level or any
            level below the resource.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources
            inherit the same lock. To create management locks, you must have
            access to Microsoft.Authorization/* or
            Microsoft.Authorization/locks/* actions. Of the built-in roles,
            only Owner and User Access Administrator are granted those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to lock.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource to lock.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to lock.
            </param>
            <param name='resourceName'>
            The name of the resource to lock.
            </param>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control
            characters.
            </param>
            <param name='parameters'>
            Parameters for creating or updating a  management lock.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.DeleteAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the management lock of a resource or any level below the
            resource.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/*
            actions. Of the built-in roles, only Owner and User Access
            Administrator are granted those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource with the
            lock to delete.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource with the lock to
            delete.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource with the lock to delete.
            </param>
            <param name='resourceName'>
            The name of the resource with the lock to delete.
            </param>
            <param name='lockName'>
            The name of the lock to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.GetAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the management lock of a resource or any level below resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            An extra path parameter needed in some services, like SQL
            Databases.
            </param>
            <param name='resourceType'>
            The type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.CreateOrUpdateAtSubscriptionLevelWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the subscription level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources
            inherit the same lock. To create management locks, you must have
            access to Microsoft.Authorization/* or
            Microsoft.Authorization/locks/* actions. Of the built-in roles,
            only Owner and User Access Administrator are granted those actions.
            </remarks>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters.
            It cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control
            characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.DeleteAtSubscriptionLevelWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the management lock at the subscription level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/*
            actions. Of the built-in roles, only Owner and User Access
            Administrator are granted those actions.
            </remarks>
            <param name='lockName'>
            The name of lock to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.GetAtSubscriptionLevelWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a management lock at the subscription level.
            </summary>
            <param name='lockName'>
            The name of the lock to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.ListAtResourceGroupLevelWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the locks to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.ListAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource or any level below
            resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the locked resource. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the locked resource.
            </param>
            <param name='resourceName'>
            The name of the locked resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.ListAtSubscriptionLevelWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.ListAtResourceGroupLevelNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.ListAtResourceLevelNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource or any level below
            resource.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations.ListAtSubscriptionLevelNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations">
            <summary>
            PolicyAssignmentsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes a policy assignment, given its name and the
            scope it was created in. The scope of a policy assignment is the
            part of its ID preceding
            '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates a policy assignment with the
            given scope and name. Policy assignments apply to all resources
            contained within their scope. For example, when you assign a policy
            at resource group scope, that policy applies to all resources in
            the group.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment.
            </param>
            <param name='parameters'>
            Parameters for the policy assignment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy assignment.
            </summary>
            <remarks>
            This operation retrieves a single policy assignment, given its name
            and the scope it was created at.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a policy assignment.
            </summary>
            <remarks>
            This operation updates a policy assignment with the given scope and
            name. Policy assignments apply to all resources contained within
            their scope. For example, when you assign a policy at resource
            group scope, that policy applies to all resources in the group.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment.
            </param>
            <param name='parameters'>
            Parameters for policy assignment patch request.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListForResourceGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            associated with the given resource group in the given subscription
            that match the optional given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list
            includes all policy assignments associated with the resource group,
            including those that apply directly or apply from containing
            scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource group. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy assignments that at the resource group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose
            id is {value} that apply to the resource group.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains policy assignments.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''.
            If $filter is not provided, no filtering is performed. If
            $filter=atScope() is provided, the returned list only includes all
            policy assignments that apply to the scope, which is everything in
            the unfiltered list except those applied to sub scopes contained
            within the given scope. If $filter=atExactScope() is provided, the
            returned list only includes all policy assignments that at the
            given scope. If $filter=policyDefinitionId eq '{value}' is
            provided, the returned list includes all policy assignments of the
            policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListForResourceWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            associated with the specified resource in the given resource group
            and subscription that match the optional given $filter. Valid
            values for $filter are: 'atScope()', 'atExactScope()' or
            'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource, including those that apply directly or from all
            containing scopes, as well as any applied to resources contained
            within the resource. If $filter=atScope() is provided, the returned
            list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope()
            is provided, the returned list only includes all policy assignments
            that at the resource level. If $filter=policyDefinitionId eq
            '{value}' is provided, the returned list includes all policy
            assignments of the policy definition whose id is {value} that apply
            to the resource. Three parameters plus the resource name are used
            to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path
            should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} ==
            'Microsoft.Web', {parentResourcePath} == '', {resourceType} ==
            'sites', {resourceName} == 'MyWebApp'). If the resource is part of
            a parent resource, then all parameters should be provided. For
            example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine',
            {resourceType} == 'domainNames', {resourceName} ==
            'MyComputerName'). A convenient alternative to providing the
            namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} ==
            '', {parentResourcePath} == '', {resourceType} ==
            'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace
            of a virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is
            'sites' (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListForManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            applicable to the management group that match the given $filter.
            Valid values for $filter are: 'atScope()', 'atExactScope()' or
            'policyDefinitionId eq '{value}''. If $filter=atScope() is
            provided, the returned list includes all policy assignments that
            are assigned to the management group or the management group's
            ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group.
            If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes all policy assignments of the policy
            definition whose id is {value} that apply to the management group.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''.
            If $filter is not provided, no filtering is performed. If
            $filter=atScope() is provided, the returned list only includes all
            policy assignments that apply to the scope, which is everything in
            the unfiltered list except those applied to sub scopes contained
            within the given scope. If $filter=atExactScope() is provided, the
            returned list only includes all policy assignments that at the
            given scope. If $filter=policyDefinitionId eq '{value}' is
            provided, the returned list includes all policy assignments of the
            policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            associated with the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()',
            'atExactScope()' or 'policyDefinitionId eq '{value}''. If $filter
            is not provided, the unfiltered list includes all policy
            assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within
            the subscription. If $filter=atScope() is provided, the returned
            list includes all policy assignments that apply to the
            subscription, which is everything in the unfiltered list except
            those applied to objects contained within the subscription. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose
            id is {value}.
            </remarks>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.DeleteByIdWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes the policy with the given ID. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid formats for {scope} are:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'
            (management group), '/subscriptions/{subscriptionId}'
            (subscription),
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            (resource group), or
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            (resource).
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.CreateByIdWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates the policy assignment with the
            given ID. Policy assignments made on a scope apply to all resources
            contained in that scope. For example, when you assign a policy to a
            resource group that policy applies to all resources in the group.
            Policy assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='parameters'>
            Parameters for policy assignment.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.GetByIdWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy assignment with the given ID.
            </summary>
            <remarks>
            The operation retrieves the policy assignment with the given ID.
            Policy assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.UpdateByIdWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a policy assignment.
            </summary>
            <remarks>
            This operation updates the policy assignment with the given ID.
            Policy assignments made on a scope apply to all resources contained
            in that scope. For example, when you assign a policy to a resource
            group that policy applies to all resources in the group. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to update. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='parameters'>
            Parameters for policy assignment patch request.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListForResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            associated with the given resource group in the given subscription
            that match the optional given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list
            includes all policy assignments associated with the resource group,
            including those that apply directly or apply from containing
            scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource group. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy assignments that at the resource group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose
            id is {value} that apply to the resource group.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListForResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            associated with the specified resource in the given resource group
            and subscription that match the optional given $filter. Valid
            values for $filter are: 'atScope()', 'atExactScope()' or
            'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource, including those that apply directly or from all
            containing scopes, as well as any applied to resources contained
            within the resource. If $filter=atScope() is provided, the returned
            list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope()
            is provided, the returned list only includes all policy assignments
            that at the resource level. If $filter=policyDefinitionId eq
            '{value}' is provided, the returned list includes all policy
            assignments of the policy definition whose id is {value} that apply
            to the resource. Three parameters plus the resource name are used
            to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path
            should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} ==
            'Microsoft.Web', {parentResourcePath} == '', {resourceType} ==
            'sites', {resourceName} == 'MyWebApp'). If the resource is part of
            a parent resource, then all parameters should be provided. For
            example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine',
            {resourceType} == 'domainNames', {resourceName} ==
            'MyComputerName'). A convenient alternative to providing the
            namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} ==
            '', {parentResourcePath} == '', {resourceType} ==
            'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListForManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            applicable to the management group that match the given $filter.
            Valid values for $filter are: 'atScope()', 'atExactScope()' or
            'policyDefinitionId eq '{value}''. If $filter=atScope() is
            provided, the returned list includes all policy assignments that
            are assigned to the management group or the management group's
            ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group.
            If $filter=policyDefinitionId eq '{value}' is provided, the
            returned list includes all policy assignments of the policy
            definition whose id is {value} that apply to the management group.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments
            associated with the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()',
            'atExactScope()' or 'policyDefinitionId eq '{value}''. If $filter
            is not provided, the unfiltered list includes all policy
            assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within
            the subscription. If $filter=atScope() is provided, the returned
            list includes all policy assignments that apply to the
            subscription, which is everything in the unfiltered list except
            those applied to objects contained within the subscription. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose
            id is {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IPolicyClient">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.DataPolicyManifests">
            <summary>
            Gets the IDataPolicyManifestsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.PolicyAssignments">
            <summary>
            Gets the IPolicyAssignmentsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.PolicyDefinitions">
            <summary>
            Gets the IPolicyDefinitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.PolicySetDefinitions">
            <summary>
            Gets the IPolicySetDefinitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IPolicyClient.PolicyExemptions">
            <summary>
            Gets the IPolicyExemptionsOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations">
            <summary>
            PolicyDefinitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy definition in a subscription.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            subscription with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy definition in a subscription.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given
            subscription with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy definition in a subscription.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given
            subscription with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.GetBuiltInWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a built-in policy definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy definition with the
            given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the built-in policy definition to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.CreateOrUpdateAtManagementGroupWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy definition in a management group.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            management group with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.DeleteAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy definition in a management group.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given
            management group with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.GetAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a policy definition in a management group.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given
            management group with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.ListWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a
            given subscription that match the optional given $filter. Valid
            values for $filter are: 'atExactScope()', 'policyType -eq {value}'
            or 'category eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy definitions associated with the
            subscription, including those that apply directly or from
            management groups that contain the given subscription. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, no filtering is performed.
            If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given scope. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.ListBuiltInWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy
            definitions that match the optional given $filter. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all built-in policy definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn,
            Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions
            whose category match the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, no filtering is performed.
            If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given scope. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.ListByManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a
            given management group that match the optional given $filter. Valid
            values for $filter are: 'atExactScope()', 'policyType -eq {value}'
            or 'category eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy definitions associated with the
            management group, including those that apply directly or from
            management groups that contain the given management group. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, no filtering is performed.
            If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given scope. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a
            given subscription that match the optional given $filter. Valid
            values for $filter are: 'atExactScope()', 'policyType -eq {value}'
            or 'category eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy definitions associated with the
            subscription, including those that apply directly or from
            management groups that contain the given subscription. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.ListBuiltInNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy
            definitions that match the optional given $filter. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all built-in policy definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn,
            Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions
            whose category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations.ListByManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a
            given management group that match the optional given $filter. Valid
            values for $filter are: 'atExactScope()', 'policyType -eq {value}'
            or 'category eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy definitions associated with the
            management group, including those that apply directly or from
            management groups that contain the given management group. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn, Custom, and
            Static. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy definitions whose category match the
            {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations">
            <summary>
            PolicyExemptionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy exemption.
            </summary>
            <remarks>
            This operation deletes a policy exemption, given its name and the
            scope it was created in. The scope of a policy exemption is the
            part of its ID preceding
            '/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}'.
            </remarks>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy exemption.
            </summary>
            <remarks>
            This operation creates or updates a policy exemption with the given
            scope and name. Policy exemptions apply to all resources contained
            within their scope. For example, when you create a policy exemption
            at resource group scope for a policy assignment at the same or
            above level, the exemption exempts to all applicable resources in
            the resource group.
            </remarks>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='parameters'>
            Parameters for the policy exemption.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy exemption.
            </summary>
            <remarks>
            This operation retrieves a single policy exemption, given its name
            and the scope it was created at.
            </remarks>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            associated with the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()',
            'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list
            includes all policy exemptions associated with the subscription,
            including those that apply directly or from management groups that
            contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, no
            filtering is performed. If $filter is not provided, the unfiltered
            list includes all policy exemptions associated with the scope,
            including those that apply directly or apply from containing
            scopes. If $filter=atScope() is provided, the returned list only
            includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub
            scopes contained within the given scope. If $filter=atExactScope()
            is provided, the returned list only includes all policy exemptions
            that at the given scope. If $filter=excludeExpired() is provided,
            the returned list only includes all policy exemptions that either
            haven't expired or didn't set expiration date. If
            $filter=policyAssignmentId eq '{value}' is provided. the returned
            list only includes all policy exemptions that are associated with
            the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListForResourceGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            associated with the given resource group in the given subscription
            that match the optional given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained
            within the resource group.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, no
            filtering is performed. If $filter is not provided, the unfiltered
            list includes all policy exemptions associated with the scope,
            including those that apply directly or apply from containing
            scopes. If $filter=atScope() is provided, the returned list only
            includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub
            scopes contained within the given scope. If $filter=atExactScope()
            is provided, the returned list only includes all policy exemptions
            that at the given scope. If $filter=excludeExpired() is provided,
            the returned list only includes all policy exemptions that either
            haven't expired or didn't set expiration date. If
            $filter=policyAssignmentId eq '{value}' is provided. the returned
            list only includes all policy exemptions that are associated with
            the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListForResourceWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            associated with the specified resource in the given resource group
            and subscription that match the optional given $filter. Valid
            values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter
            is not provided, the unfiltered list includes all policy exemptions
            associated with the resource, including those that apply directly
            or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource
            name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent
            resource path should not be provided (or provided as ''). For
            example a web app could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites',
            {resourceName} == 'MyWebApp'). If the resource is part of a parent
            resource, then all parameters should be provided. For example a
            virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine',
            {resourceType} == 'domainNames', {resourceName} ==
            'MyComputerName'). A convenient alternative to providing the
            namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} ==
            '', {parentResourcePath} == '', {resourceType} ==
            'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace
            of a virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is
            'sites' (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, no
            filtering is performed. If $filter is not provided, the unfiltered
            list includes all policy exemptions associated with the scope,
            including those that apply directly or apply from containing
            scopes. If $filter=atScope() is provided, the returned list only
            includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub
            scopes contained within the given scope. If $filter=atExactScope()
            is provided, the returned list only includes all policy exemptions
            that at the given scope. If $filter=excludeExpired() is provided,
            the returned list only includes all policy exemptions that either
            haven't expired or didn't set expiration date. If
            $filter=policyAssignmentId eq '{value}' is provided. the returned
            list only includes all policy exemptions that are associated with
            the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListForManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            applicable to the management group that match the given $filter.
            Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all
            policy exemptions that are assigned to the management group or the
            management group's ancestors.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, no
            filtering is performed. If $filter is not provided, the unfiltered
            list includes all policy exemptions associated with the scope,
            including those that apply directly or apply from containing
            scopes. If $filter=atScope() is provided, the returned list only
            includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub
            scopes contained within the given scope. If $filter=atExactScope()
            is provided, the returned list only includes all policy exemptions
            that at the given scope. If $filter=excludeExpired() is provided,
            the returned list only includes all policy exemptions that either
            haven't expired or didn't set expiration date. If
            $filter=policyAssignmentId eq '{value}' is provided. the returned
            list only includes all policy exemptions that are associated with
            the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            associated with the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()',
            'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list
            includes all policy exemptions associated with the subscription,
            including those that apply directly or from management groups that
            contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListForResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            associated with the given resource group in the given subscription
            that match the optional given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained
            within the resource group.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListForResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            associated with the specified resource in the given resource group
            and subscription that match the optional given $filter. Valid
            values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter
            is not provided, the unfiltered list includes all policy exemptions
            associated with the resource, including those that apply directly
            or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource
            name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent
            resource path should not be provided (or provided as ''). For
            example a web app could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites',
            {resourceName} == 'MyWebApp'). If the resource is part of a parent
            resource, then all parameters should be provided. For example a
            virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine',
            {resourceType} == 'domainNames', {resourceName} ==
            'MyComputerName'). A convenient alternative to providing the
            namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} ==
            '', {parentResourcePath} == '', {resourceType} ==
            'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations.ListForManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions
            applicable to the management group that match the given $filter.
            Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all
            policy exemptions that are assigned to the management group or the
            management group's ancestors.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations">
            <summary>
            PolicySetDefinitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the
            given subscription with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.GetBuiltInWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a built in policy set definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy set definition with
            the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.ListWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions
            in a given subscription that match the optional given $filter.
            Valid values for $filter are: 'atExactScope()', 'policyType -eq
            {value}' or 'category eq '{value}''. If $filter is not provided,
            the unfiltered list includes all policy set definitions associated
            with the subscription, including those that apply directly or from
            management groups that contain the given subscription. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn and
            Custom. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy set definitions whose category match
            the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, no filtering is performed.
            If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given scope. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn,
            Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all policy set definitions whose
            category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.ListBuiltInWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set
            definitions that match the optional given $filter. If
            $filter='category -eq {value}' is provided, the returned list only
            includes all built-in policy set definitions whose category match
            the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, no filtering is performed.
            If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given scope. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn,
            Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all policy set definitions whose
            category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.CreateOrUpdateAtManagementGroupWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the
            given management group with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.DeleteAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given
            management group with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.GetAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given
            management group with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.ListByManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions
            in a given management group that match the optional given $filter.
            Valid values for $filter are: 'atExactScope()', 'policyType -eq
            {value}' or 'category eq '{value}''. If $filter is not provided,
            the unfiltered list includes all policy set definitions associated
            with the management group, including those that apply directly or
            from management groups that contain the given management group. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy set definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn and
            Custom. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy set definitions whose category match
            the {value}.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, no filtering is performed.
            If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given scope. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn,
            Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all policy set definitions whose
            category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not
            provided, it will return 500 records.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions
            in a given subscription that match the optional given $filter.
            Valid values for $filter are: 'atExactScope()', 'policyType -eq
            {value}' or 'category eq '{value}''. If $filter is not provided,
            the unfiltered list includes all policy set definitions associated
            with the subscription, including those that apply directly or from
            management groups that contain the given subscription. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn and
            Custom. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy set definitions whose category match
            the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.ListBuiltInNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set
            definitions that match the optional given $filter. If
            $filter='category -eq {value}' is provided, the returned list only
            includes all built-in policy set definitions whose category match
            the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations.ListByManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions
            in a given management group that match the optional given $filter.
            Valid values for $filter are: 'atExactScope()', 'policyType -eq
            {value}' or 'category eq '{value}''. If $filter is not provided,
            the unfiltered list includes all policy set definitions associated
            with the management group, including those that apply directly or
            from management groups that contain the given management group. If
            $filter=atExactScope() is provided, the returned list only includes
            all policy set definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the
            {value}. Possible policyType values are NotSpecified, BuiltIn and
            Custom. If $filter='category -eq {value}' is provided, the returned
            list only includes all policy set definitions whose category match
            the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations">
            <summary>
            PrivateLinkAssociationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations.PutWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a PrivateLinkAssociation
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='parameters'>
            Parameters supplied to create the private link association.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a single private link association
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a PrivateLinkAssociation
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a private link association for a management group scope
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IProviderResourceTypesOperations">
            <summary>
            ProviderResourceTypesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProviderResourceTypesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the resource types for a specified resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property
            aliases in response, use $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IProvidersOperations">
            <summary>
            ProvidersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.UnregisterWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Unregisters a subscription from a resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to unregister.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.RegisterAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Registers a management group with a resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.ProviderPermissionsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the provider permissions.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.RegisterWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Registers a subscription with a resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='properties'>
            The third party consent for S2S.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.ListWithHttpMessagesAsync(System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='top'>
            The number of results to return. If null is passed returns all
            deployments.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource
            provider metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.ListAtTenantScopeWithHttpMessagesAsync(System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='top'>
            The number of results to return. If null is passed returns all
            providers.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource
            provider metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property
            aliases in response, use $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.GetAtTenantScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified resource provider at the tenant level.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property
            aliases in response, use $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IProvidersOperations.ListAtTenantScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations">
            <summary>
            ResourceGroupsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.CheckExistenceWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether a resource group exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group to check. The name is case
            insensitive.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group to create or update. Can include
            alphanumeric, underscore, parentheses, hyphen, period (except at
            end), and Unicode characters that match the allowed characters.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update a resource group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also
            deleted. Deleting a resource group deletes all of its template
            deployments and currently stored operations.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case
            insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the
            following is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group to get. The name is case
            insensitive.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource group.
            </summary>
            <remarks>
            Resource groups can be updated through a simple PATCH operation to
            a group address. The format of the request is the same as that for
            creating a resource group. If a field is unspecified, the current
            value is retained.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to update. The name is case
            insensitive.
            </param>
            <param name='parameters'>
            Parameters supplied to update a resource group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.ExportTemplateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also
            deleted. Deleting a resource group deletes all of its template
            deployments and currently stored operations.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case
            insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the
            following is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.BeginExportTemplateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations">
            <summary>
            ResourceLinksOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource link with the specified ID.
            </summary>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceLink,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource link between the specified resources.
            </summary>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='parameters'>
            Parameters for creating or updating a resource link.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource link with the specified ID.
            </summary>
            <param name='linkId'>
            The fully qualified Id of the resource link. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.ListAtSubscriptionWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.ListAtSourceScopeWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of resource links at and below the specified source
            scope.
            </summary>
            <param name='scope'>
            The fully qualified ID of the scope for getting the resource links.
            For example, to list resource links at and under a resource group,
            set the scope to
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.ListAtSubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations.ListAtSourceScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of resource links at and below the specified source
            scope.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient">
            <summary>
            Provides operations for working with resources and resource groups.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.SubscriptionId">
            <summary>
            The Microsoft Azure subscription ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.Deployments">
            <summary>
            Gets the IDeploymentsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.Providers">
            <summary>
            Gets the IProvidersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.ProviderResourceTypes">
            <summary>
            Gets the IProviderResourceTypesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.Resources">
            <summary>
            Gets the IResourcesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.ResourceGroups">
            <summary>
            Gets the IResourceGroupsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.Tags">
            <summary>
            Gets the ITagsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourceManagementClient.DeploymentOperations">
            <summary>
            Gets the IDeploymentOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations">
            <summary>
            ResourceManagementPrivateLinkOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations.PutWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a resource management group private link.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='parameters'>
            The region to create the Resource Management private link.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a resource management private link(resource-level).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a resource management private link.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resource management private links in a subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resource management private links in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient">
            <summary>
            Provides operations for managing private link resources
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.PrivateLinkAssociation">
            <summary>
            Gets the IPrivateLinkAssociationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.IResourcePrivateLinkClient.ResourceManagementPrivateLink">
            <summary>
            Gets the IResourceManagementPrivateLinkOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.IResourcesOperations">
            <summary>
            ResourcesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='resourceGroupName'>
            The resource group with the resources to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.MoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. When
            moving resources, both the source group and the target group are
            locked for the duration of the operation. Write and delete
            operations are blocked on the groups until the move completes.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.ValidateMoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether resources can be moved from one resource group to
            another resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved
            to the target. The resources to move must be in the same source
            resource group. The target resource group may be in a different
            subscription. If validation succeeds, it returns HTTP response code
            204 (no content). If validation fails, it returns HTTP response
            code 409 (Conflict) with an error message. Retrieve the URL in the
            Location header value to check the result of the long-running
            operation.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate
            for move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.CheckExistenceWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether a resource exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to check.
            The name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider of the resource to check.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to check whether it exists.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to
            delete. The name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to get. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource to get.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.CheckExistenceByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks by ID whether a resource exists.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.DeleteByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.CreateOrUpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.UpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.GetByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginMoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. When
            moving resources, both the source group and the target group are
            locked for the duration of the operation. Write and delete
            operations are blocked on the groups until the move completes.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginValidateMoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether resources can be moved from one resource group to
            another resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved
            to the target. The resources to move must be in the same source
            resource group. The target resource group may be in a different
            subscription. If validation succeeds, it returns HTTP response code
            204 (no content). If validation fails, it returns HTTP response
            code 409 (Conflict) with an error message. Retrieve the URL in the
            Location header value to check the result of the long-running
            operation.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate
            for move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to
            delete. The name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginDeleteByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginCreateOrUpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.BeginUpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name
            and resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.IResourcesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient">
            <summary>
            All resource groups and resources exist within subscriptions. These
            operation enable you get information about your subscriptions and
            tenants. A tenant is a dedicated instance of Azure Active Directory
            (Azure AD) for your organization.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.ApiVersion">
            <summary>
            The API version to use for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.Subscriptions">
            <summary>
            Gets the ISubscriptionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.Tenants">
            <summary>
            Gets the ITenantsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionClient.CheckResourceNameWithHttpMessagesAsync(Microsoft.Azure.Management.ResourceManager.Models.ResourceName,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks resource name validity
            </summary>
            <remarks>
            A resource name is valid if it is not a reserved word, does not
            contains a reserved word and does not start with a reserved word
            </remarks>
            <param name='resourceNameDefinition'>
            Resource object with values for resource name and resource type
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations">
            <summary>
            SubscriptionFeatureRegistrationsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns a feature registration
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a feature registration.
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='subscriptionFeatureRegistrationType'>
            Subscription Feature Registration Type details.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a feature registration
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.ListBySubscriptionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription
            and provider namespace.
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.ListAllBySubscriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription
            and provider namespace.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations.ListAllBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations">
            <summary>
            SubscriptionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations.ListLocationsWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all available geo-locations.
            </summary>
            <remarks>
            This operation provides all the locations that are available for
            resource providers; however, each resource provider may support a
            subset of this list.
            </remarks>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='includeExtendedLocations'>
            Whether to include extended locations.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets details about a specified subscription.
            </summary>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ITagsOperations">
            <summary>
            TagsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.DeleteValueWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a predefined tag value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a value from the list of predefined
            values for an existing predefined tag name. The value being deleted
            must not be in use as a tag value for the given tag name for any
            resource.
            </remarks>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.CreateOrUpdateValueWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a predefined value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a value to the list of predefined
            values for an existing predefined tag name. A tag value can have a
            maximum of 256 characters.
            </remarks>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to create.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a name to the list of predefined tag
            names for the given subscription. A tag name can have a maximum of
            512 characters and is case-insensitive. Tag names cannot have the
            following prefixes which are reserved for Azure use: 'microsoft',
            'azure', 'windows'.
            </remarks>
            <param name='tagName'>
            The name of the tag to create.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a name from the list of predefined
            tag names for the given subscription. The name being deleted must
            not be in use as a tag name for any resource. All predefined values
            for the given name must have already been deleted.
            </remarks>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags,
            resource group tags and subscription tags, and returns a summary of
            usage for each tag name and value under the given subscription. In
            case of a large number of tags, this operation may return a
            previously cached result.
            </remarks>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.CreateOrUpdateAtScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates the entire set of tags on a resource or
            subscription.
            </summary>
            <remarks>
            This operation allows adding or replacing the entire set of tags on
            the specified resource or subscription. The specified entity can
            have a maximum of 50 tags.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.UpdateAtScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Selectively updates the set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows replacing, merging or selectively deleting
            tags on the specified resource or subscription. The specified
            entity can have a maximum of 50 tags at the end of the operation.
            The 'replace' option replaces the entire set of existing tags with
            a new set. The 'merge' option allows adding tags with new names and
            updating the values of tags with existing names. The 'delete'
            option allows selectively deleting tags based on given names or
            name/value pairs.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.GetAtScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the entire set of tags on a resource or subscription.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.DeleteAtScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the entire set of tags on a resource or subscription.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITagsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags,
            resource group tags and subscription tags, and returns a summary of
            usage for each tag name and value under the given subscription. In
            case of a large number of tags, this operation may return a
            previously cached result.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient">
            <summary>
            The APIs listed in this specification can be used to manage Template
            Spec resources through the Azure Resource Manager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.SubscriptionId">
            <summary>
            Subscription Id which forms part of the URI for every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.ApiVersion">
            <summary>
            Client Api version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.TemplateSpecs">
            <summary>
            Gets the ITemplateSpecsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsClient.TemplateSpecVersions">
            <summary>
            Gets the ITemplateSpecVersionsOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations">
            <summary>
            TemplateSpecsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec tags with specified values.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec resource with the tags to be updated.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the
            response. Optional. Possible values include: 'versions'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Template Spec by name. When operation completes, status
            code 200 returned without content.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.ListBySubscriptionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the
            response. Optional. Possible values include: 'versions'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the
            response. Optional. Possible values include: 'versions'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations">
            <summary>
            TemplateSpecVersionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec version.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionModel'>
            Template Spec Version supplied to the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec Version tags with specified values.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionUpdateModel'>
            Template Spec Version resource with the tags to be updated.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version from a Template Spec. When operation
            completes, status code 200 returned without content.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template
            Spec.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template
            Spec.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ITenantsOperations">
            <summary>
            TenantsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITenantsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ITenantsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient">
            <summary>
            Azure resources can be linked together to form logical relationships.
            You can establish links between resources belonging to different
            resource groups. However, all the linked resources must belong to the
            same subscription. Each resource can be linked to 50 other resources.
            If any of the linked resources are deleted or moved, the link owner
            must clean up the remaining link.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.ApiVersion">
            <summary>
            The API version to use for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.ResourceLinks">
            <summary>
            Gets the IResourceLinksOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ManagementLinkClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ManagementLinkClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLinkClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ManagementLockClient">
            <summary>
            Azure resources can be locked to prevent other users in your
            organization from deleting or modifying resources.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.ApiVersion">
            <summary>
            The API version to use for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.ManagementLocks">
            <summary>
            Gets the IManagementLocksOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ManagementLockClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ManagementLockClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ManagementLockClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLockClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations">
            <summary>
            ManagementLocksOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ManagementLockClient)">
            <summary>
            Initializes a new instance of the ManagementLocksOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.Client">
            <summary>
            Gets a reference to the ManagementLockClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.CreateOrUpdateAtResourceGroupLevelWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the resource group level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to lock.
            </param>
            <param name='lockName'>
            The lock name. The lock name can be a maximum of 260 characters. It cannot
            contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.DeleteAtResourceGroupLevelWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a management lock at the resource group level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the lock.
            </param>
            <param name='lockName'>
            The name of lock to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.GetAtResourceGroupLevelWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a management lock at the resource group level.
            </summary>
            <param name='resourceGroupName'>
            The name of the locked resource group.
            </param>
            <param name='lockName'>
            The name of the lock to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.CreateOrUpdateByScopeWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a management lock by scope.
            </summary>
            <param name='scope'>
            The scope for the lock. When providing a scope for the assignment, use
            '/subscriptions/{subscriptionId}' for subscriptions,
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for
            resource groups, and
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
            for resources.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='parameters'>
            Create or update management lock parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.DeleteByScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a management lock by scope.
            </summary>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.GetByScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a management lock by scope.
            </summary>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.CreateOrUpdateAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the resource level or any level
            below the resource.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to lock.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource to lock.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to lock.
            </param>
            <param name='resourceName'>
            The name of the resource to lock.
            </param>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            Parameters for creating or updating a  management lock.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.DeleteAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the management lock of a resource or any level below the resource.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource with the lock to
            delete.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource with the lock to delete.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource with the lock to delete.
            </param>
            <param name='resourceName'>
            The name of the resource with the lock to delete.
            </param>
            <param name='lockName'>
            The name of the lock to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.GetAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the management lock of a resource or any level below resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            An extra path parameter needed in some services, like SQL Databases.
            </param>
            <param name='resourceType'>
            The type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.CreateOrUpdateAtSubscriptionLevelWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the subscription level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.DeleteAtSubscriptionLevelWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the management lock at the subscription level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='lockName'>
            The name of lock to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.GetAtSubscriptionLevelWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a management lock at the subscription level.
            </summary>
            <param name='lockName'>
            The name of the lock to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.ListAtResourceGroupLevelWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the locks to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.ListAtResourceLevelWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource or any level below resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the locked resource. The name is
            case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the locked resource.
            </param>
            <param name='resourceName'>
            The name of the locked resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.ListAtSubscriptionLevelWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.ListAtResourceGroupLevelNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.ListAtResourceLevelNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource or any level below resource.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperations.ListAtSubscriptionLevelNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions">
            <summary>
            Extension methods for ManagementLocksOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateAtResourceGroupLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject)">
            <summary>
            Creates or updates a management lock at the resource group level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to lock.
            </param>
            <param name='lockName'>
            The lock name. The lock name can be a maximum of 260 characters. It cannot
            contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateAtResourceGroupLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the resource group level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to lock.
            </param>
            <param name='lockName'>
            The lock name. The lock name can be a maximum of 260 characters. It cannot
            contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteAtResourceGroupLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String)">
            <summary>
            Deletes a management lock at the resource group level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the lock.
            </param>
            <param name='lockName'>
            The name of lock to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteAtResourceGroupLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a management lock at the resource group level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the lock.
            </param>
            <param name='lockName'>
            The name of lock to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetAtResourceGroupLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String)">
            <summary>
            Gets a management lock at the resource group level.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the locked resource group.
            </param>
            <param name='lockName'>
            The name of the lock to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetAtResourceGroupLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a management lock at the resource group level.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the locked resource group.
            </param>
            <param name='lockName'>
            The name of the lock to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateByScope(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject)">
            <summary>
            Create or update a management lock by scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope for the lock. When providing a scope for the assignment, use
            '/subscriptions/{subscriptionId}' for subscriptions,
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for
            resource groups, and
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
            for resources.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='parameters'>
            Create or update management lock parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateByScopeAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Threading.CancellationToken)">
            <summary>
            Create or update a management lock by scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope for the lock. When providing a scope for the assignment, use
            '/subscriptions/{subscriptionId}' for subscriptions,
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for
            resource groups, and
            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'
            for resources.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='parameters'>
            Create or update management lock parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteByScope(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String)">
            <summary>
            Delete a management lock by scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteByScopeAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a management lock by scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetByScope(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String)">
            <summary>
            Get a management lock by scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetByScopeAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a management lock by scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope for the lock.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateAtResourceLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject)">
            <summary>
            Creates or updates a management lock at the resource level or any level
            below the resource.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to lock.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource to lock.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to lock.
            </param>
            <param name='resourceName'>
            The name of the resource to lock.
            </param>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            Parameters for creating or updating a  management lock.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateAtResourceLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the resource level or any level
            below the resource.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to lock.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource to lock.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to lock.
            </param>
            <param name='resourceName'>
            The name of the resource to lock.
            </param>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            Parameters for creating or updating a  management lock.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteAtResourceLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deletes the management lock of a resource or any level below the resource.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource with the lock to
            delete.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource with the lock to delete.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource with the lock to delete.
            </param>
            <param name='resourceName'>
            The name of the resource with the lock to delete.
            </param>
            <param name='lockName'>
            The name of the lock to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteAtResourceLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the management lock of a resource or any level below the resource.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource with the lock to
            delete.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider namespace of the resource with the lock to delete.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource with the lock to delete.
            </param>
            <param name='resourceName'>
            The name of the resource with the lock to delete.
            </param>
            <param name='lockName'>
            The name of the lock to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetAtResourceLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get the management lock of a resource or any level below resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            An extra path parameter needed in some services, like SQL Databases.
            </param>
            <param name='resourceType'>
            The type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetAtResourceLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the management lock of a resource or any level below resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            An extra path parameter needed in some services, like SQL Databases.
            </param>
            <param name='resourceType'>
            The type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='lockName'>
            The name of lock.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateAtSubscriptionLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject)">
            <summary>
            Creates or updates a management lock at the subscription level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.CreateOrUpdateAtSubscriptionLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a management lock at the subscription level.
            </summary>
            <remarks>
            When you apply a lock at a parent scope, all child resources inherit the
            same lock. To create management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='lockName'>
            The name of lock. The lock name can be a maximum of 260 characters. It
            cannot contain &lt;, &gt; %, &amp;, :, \, ?, /, or any control characters.
            </param>
            <param name='parameters'>
            The management lock parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteAtSubscriptionLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String)">
            <summary>
            Deletes the management lock at the subscription level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='lockName'>
            The name of lock to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.DeleteAtSubscriptionLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the management lock at the subscription level.
            </summary>
            <remarks>
            To delete management locks, you must have access to
            Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
            the built-in roles, only Owner and User Access Administrator are granted
            those actions.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='lockName'>
            The name of lock to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetAtSubscriptionLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String)">
            <summary>
            Gets a management lock at the subscription level.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='lockName'>
            The name of the lock to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.GetAtSubscriptionLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a management lock at the subscription level.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='lockName'>
            The name of the lock to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceGroupLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject})">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the locks to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceGroupLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the locks to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject})">
            <summary>
            Gets all the management locks for a resource or any level below resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the locked resource. The name is
            case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the locked resource.
            </param>
            <param name='resourceName'>
            The name of the locked resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource or any level below resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the locked resource. The name is
            case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the locked resource.
            </param>
            <param name='resourceName'>
            The name of the locked resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtSubscriptionLevel(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject})">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtSubscriptionLevelAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ManagementLockObject},System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceGroupLevelNext(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceGroupLevelNextAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceLevelNext(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String)">
            <summary>
            Gets all the management locks for a resource or any level below resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtResourceLevelNextAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a resource or any level below resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtSubscriptionLevelNext(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ManagementLocksOperationsExtensions.ListAtSubscriptionLevelNextAsync(Microsoft.Azure.Management.ResourceManager.IManagementLocksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the management locks for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Operations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.Operations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Operations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.Operations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.OperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IOperations)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.OperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.OperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IOperations,System.String)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.OperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Microsoft.Resources REST API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations">
            <summary>
            PolicyAssignmentsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.PolicyClient)">
            <summary>
            Initializes a new instance of the PolicyAssignmentsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.Client">
            <summary>
            Gets a reference to the PolicyClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes a policy assignment, given its name and the scope it
            was created in. The scope of a policy assignment is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates a policy assignment with the given scope
            and name. Policy assignments apply to all resources contained within their
            scope. For example, when you assign a policy at resource group scope, that
            policy applies to all resources in the group.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment.
            </param>
            <param name='parameters'>
            Parameters for the policy assignment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy assignment.
            </summary>
            <remarks>
            This operation retrieves a single policy assignment, given its name and the
            scope it was created at.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a policy assignment.
            </summary>
            <remarks>
            This operation updates a policy assignment with the given scope and name.
            Policy assignments apply to all resources contained within their scope. For
            example, when you assign a policy at resource group scope, that policy
            applies to all resources in the group.
            </remarks>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment.
            </param>
            <param name='parameters'>
            Parameters for policy assignment patch request.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListForResourceGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=atExactScope() is provided,
            the returned list only includes all policy assignments that at the resource
            group. If $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose id is
            {value} that apply to the resource group.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains policy assignments.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, no filtering is performed. If $filter=atScope() is
            provided, the returned list only includes all policy assignments that apply
            to the scope, which is everything in the unfiltered list except those
            applied to sub scopes contained within the given scope. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy assignments that at the given scope. If $filter=policyDefinitionId
            eq '{value}' is provided, the returned list includes all policy assignments
            of the policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListForResourceWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. If $filter=atScope() is provided, the
            returned list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope() is
            provided, the returned list only includes all policy assignments that at
            the resource level. If $filter=policyDefinitionId eq '{value}' is provided,
            the returned list includes all policy assignments of the policy definition
            whose id is {value} that apply to the resource. Three parameters plus the
            resource name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent resource
            path should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListForManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that are assigned to the management group or the management
            group's ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value} that apply to the management group.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, no filtering is performed. If $filter=atScope() is
            provided, the returned list only includes all policy assignments that apply
            to the scope, which is everything in the unfiltered list except those
            applied to sub scopes contained within the given scope. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy assignments that at the given scope. If $filter=policyDefinitionId
            eq '{value}' is provided, the returned list includes all policy assignments
            of the policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within the
            subscription. If $filter=atScope() is provided, the returned list includes
            all policy assignments that apply to the subscription, which is everything
            in the unfiltered list except those applied to objects contained within the
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value}.
            </remarks>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.DeleteByIdWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes the policy with the given ID. Policy assignment IDs
            have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid formats for {scope} are:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'
            (management group), '/subscriptions/{subscriptionId}' (subscription),
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            (resource group), or
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            (resource).
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.CreateByIdWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates the policy assignment with the given ID.
            Policy assignments made on a scope apply to all resources contained in that
            scope. For example, when you assign a policy to a resource group that
            policy applies to all resources in the group. Policy assignment IDs have
            this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='parameters'>
            Parameters for policy assignment.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.GetByIdWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy assignment with the given ID.
            </summary>
            <remarks>
            The operation retrieves the policy assignment with the given ID. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.UpdateByIdWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a policy assignment.
            </summary>
            <remarks>
            This operation updates the policy assignment with the given ID. Policy
            assignments made on a scope apply to all resources contained in that scope.
            For example, when you assign a policy to a resource group that policy
            applies to all resources in the group. Policy assignment IDs have this
            format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to update. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='parameters'>
            Parameters for policy assignment patch request.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListForResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=atExactScope() is provided,
            the returned list only includes all policy assignments that at the resource
            group. If $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose id is
            {value} that apply to the resource group.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListForResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. If $filter=atScope() is provided, the
            returned list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope() is
            provided, the returned list only includes all policy assignments that at
            the resource level. If $filter=policyDefinitionId eq '{value}' is provided,
            the returned list includes all policy assignments of the policy definition
            whose id is {value} that apply to the resource. Three parameters plus the
            resource name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent resource
            path should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListForManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that are assigned to the management group or the management
            group's ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value} that apply to the management group.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within the
            subscription. If $filter=atScope() is provided, the returned list includes
            all policy assignments that apply to the subscription, which is everything
            in the unfiltered list except those applied to objects contained within the
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions">
            <summary>
            Extension methods for PolicyAssignmentsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes a policy assignment, given its name and the scope it
            was created in. The scope of a policy assignment is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes a policy assignment, given its name and the scope it
            was created in. The scope of a policy assignment is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Create(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates a policy assignment with the given scope
            and name. Policy assignments apply to all resources contained within their
            scope. For example, when you assign a policy at resource group scope, that
            policy applies to all resources in the group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment.
            </param>
            <param name='parameters'>
            Parameters for the policy assignment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates a policy assignment with the given scope
            and name. Policy assignments apply to all resources contained within their
            scope. For example, when you assign a policy at resource group scope, that
            policy applies to all resources in the group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment.
            </param>
            <param name='parameters'>
            Parameters for the policy assignment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String)">
            <summary>
            Retrieves a policy assignment.
            </summary>
            <remarks>
            This operation retrieves a single policy assignment, given its name and the
            scope it was created at.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy assignment.
            </summary>
            <remarks>
            This operation retrieves a single policy assignment, given its name and the
            scope it was created at.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy assignment. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyAssignmentName'>
            The name of the policy assignment to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.Update(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroup(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=atExactScope() is provided,
            the returned list only includes all policy assignments that at the resource
            group. If $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose id is
            {value} that apply to the resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains policy assignments.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, no filtering is performed. If $filter=atScope() is
            provided, the returned list only includes all policy assignments that apply
            to the scope, which is everything in the unfiltered list except those
            applied to sub scopes contained within the given scope. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy assignments that at the given scope. If $filter=policyDefinitionId
            eq '{value}' is provided, the returned list includes all policy assignments
            of the policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=atExactScope() is provided,
            the returned list only includes all policy assignments that at the resource
            group. If $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose id is
            {value} that apply to the resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains policy assignments.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, no filtering is performed. If $filter=atScope() is
            provided, the returned list only includes all policy assignments that apply
            to the scope, which is everything in the unfiltered list except those
            applied to sub scopes contained within the given scope. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy assignments that at the given scope. If $filter=policyDefinitionId
            eq '{value}' is provided, the returned list includes all policy assignments
            of the policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResource(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment})">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. If $filter=atScope() is provided, the
            returned list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope() is
            provided, the returned list only includes all policy assignments that at
            the resource level. If $filter=policyDefinitionId eq '{value}' is provided,
            the returned list includes all policy assignments of the policy definition
            whose id is {value} that apply to the resource. Three parameters plus the
            resource name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent resource
            path should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.String,System.String,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. If $filter=atScope() is provided, the
            returned list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope() is
            provided, the returned list only includes all policy assignments that at
            the resource level. If $filter=policyDefinitionId eq '{value}' is provided,
            the returned list includes all policy assignments of the policy definition
            whose id is {value} that apply to the resource. Three parameters plus the
            resource name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent resource
            path should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that are assigned to the management group or the management
            group's ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value} that apply to the management group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, no filtering is performed. If $filter=atScope() is
            provided, the returned list only includes all policy assignments that apply
            to the scope, which is everything in the unfiltered list except those
            applied to sub scopes contained within the given scope. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy assignments that at the given scope. If $filter=policyDefinitionId
            eq '{value}' is provided, the returned list includes all policy assignments
            of the policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that are assigned to the management group or the management
            group's ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value} that apply to the management group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, no filtering is performed. If $filter=atScope() is
            provided, the returned list only includes all policy assignments that apply
            to the scope, which is everything in the unfiltered list except those
            applied to sub scopes contained within the given scope. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy assignments that at the given scope. If $filter=policyDefinitionId
            eq '{value}' is provided, the returned list includes all policy assignments
            of the policy definition whose id is {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment})">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within the
            subscription. If $filter=atScope() is provided, the returned list includes
            all policy assignments that apply to the subscription, which is everything
            in the unfiltered list except those applied to objects contained within the
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within the
            subscription. If $filter=atScope() is provided, the returned list includes
            all policy assignments that apply to the subscription, which is everything
            in the unfiltered list except those applied to objects contained within the
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes the policy with the given ID. Policy assignment IDs
            have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid formats for {scope} are:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'
            (management group), '/subscriptions/{subscriptionId}' (subscription),
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            (resource group), or
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            (resource).
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.DeleteByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy assignment.
            </summary>
            <remarks>
            This operation deletes the policy with the given ID. Policy assignment IDs
            have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid formats for {scope} are:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'
            (management group), '/subscriptions/{subscriptionId}' (subscription),
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
            (resource group), or
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            (resource).
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates the policy assignment with the given ID.
            Policy assignments made on a scope apply to all resources contained in that
            scope. For example, when you assign a policy to a resource group that
            policy applies to all resources in the group. Policy assignment IDs have
            this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='parameters'>
            Parameters for policy assignment.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.CreateByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignment,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy assignment.
            </summary>
            <remarks>
            This operation creates or updates the policy assignment with the given ID.
            Policy assignments made on a scope apply to all resources contained in that
            scope. For example, when you assign a policy to a resource group that
            policy applies to all resources in the group. Policy assignment IDs have
            this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='parameters'>
            Parameters for policy assignment.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)">
            <summary>
            Retrieves the policy assignment with the given ID.
            </summary>
            <remarks>
            The operation retrieves the policy assignment with the given ID. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.GetByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy assignment with the given ID.
            </summary>
            <remarks>
            The operation retrieves the policy assignment with the given ID. Policy
            assignment IDs have this format:
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            Valid scopes are: management group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyAssignmentId'>
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.UpdateById(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.UpdateByIdAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyAssignmentUpdate,System.Threading.CancellationToken)" -->
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=atExactScope() is provided,
            the returned list only includes all policy assignments that at the resource
            group. If $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose id is
            {value} that apply to the resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()'
            or 'policyDefinitionId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy assignments associated with the
            resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group. If $filter=atScope() is provided, the returned list
            includes all policy assignments that apply to the resource group, which is
            everything in the unfiltered list except those applied to resources
            contained within the resource group. If $filter=atExactScope() is provided,
            the returned list only includes all policy assignments that at the resource
            group. If $filter=policyDefinitionId eq '{value}' is provided, the returned
            list includes all policy assignments of the policy definition whose id is
            {value} that apply to the resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. If $filter=atScope() is provided, the
            returned list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope() is
            provided, the returned list only includes all policy assignments that at
            the resource level. If $filter=policyDefinitionId eq '{value}' is provided,
            the returned list includes all policy assignments of the policy definition
            whose id is {value} that apply to the resource. Three parameters plus the
            resource name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent resource
            path should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForResourceNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter is not provided, the unfiltered list includes all policy
            assignments associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. If $filter=atScope() is provided, the
            returned list includes all policy assignments that apply to the resource,
            which is everything in the unfiltered list except those applied to
            resources contained within the resource. If $filter=atExactScope() is
            provided, the returned list only includes all policy assignments that at
            the resource level. If $filter=policyDefinitionId eq '{value}' is provided,
            the returned list includes all policy assignments of the policy definition
            whose id is {value} that apply to the resource. Three parameters plus the
            resource name are used to identify a specific resource. If the resource is
            not part of a parent resource (the more common case), the parent resource
            path should not be provided (or provided as ''). For example a web app
            could be specified as ({resourceProviderNamespace} == 'Microsoft.Web',
            {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} ==
            'MyWebApp'). If the resource is part of a parent resource, then all
            parameters should be provided. For example a virtual machine DNS name could
            be specified as ({resourceProviderNamespace} == 'Microsoft.Compute',
            {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType}
            == 'domainNames', {resourceName} == 'MyComputerName'). A convenient
            alternative to providing the namespace and type name separately is to
            provide both in the {resourceType} parameter, format:
            ({resourceProviderNamespace} == '', {parentResourcePath} == '',
            {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForManagementGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that are assigned to the management group or the management
            group's ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value} that apply to the management group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListForManagementGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq '{value}''. If
            $filter=atScope() is provided, the returned list includes all policy
            assignments that are assigned to the management group or the management
            group's ancestors. If $filter=atExactScope() is provided, the returned list
            only includes all policy assignments that at the management group. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value} that apply to the management group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within the
            subscription. If $filter=atScope() is provided, the returned list includes
            all policy assignments that apply to the subscription, which is everything
            in the unfiltered list except those applied to objects contained within the
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyAssignmentsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyAssignmentsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy assignments that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy assignments associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()' or 'policyDefinitionId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy assignments associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription, as well as any applied to objects contained within the
            subscription. If $filter=atScope() is provided, the returned list includes
            all policy assignments that apply to the subscription, which is everything
            in the unfiltered list except those applied to objects contained within the
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy assignments that at the subscription. If
            $filter=policyDefinitionId eq '{value}' is provided, the returned list
            includes all policy assignments of the policy definition whose id is
            {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.DataPolicyManifests">
            <summary>
            Gets the IDataPolicyManifestsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.PolicyAssignments">
            <summary>
            Gets the IPolicyAssignmentsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.PolicyDefinitions">
            <summary>
            Gets the IPolicyDefinitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.PolicySetDefinitions">
            <summary>
            Gets the IPolicySetDefinitionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyClient.PolicyExemptions">
            <summary>
            Gets the IPolicyExemptionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling PolicyClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling PolicyClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the PolicyClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations">
            <summary>
            PolicyDefinitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.PolicyClient)">
            <summary>
            Initializes a new instance of the PolicyDefinitionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.Client">
            <summary>
            Gets a reference to the PolicyClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy definition in a subscription.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            subscription with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy definition in a subscription.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given subscription with
            the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy definition in a subscription.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given subscription
            with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.GetBuiltInWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a built-in policy definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy definition with the given
            name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the built-in policy definition to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.CreateOrUpdateAtManagementGroupWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy definition in a management group.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            management group with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.DeleteAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy definition in a management group.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given management group
            with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.GetAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a policy definition in a management group.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given management
            group with the given name.
            </remarks>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.ListWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.ListBuiltInWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy definitions that
            match the optional given $filter. If $filter='policyType -eq {value}' is
            provided, the returned list only includes all built-in policy definitions
            whose type match the {value}. Possible policyType values are NotSpecified,
            BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions whose
            category match the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.ListByManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            management group that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the management group, including those
            that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.ListBuiltInNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy definitions that
            match the optional given $filter. If $filter='policyType -eq {value}' is
            provided, the returned list only includes all built-in policy definitions
            whose type match the {value}. Possible policyType values are NotSpecified,
            BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions whose
            category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperations.ListByManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            management group that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the management group, including those
            that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions">
            <summary>
            Extension methods for PolicyDefinitionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition)">
            <summary>
            Creates or updates a policy definition in a subscription.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            subscription with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy definition in a subscription.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            subscription with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String)">
            <summary>
            Deletes a policy definition in a subscription.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given subscription with
            the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy definition in a subscription.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given subscription with
            the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String)">
            <summary>
            Retrieves a policy definition in a subscription.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given subscription
            with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy definition in a subscription.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given subscription
            with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.GetBuiltIn(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String)">
            <summary>
            Retrieves a built-in policy definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy definition with the given
            name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the built-in policy definition to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.GetBuiltInAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a built-in policy definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy definition with the given
            name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the built-in policy definition to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.CreateOrUpdateAtManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.String)">
            <summary>
            Creates or updates a policy definition in a management group.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            management group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.CreateOrUpdateAtManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyDefinition,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy definition in a management group.
            </summary>
            <remarks>
            This operation creates or updates a policy definition in the given
            management group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to create.
            </param>
            <param name='parameters'>
            The policy definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.DeleteAtManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.String)">
            <summary>
            Deletes a policy definition in a management group.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given management group
            with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.DeleteAtManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy definition in a management group.
            </summary>
            <remarks>
            This operation deletes the policy definition in the given management group
            with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.GetAtManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.String)">
            <summary>
            Retrieve a policy definition in a management group.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given management
            group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.GetAtManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a policy definition in a management group.
            </summary>
            <remarks>
            This operation retrieves the policy definition in the given management
            group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policyDefinitionName'>
            The name of the policy definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListBuiltIn(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy definitions that
            match the optional given $filter. If $filter='policyType -eq {value}' is
            provided, the returned list only includes all built-in policy definitions
            whose type match the {value}. Possible policyType values are NotSpecified,
            BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions whose
            category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListBuiltInAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy definitions that
            match the optional given $filter. If $filter='policyType -eq {value}' is
            provided, the returned list only includes all built-in policy definitions
            whose type match the {value}. Possible policyType values are NotSpecified,
            BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions whose
            category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListByManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            management group that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the management group, including those
            that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListByManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            management group that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the management group, including those
            that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves policy definitions in a subscription
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the subscription, including those that
            apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListBuiltInNext(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy definitions that
            match the optional given $filter. If $filter='policyType -eq {value}' is
            provided, the returned list only includes all built-in policy definitions
            whose type match the {value}. Possible policyType values are NotSpecified,
            BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions whose
            category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListBuiltInNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve built-in policy definitions
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy definitions that
            match the optional given $filter. If $filter='policyType -eq {value}' is
            provided, the returned list only includes all built-in policy definitions
            whose type match the {value}. Possible policyType values are NotSpecified,
            BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided,
            the returned list only includes all built-in policy definitions whose
            category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListByManagementGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            management group that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the management group, including those
            that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyDefinitionsOperationsExtensions.ListByManagementGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve policy definitions in a management group
            </summary>
            <remarks>
            This operation retrieves a list of all the policy definitions in a given
            management group that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy definitions associated with the management group, including those
            that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy definitions that at the given management group. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn, Custom, and Static. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations">
            <summary>
            PolicyExemptionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.PolicyClient)">
            <summary>
            Initializes a new instance of the PolicyExemptionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.Client">
            <summary>
            Gets a reference to the PolicyClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy exemption.
            </summary>
            <remarks>
            This operation deletes a policy exemption, given its name and the scope it
            was created in. The scope of a policy exemption is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}'.
            </remarks>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy exemption.
            </summary>
            <remarks>
            This operation creates or updates a policy exemption with the given scope
            and name. Policy exemptions apply to all resources contained within their
            scope. For example, when you create a policy exemption at resource group
            scope for a policy assignment at the same or above level, the exemption
            exempts to all applicable resources in the resource group.
            </remarks>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='parameters'>
            Parameters for the policy exemption.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy exemption.
            </summary>
            <remarks>
            This operation retrieves a single policy exemption, given its name and the
            scope it was created at.
            </remarks>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            subscription, including those that apply directly or from management groups
            that contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListForResourceGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not
            provided, the unfiltered list includes all policy exemptions associated
            with the resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListForResourceWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy exemptions associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource name are
            used to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path should not
            be provided (or provided as ''). For example a web app could be specified
            as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
            '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
            resource is part of a parent resource, then all parameters should be
            provided. For example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
            == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
            {resourceName} == 'MyComputerName'). A convenient alternative to providing
            the namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} == '',
            {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
            {resourceName} == 'MyWebApp').
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListForManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the
            returned list includes all policy exemptions that are assigned to the
            management group or the management group's ancestors.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            subscription, including those that apply directly or from management groups
            that contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListForResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not
            provided, the unfiltered list includes all policy exemptions associated
            with the resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListForResourceNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy exemptions associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource name are
            used to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path should not
            be provided (or provided as ''). For example a web app could be specified
            as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
            '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
            resource is part of a parent resource, then all parameters should be
            provided. For example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
            == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
            {resourceName} == 'MyComputerName'). A convenient alternative to providing
            the namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} == '',
            {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
            {resourceName} == 'MyWebApp').
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperations.ListForManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the
            returned list includes all policy exemptions that are assigned to the
            management group or the management group's ancestors.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions">
            <summary>
            Extension methods for PolicyExemptionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String)">
            <summary>
            Deletes a policy exemption.
            </summary>
            <remarks>
            This operation deletes a policy exemption, given its name and the scope it
            was created in. The scope of a policy exemption is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy exemption.
            </summary>
            <remarks>
            This operation deletes a policy exemption, given its name and the scope it
            was created in. The scope of a policy exemption is the part of its ID
            preceding
            '/providers/Microsoft.Authorization/policyExemptions/{policyExemptionName}'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption)">
            <summary>
            Creates or updates a policy exemption.
            </summary>
            <remarks>
            This operation creates or updates a policy exemption with the given scope
            and name. Policy exemptions apply to all resources contained within their
            scope. For example, when you create a policy exemption at resource group
            scope for a policy assignment at the same or above level, the exemption
            exempts to all applicable resources in the resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='parameters'>
            Parameters for the policy exemption.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicyExemption,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy exemption.
            </summary>
            <remarks>
            This operation creates or updates a policy exemption with the given scope
            and name. Policy exemptions apply to all resources contained within their
            scope. For example, when you create a policy exemption at resource group
            scope for a policy assignment at the same or above level, the exemption
            exempts to all applicable resources in the resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='parameters'>
            Parameters for the policy exemption.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String)">
            <summary>
            Retrieves a policy exemption.
            </summary>
            <remarks>
            This operation retrieves a single policy exemption, given its name and the
            scope it was created at.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy exemption.
            </summary>
            <remarks>
            This operation retrieves a single policy exemption, given its name and the
            scope it was created at.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The scope of the policy exemption. Valid scopes are: management group
            (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource group
            (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
            resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
            </param>
            <param name='policyExemptionName'>
            The name of the policy exemption to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            subscription, including those that apply directly or from management groups
            that contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            subscription, including those that apply directly or from management groups
            that contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceGroup(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not
            provided, the unfiltered list includes all policy exemptions associated
            with the resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not
            provided, the unfiltered list includes all policy exemptions associated
            with the resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResource(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy exemptions associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource name are
            used to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path should not
            be provided (or provided as ''). For example a web app could be specified
            as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
            '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
            resource is part of a parent resource, then all parameters should be
            provided. For example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
            == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
            {resourceName} == 'MyComputerName'). A convenient alternative to providing
            the namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} == '',
            {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
            {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy exemptions associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource name are
            used to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path should not
            be provided (or provided as ''). For example a web app could be specified
            as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
            '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
            resource is part of a parent resource, then all parameters should be
            provided. For example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
            == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
            {resourceName} == 'MyComputerName'). A convenient alternative to providing
            the namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} == '',
            {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
            {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider. For example, the namespace of a
            virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
            </param>
            <param name='parentResourcePath'>
            The parent resource path. Use empty string if there is none.
            </param>
            <param name='resourceType'>
            The resource type name. For example the type name of a web app is 'sites'
            (from Microsoft.Web/sites).
            </param>
            <param name='resourceName'>
            The name of the resource.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the
            returned list includes all policy exemptions that are assigned to the
            management group or the management group's ancestors.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the
            returned list includes all policy exemptions that are assigned to the
            management group or the management group's ancestors.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, no filtering is performed. If
            $filter is not provided, the unfiltered list includes all policy exemptions
            associated with the scope, including those that apply directly or apply
            from containing scopes. If $filter=atScope() is provided, the returned list
            only includes all policy exemptions that apply to the scope, which is
            everything in the unfiltered list except those applied to sub scopes
            contained within the given scope. If $filter=atExactScope() is provided,
            the returned list only includes all policy exemptions that at the given
            scope. If $filter=excludeExpired() is provided, the returned list only
            includes all policy exemptions that either haven't expired or didn't set
            expiration date. If $filter=policyAssignmentId eq '{value}' is provided.
            the returned list only includes all policy exemptions that are associated
            with the give policyAssignmentId.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            subscription, including those that apply directly or from management groups
            that contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a subscription.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given subscription that match the optional given $filter. Valid values
            for $filter are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter is not provided, the
            unfiltered list includes all policy exemptions associated with the
            subscription, including those that apply directly or from management groups
            that contain the given subscription, as well as any applied to objects
            contained within the subscription.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not
            provided, the unfiltered list includes all policy exemptions associated
            with the resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the given resource group in the given subscription that match the optional
            given $filter. Valid values for $filter are: 'atScope()', 'atExactScope()',
            'excludeExpired()' or 'policyAssignmentId eq '{value}''. If $filter is not
            provided, the unfiltered list includes all policy exemptions associated
            with the resource group, including those that apply directly or apply from
            containing scopes, as well as any applied to resources contained within the
            resource group.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceNext(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy exemptions associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource name are
            used to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path should not
            be provided (or provided as ''). For example a web app could be specified
            as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
            '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
            resource is part of a parent resource, then all parameters should be
            provided. For example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
            == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
            {resourceName} == 'MyComputerName'). A convenient alternative to providing
            the namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} == '',
            {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
            {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForResourceNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a resource.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions associated with
            the specified resource in the given resource group and subscription that
            match the optional given $filter. Valid values for $filter are:
            'atScope()', 'atExactScope()', 'excludeExpired()' or 'policyAssignmentId eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy exemptions associated with the resource, including those that apply
            directly or from all containing scopes, as well as any applied to resources
            contained within the resource. Three parameters plus the resource name are
            used to identify a specific resource. If the resource is not part of a
            parent resource (the more common case), the parent resource path should not
            be provided (or provided as ''). For example a web app could be specified
            as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
            '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
            resource is part of a parent resource, then all parameters should be
            provided. For example a virtual machine DNS name could be specified as
            ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath}
            == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames',
            {resourceName} == 'MyComputerName'). A convenient alternative to providing
            the namespace and type name separately is to provide both in the
            {resourceType} parameter, format: ({resourceProviderNamespace} == '',
            {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites',
            {resourceName} == 'MyWebApp').
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForManagementGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the
            returned list includes all policy exemptions that are assigned to the
            management group or the management group's ancestors.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicyExemptionsOperationsExtensions.ListForManagementGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicyExemptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy exemptions that apply to a management group.
            </summary>
            <remarks>
            This operation retrieves the list of all policy exemptions applicable to
            the management group that match the given $filter. Valid values for $filter
            are: 'atScope()', 'atExactScope()', 'excludeExpired()' or
            'policyAssignmentId eq '{value}''. If $filter=atScope() is provided, the
            returned list includes all policy exemptions that are assigned to the
            management group or the management group's ancestors.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations">
            <summary>
            PolicySetDefinitionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.PolicyClient)">
            <summary>
            Initializes a new instance of the PolicySetDefinitionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.Client">
            <summary>
            Gets a reference to the PolicyClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given subscription
            with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.GetBuiltInWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a built in policy set definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy set definition with the given
            name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.ListWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the subscription, including those
            that apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy set definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.ListBuiltInWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set definitions
            that match the optional given $filter. If $filter='category -eq {value}' is
            provided, the returned list only includes all built-in policy set
            definitions whose category match the {value}.
            </remarks>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.CreateOrUpdateAtManagementGroupWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the given
            management group with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.DeleteAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given management
            group with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.GetAtManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given management
            group with the given name.
            </remarks>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.ListByManagementGroupWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given management group that match the optional given $filter. Valid values
            for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the management group, including
            those that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy set definitions that at the given management
            group. If $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the subscription, including those
            that apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy set definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.ListBuiltInNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set definitions
            that match the optional given $filter. If $filter='category -eq {value}' is
            provided, the returned list only includes all built-in policy set
            definitions whose category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperations.ListByManagementGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given management group that match the optional given $filter. Valid values
            for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the management group, including
            those that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy set definitions that at the given management
            group. If $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions">
            <summary>
            Extension methods for PolicySetDefinitionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given subscription
            with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given subscription
            with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given
            subscription with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.GetBuiltIn(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String)">
            <summary>
            Retrieves a built in policy set definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy set definition with the given
            name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.GetBuiltInAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a built in policy set definition.
            </summary>
            <remarks>
            This operation retrieves the built-in policy set definition with the given
            name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the subscription, including those
            that apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy set definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the subscription, including those
            that apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy set definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListBuiltIn(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set definitions
            that match the optional given $filter. If $filter='category -eq {value}' is
            provided, the returned list only includes all built-in policy set
            definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListBuiltInAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set definitions
            that match the optional given $filter. If $filter='category -eq {value}' is
            provided, the returned list only includes all built-in policy set
            definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.CreateOrUpdateAtManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.String)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the given
            management group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.CreateOrUpdateAtManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.PolicySetDefinition,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a policy set definition.
            </summary>
            <remarks>
            This operation creates or updates a policy set definition in the given
            management group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to create.
            </param>
            <param name='parameters'>
            The policy set definition properties.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.DeleteAtManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.String)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given management
            group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.DeleteAtManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a policy set definition.
            </summary>
            <remarks>
            This operation deletes the policy set definition in the given management
            group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to delete.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.GetAtManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.String)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given management
            group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.GetAtManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves a policy set definition.
            </summary>
            <remarks>
            This operation retrieves the policy set definition in the given management
            group with the given name.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='policySetDefinitionName'>
            The name of the policy set definition to get.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListByManagementGroup(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given management group that match the optional given $filter. Valid values
            for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the management group, including
            those that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy set definitions that at the given management
            group. If $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListByManagementGroupAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given management group that match the optional given $filter. Valid values
            for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the management group, including
            those that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy set definitions that at the given management
            group. If $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='managementGroupId'>
            The ID of the management group.
            </param>
            <param name='filter'>
            The filter to apply on the operation. Valid values for $filter are:
            'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If
            $filter is not provided, no filtering is performed. If
            $filter=atExactScope() is provided, the returned list only includes all
            policy set definitions that at the given scope. If $filter='policyType -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose type match the {value}. Possible policyType values are
            NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
            {value}' is provided, the returned list only includes all policy set
            definitions whose category match the {value}.
            </param>
            <param name='top'>
            Maximum number of records to return. When the $top filter is not provided,
            it will return 500 records.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the subscription, including those
            that apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy set definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the policy set definitions for a subscription.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given subscription that match the optional given $filter. Valid values for
            $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the subscription, including those
            that apply directly or from management groups that contain the given
            subscription. If $filter=atExactScope() is provided, the returned list only
            includes all policy set definitions that at the given subscription. If
            $filter='policyType -eq {value}' is provided, the returned list only
            includes all policy set definitions whose type match the {value}. Possible
            policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListBuiltInNext(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set definitions
            that match the optional given $filter. If $filter='category -eq {value}' is
            provided, the returned list only includes all built-in policy set
            definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListBuiltInNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves built-in policy set definitions.
            </summary>
            <remarks>
            This operation retrieves a list of all the built-in policy set definitions
            that match the optional given $filter. If $filter='category -eq {value}' is
            provided, the returned list only includes all built-in policy set
            definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListByManagementGroupNext(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given management group that match the optional given $filter. Valid values
            for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the management group, including
            those that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy set definitions that at the given management
            group. If $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PolicySetDefinitionsOperationsExtensions.ListByManagementGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IPolicySetDefinitionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves all policy set definitions in management group.
            </summary>
            <remarks>
            This operation retrieves a list of all the policy set definitions in a
            given management group that match the optional given $filter. Valid values
            for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
            '{value}''. If $filter is not provided, the unfiltered list includes all
            policy set definitions associated with the management group, including
            those that apply directly or from management groups that contain the given
            management group. If $filter=atExactScope() is provided, the returned list
            only includes all policy set definitions that at the given management
            group. If $filter='policyType -eq {value}' is provided, the returned list
            only includes all policy set definitions whose type match the {value}.
            Possible policyType values are NotSpecified, BuiltIn and Custom. If
            $filter='category -eq {value}' is provided, the returned list only includes
            all policy set definitions whose category match the {value}.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations">
            <summary>
            PrivateLinkAssociationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient)">
            <summary>
            Initializes a new instance of the PrivateLinkAssociationOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations.Client">
            <summary>
            Gets a reference to the ResourcePrivateLinkClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations.PutWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a PrivateLinkAssociation
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='parameters'>
            Parameters supplied to create the private link association.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a single private link association
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a PrivateLinkAssociation
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperations.ListWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a private link association for a management group scope
            </summary>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions">
            <summary>
            Extension methods for PrivateLinkAssociationOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.Put(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject)">
            <summary>
            Create a PrivateLinkAssociation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='parameters'>
            Parameters supplied to create the private link association.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.PutAsync(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.PrivateLinkAssociationObject,System.Threading.CancellationToken)">
            <summary>
            Create a PrivateLinkAssociation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='parameters'>
            Parameters supplied to create the private link association.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.String)">
            <summary>
            Get a single private link association
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a single private link association
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.String)">
            <summary>
            Delete a PrivateLinkAssociation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a PrivateLinkAssociation
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='plaId'>
            The ID of the PLA
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String)">
            <summary>
            Get a private link association for a management group scope
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.PrivateLinkAssociationOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IPrivateLinkAssociationOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a private link association for a management group scope
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperations">
            <summary>
            ProviderResourceTypesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ProviderResourceTypesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the resource types for a specified resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperationsExtensions">
            <summary>
            Extension methods for ProviderResourceTypesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProviderResourceTypesOperations,System.String,System.String)">
            <summary>
            List the resource types for a specified resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProviderResourceTypesOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProviderResourceTypesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List the resource types for a specified resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ProvidersOperations">
            <summary>
            ProvidersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ProvidersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.UnregisterWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Unregisters a subscription from a resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to unregister.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.RegisterAtManagementGroupScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Registers a management group with a resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.ProviderPermissionsWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the provider permissions.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.RegisterWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Registers a subscription with a resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='properties'>
            The third party consent for S2S.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.ListWithHttpMessagesAsync(System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='top'>
            The number of results to return. If null is passed returns all deployments.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource provider
            metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.ListAtTenantScopeWithHttpMessagesAsync(System.Nullable{System.Int32},System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='top'>
            The number of results to return. If null is passed returns all providers.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource provider
            metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified resource provider.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.GetAtTenantScopeWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified resource provider at the tenant level.
            </summary>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperations.ListAtTenantScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions">
            <summary>
            Extension methods for ProvidersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Unregister(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)">
            <summary>
            Unregisters a subscription from a resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to unregister.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.UnregisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Unregisters a subscription from a resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to unregister.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAtManagementGroupScope(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)">
            <summary>
            Registers a management group with a resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAtManagementGroupScopeAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Registers a management group with a resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='groupId'>
            The management group ID.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ProviderPermissions(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)">
            <summary>
            Get the provider permissions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ProviderPermissionsAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the provider permissions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Register(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest)">
            <summary>
            Registers a subscription with a resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='properties'>
            The third party consent for S2S.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.RegisterAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ProviderRegistrationRequest,System.Threading.CancellationToken)">
            <summary>
            Registers a subscription with a resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider to register.
            </param>
            <param name='properties'>
            The third party consent for S2S.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='top'>
            The number of results to return. If null is passed returns all deployments.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource provider
            metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='top'>
            The number of results to return. If null is passed returns all deployments.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource provider
            metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAtTenantScope(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='top'>
            The number of results to return. If null is passed returns all providers.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource provider
            metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='top'>
            The number of results to return. If null is passed returns all providers.
            </param>
            <param name='expand'>
            The properties to include in the results. For example, use
            &amp;$expand=metadata in the query string to retrieve resource provider
            metadata. To include property aliases in response, use
            $expand=resourceTypes/aliases.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)">
            <summary>
            Gets the specified resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified resource provider.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAtTenantScope(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String)">
            <summary>
            Gets the specified resource provider at the tenant level.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.GetAtTenantScopeAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified resource provider at the tenant level.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='expand'>
            The $expand query parameter. For example, to include property aliases in
            response, use $expand=resourceTypes/aliases.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAtTenantScopeNext(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ProvidersOperationsExtensions.ListAtTenantScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IProvidersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all resource providers for the tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations">
            <summary>
            ResourceGroupsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourceGroupsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.CheckExistenceWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether a resource group exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group to check. The name is case insensitive.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group to create or update. Can include
            alphanumeric, underscore, parentheses, hyphen, period (except at end), and
            Unicode characters that match the allowed characters.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update a resource group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also deleted.
            Deleting a resource group deletes all of its template deployments and
            currently stored operations.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the following
            is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group to get. The name is case insensitive.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.UpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource group.
            </summary>
            <remarks>
            Resource groups can be updated through a simple PATCH operation to a group
            address. The format of the request is the same as that for creating a
            resource group. If a field is unspecified, the current value is retained.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to update. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters supplied to update a resource group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.ExportTemplateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also deleted.
            Deleting a resource group deletes all of its template deployments and
            currently stored operations.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the following
            is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.BeginExportTemplateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions">
            <summary>
            Extension methods for ResourceGroupsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)">
            <summary>
            Checks whether a resource group exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to check. The name is case insensitive.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether a resource group exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to check. The name is case insensitive.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup)">
            <summary>
            Creates or updates a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to create or update. Can include
            alphanumeric, underscore, parentheses, hyphen, period (except at end), and
            Unicode characters that match the allowed characters.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update a resource group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroup,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to create or update. Can include
            alphanumeric, underscore, parentheses, hyphen, period (except at end), and
            Unicode characters that match the allowed characters.
            </param>
            <param name='parameters'>
            Parameters supplied to the create or update a resource group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.String)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also deleted.
            Deleting a resource group deletes all of its template deployments and
            currently stored operations.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the following
            is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also deleted.
            Deleting a resource group deletes all of its template deployments and
            currently stored operations.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the following
            is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)">
            <summary>
            Gets a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to get. The name is case insensitive.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to get. The name is case insensitive.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.Update(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable)">
            <summary>
            Updates a resource group.
            </summary>
            <remarks>
            Resource groups can be updated through a simple PATCH operation to a group
            address. The format of the request is the same as that for creating a
            resource group. If a field is unspecified, the current value is retained.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to update. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters supplied to update a resource group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupPatchable,System.Threading.CancellationToken)">
            <summary>
            Updates a resource group.
            </summary>
            <remarks>
            Resource groups can be updated through a simple PATCH operation to a group
            address. The format of the request is the same as that for creating a
            resource group. If a field is unspecified, the current value is retained.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to update. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters supplied to update a resource group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter})">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceGroupFilter},System.Threading.CancellationToken)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.String)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also deleted.
            Deleting a resource group deletes all of its template deployments and
            currently stored operations.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the following
            is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource group.
            </summary>
            <remarks>
            When you delete a resource group, all of its resources are also deleted.
            Deleting a resource group deletes all of its template deployments and
            currently stored operations.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group to delete. The name is case insensitive.
            </param>
            <param name='forceDeletionTypes'>
            The resource types you want to force delete. Currently, only the following
            is supported:
            forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginExportTemplate(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.BeginExportTemplateAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ExportTemplateRequest,System.Threading.CancellationToken)">
            <summary>
            Captures the specified resource group as a template.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='parameters'>
            Parameters for exporting the template.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceGroupsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceGroupsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the resource groups for a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations">
            <summary>
            ResourceLinksOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ManagementLinkClient)">
            <summary>
            Initializes a new instance of the ResourceLinksOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.Client">
            <summary>
            Gets a reference to the ManagementLinkClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource link with the specified ID.
            </summary>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceLink,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource link between the specified resources.
            </summary>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='parameters'>
            Parameters for creating or updating a resource link.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource link with the specified ID.
            </summary>
            <param name='linkId'>
            The fully qualified Id of the resource link. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.ListAtSubscriptionWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.ListAtSourceScopeWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of resource links at and below the specified source scope.
            </summary>
            <param name='scope'>
            The fully qualified ID of the scope for getting the resource links. For
            example, to list resource links at and under a resource group, set the
            scope to
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.ListAtSubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperations.ListAtSourceScopeNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of resource links at and below the specified source scope.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions">
            <summary>
            Extension methods for ResourceLinksOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String)">
            <summary>
            Deletes a resource link with the specified ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource link with the specified ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceLink)">
            <summary>
            Creates or updates a resource link between the specified resources.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='parameters'>
            Parameters for creating or updating a resource link.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceLink,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a resource link between the specified resources.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='linkId'>
            The fully qualified ID of the resource link. Use the format,
            /subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/{provider-namespace}/{resource-type}/{resource-name}/Microsoft.Resources/links/{link-name}.
            For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='parameters'>
            Parameters for creating or updating a resource link.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String)">
            <summary>
            Gets a resource link with the specified ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='linkId'>
            The fully qualified Id of the resource link. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a resource link with the specified ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='linkId'>
            The fully qualified Id of the resource link. For example,
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup/Microsoft.Web/sites/mySite/Microsoft.Resources/links/myLink
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSubscription(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter})">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSubscriptionAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter},System.Threading.CancellationToken)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSourceScope(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter})">
            <summary>
            Gets a list of resource links at and below the specified source scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The fully qualified ID of the scope for getting the resource links. For
            example, to list resource links at and under a resource group, set the
            scope to
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSourceScopeAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.ResourceLinkFilter},System.Threading.CancellationToken)">
            <summary>
            Gets a list of resource links at and below the specified source scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The fully qualified ID of the scope for getting the resource links. For
            example, to list resource links at and under a resource group, set the
            scope to
            /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSubscriptionNext(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSubscriptionNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all the linked resources for the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSourceScopeNext(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String)">
            <summary>
            Gets a list of resource links at and below the specified source scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceLinksOperationsExtensions.ListAtSourceScopeNextAsync(Microsoft.Azure.Management.ResourceManager.IResourceLinksOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of resource links at and below the specified source scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient">
            <summary>
            Provides operations for working with resources and resource groups.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Deployments">
            <summary>
            Gets the IDeploymentsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Providers">
            <summary>
            Gets the IProvidersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.ProviderResourceTypes">
            <summary>
            Gets the IProviderResourceTypesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Resources">
            <summary>
            Gets the IResourcesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.ResourceGroups">
            <summary>
            Gets the IResourceGroupsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Tags">
            <summary>
            Gets the ITagsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.DeploymentOperations">
            <summary>
            Gets the IDeploymentOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ResourceManagementClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ResourceManagementClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourceManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations">
            <summary>
            ResourceManagementPrivateLinkOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient)">
            <summary>
            Initializes a new instance of the ResourceManagementPrivateLinkOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.Client">
            <summary>
            Gets a reference to the ResourcePrivateLinkClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.PutWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a resource management group private link.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='parameters'>
            The region to create the Resource Management private link.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get a resource management private link(resource-level).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a resource management private link.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resource management private links in a subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resource management private links in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions">
            <summary>
            Extension methods for ResourceManagementPrivateLinkOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.Put(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation)">
            <summary>
            Create a resource management group private link.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='parameters'>
            The region to create the Resource Management private link.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.PutAsync(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourceManagementPrivateLinkLocation,System.Threading.CancellationToken)">
            <summary>
            Create a resource management group private link.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='parameters'>
            The region to create the Resource Management private link.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.String)">
            <summary>
            Get a resource management private link(resource-level).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a resource management private link(resource-level).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.String)">
            <summary>
            Delete a resource management private link.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a resource management private link.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='rmplName'>
            The name of the resource management private link.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations)">
            <summary>
            Get all the resource management private links in a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.Threading.CancellationToken)">
            <summary>
            Get all the resource management private links in a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String)">
            <summary>
            Get all the resource management private links in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourceManagementPrivateLinkOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IResourceManagementPrivateLinkOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the resource management private links in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient">
            <summary>
            Provides operations for managing private link resources
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.PrivateLinkAssociation">
            <summary>
            Gets the IPrivateLinkAssociationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.ResourceManagementPrivateLink">
            <summary>
            Gets the IResourceManagementPrivateLinkOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ResourcePrivateLinkClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling ResourcePrivateLinkClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the ResourcePrivateLinkClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcePrivateLinkClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourcesOperations">
            <summary>
            ResourcesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the ResourcesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='resourceGroupName'>
            The resource group with the resources to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.MoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group. The target
            resource group may be in a different subscription. When moving resources,
            both the source group and the target group are locked for the duration of
            the operation. Write and delete operations are blocked on the groups until
            the move completes.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.ValidateMoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether resources can be moved from one resource group to another
            resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved to the
            target. The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. If validation
            succeeds, it returns HTTP response code 204 (no content). If validation
            fails, it returns HTTP response code 409 (Conflict) with an error message.
            Retrieve the URL in the Location header value to check the result of the
            long-running operation.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate for
            move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.ListWithHttpMessagesAsync(Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.CheckExistenceWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether a resource exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to check. The name
            is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider of the resource to check.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to check whether it exists.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to delete. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to get. The name is
            case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource to get.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.CheckExistenceByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks by ID whether a resource exists.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.DeleteByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.CreateOrUpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.UpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.GetByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginMoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group. The target
            resource group may be in a different subscription. When moving resources,
            both the source group and the target group are locked for the duration of
            the operation. Write and delete operations are blocked on the groups until
            the move completes.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginValidateMoveResourcesWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Validates whether resources can be moved from one resource group to another
            resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved to the
            target. The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. If validation
            succeeds, it returns HTTP response code 204 (no content). If validation
            fails, it returns HTTP response code 409 (Conflict) with an error message.
            Retrieve the URL in the Location header value to check the result of the
            long-running operation.
            </remarks>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate for
            move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to delete. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginCreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginUpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginDeleteByIdWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginCreateOrUpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.BeginUpdateByIdWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions">
            <summary>
            Extension methods for ResourcesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter})">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group with the resources to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The resource group with the resources to get.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.MoveResources(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group. The target
            resource group may be in a different subscription. When moving resources,
            both the source group and the target group are locked for the duration of
            the operation. Write and delete operations are blocked on the groups until
            the move completes.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.MoveResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Threading.CancellationToken)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group. The target
            resource group may be in a different subscription. When moving resources,
            both the source group and the target group are locked for the duration of
            the operation. Write and delete operations are blocked on the groups until
            the move completes.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ValidateMoveResources(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo)">
            <summary>
            Validates whether resources can be moved from one resource group to another
            resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved to the
            target. The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. If validation
            succeeds, it returns HTTP response code 204 (no content). If validation
            fails, it returns HTTP response code 409 (Conflict) with an error message.
            Retrieve the URL in the Location header value to check the result of the
            long-running operation.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate for
            move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ValidateMoveResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Threading.CancellationToken)">
            <summary>
            Validates whether resources can be moved from one resource group to another
            resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved to the
            target. The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. If validation
            succeeds, it returns HTTP response code 204 (no content). If validation
            fails, it returns HTTP response code 409 (Conflict) with an error message.
            Retrieve the URL in the Location header value to check the result of the
            long-running operation.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate for
            move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter})">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,Microsoft.Rest.Azure.OData.ODataQuery{Microsoft.Azure.Management.ResourceManager.Models.GenericResourceFilter},System.Threading.CancellationToken)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='odataQuery'>
            OData parameters to apply to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CheckExistence(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Checks whether a resource exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to check. The name
            is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider of the resource to check.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to check whether it exists.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CheckExistenceAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether a resource exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to check. The name
            is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The resource provider of the resource to check.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to check whether it exists.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to delete. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to delete. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Creates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Creates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.Update(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Updates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Updates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to get. The name is
            case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource to get.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group containing the resource to get. The name is
            case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource.
            </param>
            <param name='resourceName'>
            The name of the resource to get.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CheckExistenceById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String)">
            <summary>
            Checks by ID whether a resource exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CheckExistenceByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks by ID whether a resource exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.DeleteById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.DeleteByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CreateOrUpdateById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.CreateOrUpdateByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.UpdateById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.UpdateByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.GetById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String)">
            <summary>
            Gets a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.GetByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginMoveResources(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group. The target
            resource group may be in a different subscription. When moving resources,
            both the source group and the target group are locked for the duration of
            the operation. Write and delete operations are blocked on the groups until
            the move completes.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginMoveResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Threading.CancellationToken)">
            <summary>
            Moves resources from one resource group to another resource group.
            </summary>
            <remarks>
            The resources to move must be in the same source resource group. The target
            resource group may be in a different subscription. When moving resources,
            both the source group and the target group are locked for the duration of
            the operation. Write and delete operations are blocked on the groups until
            the move completes.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginValidateMoveResources(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo)">
            <summary>
            Validates whether resources can be moved from one resource group to another
            resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved to the
            target. The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. If validation
            succeeds, it returns HTTP response code 204 (no content). If validation
            fails, it returns HTTP response code 409 (Conflict) with an error message.
            Retrieve the URL in the Location header value to check the result of the
            long-running operation.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate for
            move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginValidateMoveResourcesAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.ResourcesMoveInfo,System.Threading.CancellationToken)">
            <summary>
            Validates whether resources can be moved from one resource group to another
            resource group.
            </summary>
            <remarks>
            This operation checks whether the specified resources can be moved to the
            target. The resources to move must be in the same source resource group.
            The target resource group may be in a different subscription. If validation
            succeeds, it returns HTTP response code 204 (no content). If validation
            fails, it returns HTTP response code 409 (Conflict) with an error message.
            Retrieve the URL in the Location header value to check the result of the
            long-running operation.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='sourceResourceGroupName'>
            The name of the resource group containing the resources to validate for
            move.
            </param>
            <param name='parameters'>
            Parameters for moving resources.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginDelete(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to delete. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the resource to delete. The
            name is case insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type.
            </param>
            <param name='resourceName'>
            The name of the resource to delete.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginCreateOrUpdate(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Creates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginCreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Creates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to create.
            </param>
            <param name='resourceName'>
            The name of the resource to create.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for creating or updating the resource.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginUpdate(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Updates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginUpdateAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Updates a resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group for the resource. The name is case
            insensitive.
            </param>
            <param name='resourceProviderNamespace'>
            The namespace of the resource provider.
            </param>
            <param name='parentResourcePath'>
            The parent resource identity.
            </param>
            <param name='resourceType'>
            The resource type of the resource to update.
            </param>
            <param name='resourceName'>
            The name of the resource to update.
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Parameters for updating the resource.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginDeleteById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginDeleteByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginCreateOrUpdateById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginCreateOrUpdateByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Create a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Create or update resource parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginUpdateById(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.BeginUpdateByIdAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.GenericResource,System.Threading.CancellationToken)">
            <summary>
            Updates a resource by ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceId'>
            The fully qualified ID of the resource, including the resource name and
            resource type. Use the format,
            /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
            </param>
            <param name='apiVersion'>
            The API version to use for the operation.
            </param>
            <param name='parameters'>
            Update resource parameters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the resources for a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.ResourcesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.IResourcesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Get all the resources in a subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.SubscriptionClient">
            <summary>
            All resource groups and resources exist within subscriptions. These
            operation enable you get information about your subscriptions and
            tenants. A tenant is a dedicated instance of Azure Active Directory
            (Azure AD) for your organization.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.ApiVersion">
            <summary>
            The API version to use for the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.Subscriptions">
            <summary>
            Gets the ISubscriptionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.Tenants">
            <summary>
            Gets the ITenantsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling SubscriptionClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling SubscriptionClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the SubscriptionClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClient.CheckResourceNameWithHttpMessagesAsync(Microsoft.Azure.Management.ResourceManager.Models.ResourceName,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks resource name validity
            </summary>
            <remarks>
            A resource name is valid if it is not a reserved word, does not contains a
            reserved word and does not start with a reserved word
            </remarks>
            <param name='resourceNameDefinition'>
            Resource object with values for resource name and resource type
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.SubscriptionClientExtensions">
            <summary>
            Extension methods for SubscriptionClient.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClientExtensions.CheckResourceName(Microsoft.Azure.Management.ResourceManager.ISubscriptionClient,Microsoft.Azure.Management.ResourceManager.Models.ResourceName)">
            <summary>
            Checks resource name validity
            </summary>
            <remarks>
            A resource name is valid if it is not a reserved word, does not contains a
            reserved word and does not start with a reserved word
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceNameDefinition'>
            Resource object with values for resource name and resource type
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionClientExtensions.CheckResourceNameAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionClient,Microsoft.Azure.Management.ResourceManager.Models.ResourceName,System.Threading.CancellationToken)">
            <summary>
            Checks resource name validity
            </summary>
            <remarks>
            A resource name is valid if it is not a reserved word, does not contains a
            reserved word and does not start with a reserved word
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceNameDefinition'>
            Resource object with values for resource name and resource type
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations">
            <summary>
            SubscriptionFeatureRegistrationsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.FeatureClient)">
            <summary>
            Initializes a new instance of the SubscriptionFeatureRegistrationsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.Client">
            <summary>
            Gets a reference to the FeatureClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns a feature registration
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update a feature registration.
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='subscriptionFeatureRegistrationType'>
            Subscription Feature Registration Type details.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a feature registration
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.ListBySubscriptionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription and
            provider namespace.
            </summary>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.ListAllBySubscriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription and
            provider namespace.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperations.ListAllBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions">
            <summary>
            Extension methods for SubscriptionFeatureRegistrationsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.String)">
            <summary>
            Returns a feature registration
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a feature registration
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration)">
            <summary>
            Create or update a feature registration.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='subscriptionFeatureRegistrationType'>
            Subscription Feature Registration Type details.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.SubscriptionFeatureRegistration,System.Threading.CancellationToken)">
            <summary>
            Create or update a feature registration.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='subscriptionFeatureRegistrationType'>
            Subscription Feature Registration Type details.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.String)">
            <summary>
            Deletes a feature registration
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a feature registration
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='featureName'>
            The feature name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListBySubscription(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String)">
            <summary>
            Returns subscription feature registrations for given subscription and
            provider namespace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListBySubscriptionAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription and
            provider namespace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='providerNamespace'>
            The provider namespace.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListAllBySubscription(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListAllBySubscriptionAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListBySubscriptionNext(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String)">
            <summary>
            Returns subscription feature registrations for given subscription and
            provider namespace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListBySubscriptionNextAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription and
            provider namespace.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListAllBySubscriptionNext(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionFeatureRegistrationsOperationsExtensions.ListAllBySubscriptionNextAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionFeatureRegistrationsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns subscription feature registrations for given subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations">
            <summary>
            SubscriptionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.SubscriptionClient)">
            <summary>
            Initializes a new instance of the SubscriptionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations.Client">
            <summary>
            Gets a reference to the SubscriptionClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations.ListLocationsWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all available geo-locations.
            </summary>
            <remarks>
            This operation provides all the locations that are available for resource
            providers; however, each resource provider may support a subset of this
            list.
            </remarks>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='includeExtendedLocations'>
            Whether to include extended locations.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets details about a specified subscription.
            </summary>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions">
            <summary>
            Extension methods for SubscriptionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.ListLocations(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gets all available geo-locations.
            </summary>
            <remarks>
            This operation provides all the locations that are available for resource
            providers; however, each resource provider may support a subset of this
            list.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='includeExtendedLocations'>
            Whether to include extended locations.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.ListLocationsAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Gets all available geo-locations.
            </summary>
            <remarks>
            This operation provides all the locations that are available for resource
            providers; however, each resource provider may support a subset of this
            list.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='includeExtendedLocations'>
            Whether to include extended locations.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.String)">
            <summary>
            Gets details about a specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets details about a specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='subscriptionId'>
            The ID of the target subscription.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.Threading.CancellationToken)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.String)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.SubscriptionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ISubscriptionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all subscriptions for a tenant.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TagsOperations">
            <summary>
            TagsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.ResourceManagementClient)">
            <summary>
            Initializes a new instance of the TagsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TagsOperations.Client">
            <summary>
            Gets a reference to the ResourceManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.DeleteValueWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a predefined tag value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a value from the list of predefined values
            for an existing predefined tag name. The value being deleted must not be in
            use as a tag value for the given tag name for any resource.
            </remarks>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.CreateOrUpdateValueWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a predefined value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a value to the list of predefined values for
            an existing predefined tag name. A tag value can have a maximum of 256
            characters.
            </remarks>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to create.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a name to the list of predefined tag names for
            the given subscription. A tag name can have a maximum of 512 characters and
            is case-insensitive. Tag names cannot have the following prefixes which are
            reserved for Azure use: 'microsoft', 'azure', 'windows'.
            </remarks>
            <param name='tagName'>
            The name of the tag to create.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a name from the list of predefined tag names
            for the given subscription. The name being deleted must not be in use as a
            tag name for any resource. All predefined values for the given name must
            have already been deleted.
            </remarks>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags, resource
            group tags and subscription tags, and returns a summary of usage for each
            tag name and value under the given subscription. In case of a large number
            of tags, this operation may return a previously cached result.
            </remarks>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.CreateOrUpdateAtScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates the entire set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows adding or replacing the entire set of tags on the
            specified resource or subscription. The specified entity can have a maximum
            of 50 tags.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.UpdateAtScopeWithHttpMessagesAsync(System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Selectively updates the set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows replacing, merging or selectively deleting tags on
            the specified resource or subscription. The specified entity can have a
            maximum of 50 tags at the end of the operation. The 'replace' option
            replaces the entire set of existing tags with a new set. The 'merge' option
            allows adding tags with new names and updating the values of tags with
            existing names. The 'delete' option allows selectively deleting tags based
            on given names or name/value pairs.
            </remarks>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.GetAtScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the entire set of tags on a resource or subscription.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.DeleteAtScopeWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the entire set of tags on a resource or subscription.
            </summary>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags, resource
            group tags and subscription tags, and returns a summary of usage for each
            tag name and value under the given subscription. In case of a large number
            of tags, this operation may return a previously cached result.
            </remarks>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions">
            <summary>
            Extension methods for TagsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.DeleteValue(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.String)">
            <summary>
            Deletes a predefined tag value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a value from the list of predefined values
            for an existing predefined tag name. The value being deleted must not be in
            use as a tag value for the given tag name for any resource.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to delete.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.DeleteValueAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a predefined tag value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a value from the list of predefined values
            for an existing predefined tag name. The value being deleted must not be in
            use as a tag value for the given tag name for any resource.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.CreateOrUpdateValue(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.String)">
            <summary>
            Creates a predefined value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a value to the list of predefined values for
            an existing predefined tag name. A tag value can have a maximum of 256
            characters.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to create.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.CreateOrUpdateValueAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a predefined value for a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a value to the list of predefined values for
            an existing predefined tag name. A tag value can have a maximum of 256
            characters.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='tagValue'>
            The value of the tag to create.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String)">
            <summary>
            Creates a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a name to the list of predefined tag names for
            the given subscription. A tag name can have a maximum of 512 characters and
            is case-insensitive. Tag names cannot have the following prefixes which are
            reserved for Azure use: 'microsoft', 'azure', 'windows'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag to create.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a predefined tag name.
            </summary>
            <remarks>
            This operation allows adding a name to the list of predefined tag names for
            the given subscription. A tag name can have a maximum of 512 characters and
            is case-insensitive. Tag names cannot have the following prefixes which are
            reserved for Azure use: 'microsoft', 'azure', 'windows'.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag to create.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String)">
            <summary>
            Deletes a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a name from the list of predefined tag names
            for the given subscription. The name being deleted must not be in use as a
            tag name for any resource. All predefined values for the given name must
            have already been deleted.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a predefined tag name.
            </summary>
            <remarks>
            This operation allows deleting a name from the list of predefined tag names
            for the given subscription. The name being deleted must not be in use as a
            tag name for any resource. All predefined values for the given name must
            have already been deleted.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='tagName'>
            The name of the tag.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITagsOperations)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags, resource
            group tags and subscription tags, and returns a summary of usage for each
            tag name and value under the given subscription. In case of a large number
            of tags, this operation may return a previously cached result.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.Threading.CancellationToken)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags, resource
            group tags and subscription tags, and returns a summary of usage for each
            tag name and value under the given subscription. In case of a large number
            of tags, this operation may return a previously cached result.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.CreateOrUpdateAtScope(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsResource)">
            <summary>
            Creates or updates the entire set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows adding or replacing the entire set of tags on the
            specified resource or subscription. The specified entity can have a maximum
            of 50 tags.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.CreateOrUpdateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsResource,System.Threading.CancellationToken)">
            <summary>
            Creates or updates the entire set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows adding or replacing the entire set of tags on the
            specified resource or subscription. The specified entity can have a maximum
            of 50 tags.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.UpdateAtScope(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource)">
            <summary>
            Selectively updates the set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows replacing, merging or selectively deleting tags on
            the specified resource or subscription. The specified entity can have a
            maximum of 50 tags at the end of the operation. The 'replace' option
            replaces the entire set of existing tags with a new set. The 'merge' option
            allows adding tags with new names and updating the values of tags with
            existing names. The 'delete' option allows selectively deleting tags based
            on given names or name/value pairs.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.UpdateAtScopeAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,Microsoft.Azure.Management.ResourceManager.Models.TagsPatchResource,System.Threading.CancellationToken)">
            <summary>
            Selectively updates the set of tags on a resource or subscription.
            </summary>
            <remarks>
            This operation allows replacing, merging or selectively deleting tags on
            the specified resource or subscription. The specified entity can have a
            maximum of 50 tags at the end of the operation. The 'replace' option
            replaces the entire set of existing tags with a new set. The 'merge' option
            allows adding tags with new names and updating the values of tags with
            existing names. The 'delete' option allows selectively deleting tags based
            on given names or name/value pairs.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='parameters'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.GetAtScope(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String)">
            <summary>
            Gets the entire set of tags on a resource or subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.GetAtScopeAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the entire set of tags on a resource or subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.DeleteAtScope(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String)">
            <summary>
            Deletes the entire set of tags on a resource or subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.DeleteAtScopeAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the entire set of tags on a resource or subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='scope'>
            The resource scope.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags, resource
            group tags and subscription tags, and returns a summary of usage for each
            tag name and value under the given subscription. In case of a large number
            of tags, this operation may return a previously cached result.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TagsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITagsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a summary of tag usage under the subscription.
            </summary>
            <remarks>
            This operation performs a union of predefined tags, resource tags, resource
            group tags and subscription tags, and returns a summary of usage for each
            tag name and value under the given subscription. In case of a large number
            of tags, this operation may return a previously cached result.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient">
            <summary>
            The APIs listed in this specification can be used to manage Template
            Spec resources through the Azure Resource Manager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.SubscriptionId">
            <summary>
            Subscription Id which forms part of the URI for every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.ApiVersion">
            <summary>
            Client Api version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.TemplateSpecs">
            <summary>
            Gets the ITemplateSpecsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.TemplateSpecVersions">
            <summary>
            Gets the ITemplateSpecVersionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling TemplateSpecsClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling TemplateSpecsClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the TemplateSpecsClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations">
            <summary>
            TemplateSpecsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient)">
            <summary>
            Initializes a new instance of the TemplateSpecsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.Client">
            <summary>
            Gets a reference to the TemplateSpecsClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec tags with specified values.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec resource with the tags to be updated.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Template Spec by name. When operation completes, status code 200
            returned without content.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.ListBySubscriptionWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.ListBySubscriptionNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions">
            <summary>
            Extension methods for TemplateSpecsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec)">
            <summary>
            Creates or updates a Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpec,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.Update(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel)">
            <summary>
            Updates Template Spec tags with specified values.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec resource with the tags to be updated.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecUpdateModel,System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec tags with specified values.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpec'>
            Template Spec resource with the tags to be updated.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,System.String)">
            <summary>
            Gets a Template Spec with a given name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec with a given name.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String)">
            <summary>
            Deletes a Template Spec by name. When operation completes, status code 200
            returned without content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a Template Spec by name. When operation completes, status code 200
            returned without content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListBySubscription(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListBySubscriptionAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='expand'>
            Allows for expansion of additional Template Spec details in the response.
            Optional. Possible values include: 'versions'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListBySubscriptionNext(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListBySubscriptionNextAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified subscriptions.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecsOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Specs within the specified resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations">
            <summary>
            TemplateSpecVersionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.TemplateSpecsClient)">
            <summary>
            Initializes a new instance of the TemplateSpecVersionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.Client">
            <summary>
            Gets a reference to the TemplateSpecsClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec version.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionModel'>
            Template Spec Version supplied to the operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec Version tags with specified values.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionUpdateModel'>
            Template Spec Version resource with the tags to be updated.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version from a Template Spec. When operation completes,
            status code 200 returned without content.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecsErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions">
            <summary>
            Extension methods for TemplateSpecVersionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion)">
            <summary>
            Creates or updates a Template Spec version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionModel'>
            Template Spec Version supplied to the operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersion,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a Template Spec version.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionModel'>
            Template Spec Version supplied to the operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.Update(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel)">
            <summary>
            Updates Template Spec Version tags with specified values.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionUpdateModel'>
            Template Spec Version resource with the tags to be updated.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.ResourceManager.Models.TemplateSpecVersionUpdateModel,System.Threading.CancellationToken)">
            <summary>
            Updates Template Spec Version tags with specified values.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='templateSpecVersionUpdateModel'>
            Template Spec Version resource with the tags to be updated.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.Get(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Template Spec version from a specific Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.Delete(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String)">
            <summary>
            Deletes a specific version from a Template Spec. When operation completes,
            status code 200 returned without content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a specific version from a Template Spec. When operation completes,
            status code 200 returned without content.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='templateSpecVersion'>
            The version of the Template Spec.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group. The name is case insensitive.
            </param>
            <param name='templateSpecName'>
            Name of the Template Spec.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TemplateSpecVersionsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITemplateSpecVersionsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the Template Spec versions in the specified Template Spec.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TenantsOperations">
            <summary>
            TenantsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperations.#ctor(Microsoft.Azure.Management.ResourceManager.SubscriptionClient)">
            <summary>
            Initializes a new instance of the TenantsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.ResourceManager.TenantsOperations.Client">
            <summary>
            Gets a reference to the SubscriptionClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions">
            <summary>
            Extension methods for TenantsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.List(Microsoft.Azure.Management.ResourceManager.ITenantsOperations)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.Threading.CancellationToken)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNext(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.ResourceManager.TenantsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.ResourceManager.ITenantsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the tenants for your account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>

<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Search.Documents</name>
    </assembly>
    <members>
        <member name="T:Azure.Search.Documents.ChannelExtensions">
            <summary>
            Extension methods for <see cref="T:System.Threading.Channels.Channel`1" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.ChannelExtensions.WriteInternal``1(System.Threading.Channels.ChannelWriter{``0},``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Write an item to a <see cref="T:System.Threading.Channels.ChannelWriter`1" />.
            </summary>
            <typeparam name="T">Type of the item.</typeparam>
            <param name="writer">The ChannelWriter.</param>
            <param name="item">The item to write.</param>
            <param name="async">Whether to run sync or async.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task representing the operation.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexActionCompletedEventArgs`1">
            <summary>
            Provides data for <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionCompleted" />
            event.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this type
            can be retrieved as documents from the index.  You can use
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> for dynamic documents.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexActionCompletedEventArgs`1.Result">
            <summary>
            Gets the <see cref="T:Azure.Search.Documents.Models.IndexingResult" /> of an action that was
            successfully completed.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexActionCompletedEventArgs`1.#ctor(Azure.Search.Documents.SearchIndexingBufferedSender{`0},Azure.Search.Documents.Models.IndexDocumentsAction{`0},Azure.Search.Documents.Models.IndexingResult,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Azure.Search.Documents.Models.IndexActionCompletedEventArgs`1" /> class.
            </summary>
            <param name="sender">
            The <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" /> raising the event.
            </param>
            <param name="action">
            The <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> that was completed.
            </param>
            <param name="result">
            The <see cref="T:Azure.Search.Documents.Models.IndexingResult" /> of an action that was successfully
            completed.
            </param>
            <param name="isRunningSynchronously">
            A value indicating whether the event handler was invoked
            synchronously or asynchronously.  Please see
            <see cref="T:Azure.Core.SyncAsyncEventHandler`1" /> for more details.
            </param>
            <param name="cancellationToken">
            A cancellation token related to the original operation that raised
            the event.  It's important for your handler to pass this token
            along to any asynchronous or long-running synchronous operations
            that take a token so cancellation will correctly propagate.  The
            default value is <see cref="P:System.Threading.CancellationToken.None" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="sender" />, <paramref name="action" />, or
            <paramref name="result" /> are null.
            </exception>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexActionEventArgs`1">
            <summary>
            Provides data for <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionAdded" />
            and <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionSent" /> events.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this type
            can be retrieved as documents from the index.  You can use
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> for dynamic documents.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexActionEventArgs`1.Sender">
            <summary>
            Gets the <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" /> raising the
            event.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexActionEventArgs`1.Action">
            <summary>
            Gets the <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> that was added,
            sent, completed, or failed.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexActionEventArgs`1.#ctor(Azure.Search.Documents.SearchIndexingBufferedSender{`0},Azure.Search.Documents.Models.IndexDocumentsAction{`0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Models.IndexActionEventArgs`1" />
            class.
            </summary>
            <param name="sender">
            The <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" /> raising the event.
            </param>
            <param name="action">
            The <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> that was added, sent,
            completed, or failed.
            </param>
            <param name="isRunningSynchronously">
            A value indicating whether the event handler was invoked
            synchronously or asynchronously.  Please see
            <see cref="T:Azure.Core.SyncAsyncEventHandler`1" /> for more details.
            </param>
            <param name="cancellationToken">
            A cancellation token related to the original operation that raised
            the event.  It's important for your handler to pass this token
            along to any asynchronous or long-running synchronous operations
            that take a token so cancellation will correctly propagate.  The
            default value is <see cref="P:System.Threading.CancellationToken.None" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="sender" /> or <paramref name="action" />
            are null.
            </exception>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexActionFailedEventArgs`1">
            <summary>
            Provides data for <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionCompleted" />
            event.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this type
            can be retrieved as documents from the index.  You can use
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> for dynamic documents.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexActionFailedEventArgs`1.Result">
            <summary>
            Gets the <see cref="T:Azure.Search.Documents.Models.IndexingResult" /> of an action that failed to
            complete.  The value might be null.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexActionFailedEventArgs`1.Exception">
            <summary>
            Gets the <see cref="P:Azure.Search.Documents.Models.IndexActionFailedEventArgs`1.Exception" /> caused by an action that failed to
            complete.  The value might be null.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexActionFailedEventArgs`1.#ctor(Azure.Search.Documents.SearchIndexingBufferedSender{`0},Azure.Search.Documents.Models.IndexDocumentsAction{`0},Azure.Search.Documents.Models.IndexingResult,System.Exception,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Azure.Search.Documents.Models.IndexActionCompletedEventArgs`1" /> class.
            </summary>
            <param name="sender">
            The <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" /> raising the event.
            </param>
            <param name="action">
            The <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> that failed.
            </param>
            <param name="result">
            The <see cref="T:Azure.Search.Documents.Models.IndexingResult" /> of an action that failed to
            complete.
            </param>
            <param name="exception">
            the <see cref="P:Azure.Search.Documents.Models.IndexActionFailedEventArgs`1.Exception" /> caused by an action that failed to
            complete.
            </param>
            <param name="isRunningSynchronously">
            A value indicating whether the event handler was invoked
            synchronously or asynchronously.  Please see
            <see cref="T:Azure.Core.SyncAsyncEventHandler`1" /> for more details.
            </param>
            <param name="cancellationToken">
            A cancellation token related to the original operation that raised
            the event.  It's important for your handler to pass this token
            along to any asynchronous or long-running synchronous operations
            that take a token so cancellation will correctly propagate.  The
            default value is <see cref="P:System.Threading.CancellationToken.None" />.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="sender" /> or <paramref name="action" />
            are null.
            </exception>
        </member>
        <member name="T:Azure.Search.Documents.Models.AutocompleteItem">
            <summary> The result of Autocomplete requests. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.AutocompleteItem.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of AutocompleteItem. </summary>
            <param name="text"> The completed term. </param>
            <param name="queryPlusText"> The query along with the completed term. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> or <paramref name="queryPlusText" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Models.AutocompleteItem.Text">
            <summary> The completed term. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.AutocompleteItem.QueryPlusText">
            <summary> The query along with the completed term. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.AutocompleteMode">
            <summary> Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context in producing autocomplete terms. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.AutocompleteMode.OneTerm">
            <summary> Only one term is suggested. If the query has two terms, only the last term is completed. For example, if the input is 'washington medic', the suggested terms could include 'medicaid', 'medicare', and 'medicine'. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.AutocompleteMode.TwoTerms">
            <summary> Matching two-term phrases in the index will be suggested. For example, if the input is 'medic', the suggested terms could include 'medicare coverage' and 'medical assistant'. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.AutocompleteMode.OneTermWithContext">
            <summary> Completes the last term in a query with two or more terms, where the last two terms are a phrase that exists in the index. For example, if the input is 'washington medic', the suggested terms could include 'washington medicaid' and 'washington medical'. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.AutocompleteResults">
            <summary> The result of Autocomplete query. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.AutocompleteResults.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.AutocompleteItem})">
            <summary> Initializes a new instance of AutocompleteResults. </summary>
            <param name="results"> The list of returned Autocompleted items. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="results" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.AutocompleteResults.#ctor(System.Nullable{System.Double},System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.AutocompleteItem})">
            <summary> Initializes a new instance of AutocompleteResults. </summary>
            <param name="coverage"> A value indicating the percentage of the index that was considered by the autocomplete request, or null if minimumCoverage was not specified in the request. </param>
            <param name="results"> The list of returned Autocompleted items. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.AutocompleteResults.Coverage">
            <summary> A value indicating the percentage of the index that was considered by the autocomplete request, or null if minimumCoverage was not specified in the request. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.AutocompleteResults.Results">
            <summary> The list of returned Autocompleted items. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.FacetResult">
            <summary> A single bucket of a facet query result. Reports the number of documents with a field value falling within a particular range or having a particular value or interval. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.#ctor">
            <summary> Initializes a new instance of FacetResult. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.#ctor(System.Nullable{System.Int64},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of FacetResult. </summary>
            <param name="count"> The approximate count of documents falling within the bucket described by this facet. </param>
            <param name="additionalProperties"> Additional Properties. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.Count">
            <summary> The approximate count of documents falling within the bucket described by this facet. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.FacetType">
            <summary>
            Gets the type of this facet.  Value facets count documents with a
            particular field value and Range facets count documents with a
            field value in a particular range.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.Value">
            <summary>
            Gets the value of the facet, or the inclusive lower bound if it's
            an interval facet.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.From">
            <summary>
            Gets a value indicating the inclusive lower bound of the facet's
            range, or null to indicate that there is no lower bound (i.e. --
            for the first bucket).
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.To">
            <summary>
            Gets a value indicating the exclusive upper bound of the facet's
            range, or null to indicate that there is no upper bound (i.e. --
            for the last bucket).
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.AsRangeFacetResult``1">
            <summary>
            Attempts to convert the facet to a range facet of the given type.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was
            applied. Valid types include <see cref="T:System.DateTimeOffset" />,
            <see cref="T:System.Double" />, and <see cref="T:System.Int64" />.
            </typeparam>
            <returns>A new strongly-typed range facet instance.</returns>
            <exception cref="T:System.InvalidCastException">
            This instance is not a range facet of the given type.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.AsValueFacetResult``1">
            <summary>
            Attempts to convert the facet to a value facet of the given type.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was
            applied.
            </typeparam>
            <returns>A new strongly-typed value facet instance.</returns>
            <exception cref="T:System.InvalidCastException">
            This instance is not a value facet of the given type.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.TryGetValue(System.String,System.Object@)">
            <summary>Gets the value that is associated with the specified key.</summary><param name="key">The key to locate.</param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param><returns><see langword="true" /> if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> interface contains an element that has the specified key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.FacetResult.ContainsKey(System.String)">
            <summary>Determines whether the read-only dictionary contains an element that has the specified key.</summary><param name="key">The key to locate.</param><returns><see langword="true" /> if the read-only dictionary contains an element that has the specified key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.System#Collections#Generic#IReadOnlyCollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count">
            <summary>Gets the number of elements in the collection.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.Item(System.String)">
            <summary>Gets the element that has the specified key in the read-only dictionary.</summary><param name="key">The key to locate.</param><returns>The element that has the specified key in the read-only dictionary.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexAction">
            <summary> Represents an index action that operates on a document. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexAction.#ctor">
            <summary> Initializes a new instance of IndexAction. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexAction.ActionType">
            <summary> The operation to perform on a document in an indexing batch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexAction.AdditionalProperties">
            <summary> Additional Properties. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexActionType">
            <summary> The operation to perform on a document in an indexing batch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.IndexActionType.Upload">
            <summary> Inserts the document into the index if it is new and updates it if it exists. All fields are replaced in the update case. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.IndexActionType.Merge">
            <summary> Merges the specified field values with an existing document. If the document does not exist, the merge will fail. Any field you specify in a merge will replace the existing field in the document. This also applies to collections of primitive and complex types. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.IndexActionType.MergeOrUpload">
            <summary> Behaves like merge if a document with the given key already exists in the index. If the document does not exist, it behaves like upload with a new document. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.IndexActionType.Delete">
            <summary> Removes the specified document from the index. Any field you specify in a delete operation other than the key field will be ignored. If you want to remove an individual field from a document, use merge instead and set the field explicitly to null. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexBatch">
            <summary> Contains a batch of document write actions to send to the index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexBatch.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.IndexAction})">
            <summary> Initializes a new instance of IndexBatch. </summary>
            <param name="actions"> The actions in the batch. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="actions" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexBatch.Actions">
            <summary> The actions in the batch. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexDocumentsResult">
            <summary> Response containing the status of operations for all documents in the indexing request. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.IndexingResult})">
            <summary> Initializes a new instance of IndexDocumentsResult. </summary>
            <param name="results"> The list of status information for each document in the indexing request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="results" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.IndexingResult})">
            <summary> Initializes a new instance of IndexDocumentsResult. </summary>
            <param name="results"> The list of status information for each document in the indexing request. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results">
            <summary> The list of status information for each document in the indexing request. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexingResult">
            <summary> Status of an indexing operation for a single document. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexingResult.#ctor(System.String,System.Boolean,System.Int32)">
            <summary> Initializes a new instance of IndexingResult. </summary>
            <param name="key"> The key of a document that was in the indexing request. </param>
            <param name="succeeded"> A value indicating whether the indexing operation succeeded for the document identified by the key. </param>
            <param name="status"> The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexingResult.#ctor(System.String,System.String,System.Boolean,System.Int32)">
            <summary> Initializes a new instance of IndexingResult. </summary>
            <param name="key"> The key of a document that was in the indexing request. </param>
            <param name="errorMessage"> The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded. </param>
            <param name="succeeded"> A value indicating whether the indexing operation succeeded for the document identified by the key. </param>
            <param name="status"> The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexingResult.Key">
            <summary> The key of a document that was in the indexing request. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexingResult.ErrorMessage">
            <summary> The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexingResult.Succeeded">
            <summary> A value indicating whether the indexing operation succeeded for the document identified by the key. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexingResult.Status">
            <summary>
            The status code of the indexing operation. Possible values include:
            200 for a successful update or delete, 201 for successful document
            creation, 400 for a malformed input document, 404 for document not
            found, 409 for a version conflict, 422 when the index is
            temporarily unavailable, or 503 for when the service is too busy.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.ScoringStatistics">
            <summary> A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency. The default is 'local'. Use 'global' to aggregate scoring statistics globally before scoring. Using global scoring statistics can increase latency of search queries. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.ScoringStatistics.Local">
            <summary> The scoring statistics will be calculated locally for lower latency. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.ScoringStatistics.Global">
            <summary> The scoring statistics will be calculated globally for more consistent scoring. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchDocumentsResult">
            <summary> Response containing search results from an index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocumentsResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.SearchResult})">
            <summary> Initializes a new instance of SearchDocumentsResult. </summary>
            <param name="results"> The sequence of results returned by the query. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="results" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocumentsResult.#ctor(System.Nullable{System.Int64},System.Nullable{System.Double},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IList{Azure.Search.Documents.Models.FacetResult}},Azure.Search.Documents.SearchOptions,System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.SearchResult},System.String)">
            <summary> Initializes a new instance of SearchDocumentsResult. </summary>
            <param name="count"> The total count of results found by the search operation, or null if the count was not requested. If present, the count may be greater than the number of results in this response. This can happen if you use the $top or $skip parameters, or if Azure Cognitive Search can't return all the requested documents in a single Search response. </param>
            <param name="coverage"> A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not specified in the request. </param>
            <param name="facets"> The facet query results for the search operation, organized as a collection of buckets for each faceted field; null if the query did not include any facet expressions. </param>
            <param name="nextPageParameters"> Continuation JSON payload returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this JSON along with @odata.nextLink to formulate another POST Search request to get the next part of the search response. </param>
            <param name="results"> The sequence of results returned by the query. </param>
            <param name="nextLink"> Continuation URL returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this URL to formulate another GET or POST Search request to get the next part of the search response. Make sure to use the same verb (GET or POST) as the request that produced this response. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocumentsResult.Count">
            <summary> The total count of results found by the search operation, or null if the count was not requested. If present, the count may be greater than the number of results in this response. This can happen if you use the $top or $skip parameters, or if Azure Cognitive Search can't return all the requested documents in a single Search response. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocumentsResult.Coverage">
            <summary> A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not specified in the request. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocumentsResult.Facets">
            <summary> The facet query results for the search operation, organized as a collection of buckets for each faceted field; null if the query did not include any facet expressions. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocumentsResult.NextPageParameters">
            <summary> Continuation JSON payload returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this JSON along with @odata.nextLink to formulate another POST Search request to get the next part of the search response. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocumentsResult.Results">
            <summary> The sequence of results returned by the query. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocumentsResult.NextLink">
            <summary> Continuation URL returned when Azure Cognitive Search can't return all the requested results in a single Search response. You can use this URL to formulate another GET or POST Search request to get the next part of the search response. Make sure to use the same verb (GET or POST) as the request that produced this response. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchError">
            <summary> Describes an error condition for the Azure Cognitive Search API. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchError.#ctor(System.String)">
            <summary> Initializes a new instance of SearchError. </summary>
            <param name="message"> A human-readable representation of the error. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchError.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.SearchError})">
            <summary> Initializes a new instance of SearchError. </summary>
            <param name="code"> One of a server-defined set of error codes. </param>
            <param name="message"> A human-readable representation of the error. </param>
            <param name="details"> An array of details about specific errors that led to this reported error. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchError.Code">
            <summary> One of a server-defined set of error codes. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchError.Message">
            <summary> A human-readable representation of the error. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchError.Details">
            <summary> An array of details about specific errors that led to this reported error. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchResult">
            <summary> Contains a document found by a search query, plus associated metadata. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResult.#ctor(System.Double)">
            <summary> Initializes a new instance of SearchResult. </summary>
            <param name="score"> The relevance score of the document compared to other documents returned by the query. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResult.#ctor(System.Double,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.IList{System.String}},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of SearchResult. </summary>
            <param name="score"> The relevance score of the document compared to other documents returned by the query. </param>
            <param name="highlights"> Text fragments from the document that indicate the matching search terms, organized by each applicable field; null if hit highlighting was not enabled for the query. </param>
            <param name="additionalProperties"> Additional Properties. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResult.Score">
            <summary> The relevance score of the document compared to other documents returned by the query. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResult.Highlights">
            <summary> Text fragments from the document that indicate the matching search terms, organized by each applicable field; null if hit highlighting was not enabled for the query. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResult.AdditionalProperties">
            <summary> Additional Properties. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SuggestDocumentsResult">
            <summary> Response containing suggestion query results from an index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SuggestDocumentsResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.SuggestResult})">
            <summary> Initializes a new instance of SuggestDocumentsResult. </summary>
            <param name="results"> The sequence of results returned by the query. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="results" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SuggestDocumentsResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.SuggestResult},System.Nullable{System.Double})">
            <summary> Initializes a new instance of SuggestDocumentsResult. </summary>
            <param name="results"> The sequence of results returned by the query. </param>
            <param name="coverage"> A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.SuggestDocumentsResult.Results">
            <summary> The sequence of results returned by the query. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SuggestDocumentsResult.Coverage">
            <summary> A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SuggestResult">
            <summary> A result containing a document found by a suggestion query, plus associated metadata. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SuggestResult.#ctor(System.String)">
            <summary> Initializes a new instance of SuggestResult. </summary>
            <param name="text"> The text of the suggestion result. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SuggestResult.#ctor(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of SuggestResult. </summary>
            <param name="text"> The text of the suggestion result. </param>
            <param name="additionalProperties"> Additional Properties. </param>
        </member>
        <member name="P:Azure.Search.Documents.Models.SuggestResult.Text">
            <summary> The text of the suggestion result. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SuggestResult.AdditionalProperties">
            <summary> Additional Properties. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchModelFactory">
            <summary> Model factory for read-only models. </summary>
            <summary>
            Helper class that acts as a factory for read-only models, to mock the types in <c>Azure.Search.Documents.Models</c>.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.AnalyzedTokenInfo(System.String,System.Int32,System.Int32,System.Int32)">
            <summary> Initializes a new instance of AnalyzedTokenInfo. </summary>
            <param name="token"> The token returned by the analyzer. </param>
            <param name="startOffset"> The index of the first character of the token in the input text. </param>
            <param name="endOffset"> The index of the last character of the token in the input text. </param>
            <param name="position"> The position of the token in the input text relative to other tokens. The first token in the input text has position 0, the next has position 1, and so on. Depending on the analyzer used, some tokens might have the same position, for example if they are synonyms of each other. </param>
            <returns> A new AnalyzedTokenInfo instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.CharFilter(System.String,System.String)">
            <summary> Initializes a new instance of CharFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the char filter. </param>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.CognitiveServicesAccount(System.String,System.String)">
            <summary> Initializes a new instance of CognitiveServicesAccount. </summary>
            <param name="oDataType"> Identifies the concrete type of the cognitive service resource attached to a skillset. </param>
            <param name="description"> Description of the cognitive service resource attached to a skillset. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.DataChangeDetectionPolicy(System.String)">
            <summary> Initializes a new instance of DataChangeDetectionPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data change detection policy. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.DataDeletionDetectionPolicy(System.String)">
            <summary> Initializes a new instance of DataDeletionDetectionPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data deletion detection policy. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.IndexerExecutionResult(Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexerError},System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexerWarning},System.Int32,System.Int32,System.String,System.String)">
            <summary> Initializes a new instance of IndexerExecutionResult. </summary>
            <param name="status"> The outcome of this indexer execution. </param>
            <param name="errorMessage"> The error message indicating the top-level error, if any. </param>
            <param name="startTime"> The start time of this indexer execution. </param>
            <param name="endTime"> The end time of this indexer execution, if the execution has already completed. </param>
            <param name="errors"> The item-level indexing errors. </param>
            <param name="warnings"> The item-level indexing warnings. </param>
            <param name="itemCount"> The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed. </param>
            <param name="failedItemCount"> The number of items that failed to be indexed during this indexer execution. </param>
            <param name="initialTrackingState"> Change tracking state with which an indexer execution started. </param>
            <param name="finalTrackingState"> Change tracking state with which an indexer execution finished. </param>
            <returns> A new IndexerExecutionResult instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.LexicalAnalyzer(System.String,System.String)">
            <summary> Initializes a new instance of LexicalAnalyzer. </summary>
            <param name="oDataType"> Identifies the concrete type of the analyzer. </param>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.LexicalTokenizer(System.String,System.String)">
            <summary> Initializes a new instance of LexicalTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.ScoringFunction(System.String,System.String,System.Double,System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation})">
            <summary> Initializes a new instance of ScoringFunction. </summary>
            <param name="type"> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </param>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchIndexerError(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary> Initializes a new instance of SearchIndexerError. </summary>
            <param name="key"> The key of the item for which indexing failed. </param>
            <param name="errorMessage"> The message describing the error that occurred while processing the item. </param>
            <param name="statusCode"> The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </param>
            <param name="name"> The name of the source at which the error originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available. </param>
            <param name="details"> Additional, verbose details about the error to assist in debugging the indexer. This may not be always available. </param>
            <param name="documentationLink"> A link to a troubleshooting guide for these classes of errors. This may not be always available. </param>
            <returns> A new SearchIndexerError instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchIndexerLimits(System.Nullable{System.TimeSpan},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary> Initializes a new instance of SearchIndexerLimits. </summary>
            <param name="maxRunTime"> The maximum duration that the indexer is permitted to run for one execution. </param>
            <param name="maxDocumentExtractionSize"> The maximum size of a document, in bytes, which will be considered valid for indexing. </param>
            <param name="maxDocumentContentCharactersToExtract"> The maximum number of characters that will be extracted from a document picked up for indexing. </param>
            <returns> A new SearchIndexerLimits instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchIndexerSkill(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of SearchIndexerSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchIndexerStatus(Azure.Search.Documents.Indexes.Models.IndexerStatus,Azure.Search.Documents.Indexes.Models.IndexerExecutionResult,System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.IndexerExecutionResult},Azure.Search.Documents.Indexes.Models.SearchIndexerLimits)">
            <summary> Initializes a new instance of SearchIndexerStatus. </summary>
            <param name="status"> Overall indexer status. </param>
            <param name="lastResult"> The result of the most recent or an in-progress indexer execution. </param>
            <param name="executionHistory"> History of the recent indexer executions, sorted in reverse chronological order. </param>
            <param name="limits"> The execution limits for the indexer. </param>
            <returns> A new SearchIndexerStatus instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchIndexerWarning(System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of SearchIndexerWarning. </summary>
            <param name="key"> The key of the item which generated a warning. </param>
            <param name="message"> The message describing the warning that occurred while processing the item. </param>
            <param name="name"> The name of the source at which the warning originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available. </param>
            <param name="details"> Additional, verbose details about the warning to assist in debugging the indexer. This may not be always available. </param>
            <param name="documentationLink"> A link to a troubleshooting guide for these classes of warnings. This may not be always available. </param>
            <returns> A new SearchIndexerWarning instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchIndexStatistics(System.Int64,System.Int64)">
            <summary> Initializes a new instance of SearchIndexStatistics. </summary>
            <param name="documentCount"> The number of documents in the index. </param>
            <param name="storageSize"> The amount of storage in bytes consumed by the index. </param>
            <returns> A new SearchIndexStatistics instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchResourceCounter(System.Int64,System.Nullable{System.Int64})">
            <summary> Initializes a new instance of SearchResourceCounter. </summary>
            <param name="usage"> The resource usage amount. </param>
            <param name="quota"> The resource amount quota. </param>
            <returns> A new SearchResourceCounter instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchServiceCounters(Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter)">
            <summary> Initializes a new instance of SearchServiceCounters. </summary>
            <param name="documentCounter"> Total number of documents across all indexes in the service. </param>
            <param name="indexCounter"> Total number of indexes. </param>
            <param name="indexerCounter"> Total number of indexers. </param>
            <param name="dataSourceCounter"> Total number of data sources. </param>
            <param name="storageSizeCounter"> Total size of used storage in bytes. </param>
            <param name="synonymMapCounter"> Total number of synonym maps. </param>
            <returns> A new SearchServiceCounters instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchServiceCounters(Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter)">
            <summary> Initializes a new instance of SearchServiceCounters. </summary>
            <param name="documentCounter"> Total number of documents across all indexes in the service. </param>
            <param name="indexCounter"> Total number of indexes. </param>
            <param name="indexerCounter"> Total number of indexers. </param>
            <param name="dataSourceCounter"> Total number of data sources. </param>
            <param name="storageSizeCounter"> Total size of used storage in bytes. </param>
            <param name="synonymMapCounter"> Total number of synonym maps. </param>
            <param name="skillsetCounter"> Total number of skillsets. </param>
            <returns> A new SearchServiceCounters instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchServiceLimits(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of SearchServiceLimits. </summary>
            <param name="maxFieldsPerIndex"> The maximum allowed fields per index. </param>
            <param name="maxFieldNestingDepthPerIndex"> The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3. </param>
            <param name="maxComplexCollectionFieldsPerIndex"> The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index. </param>
            <param name="maxComplexObjectsInCollectionsPerDocument"> The maximum number of objects in complex collections allowed per document. </param>
            <returns> A new SearchServiceLimits instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchServiceStatistics(Azure.Search.Documents.Indexes.Models.SearchServiceCounters,Azure.Search.Documents.Indexes.Models.SearchServiceLimits)">
            <summary> Initializes a new instance of SearchServiceStatistics. </summary>
            <param name="counters"> Service level resource counters. </param>
            <param name="limits"> Service level general limits. </param>
            <returns> A new SearchServiceStatistics instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SimilarityAlgorithm(System.String)">
            <summary> Initializes a new instance of SimilarityAlgorithm. </summary>
            <param name="oDataType"> . </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.TokenFilter(System.String,System.String)">
            <summary> Initializes a new instance of TokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.AutocompleteResults(System.Nullable{System.Double},System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.AutocompleteItem})">
            <summary> Initializes a new instance of AutocompleteResults. </summary>
            <param name="coverage"> A value indicating the percentage of the index that was considered by the autocomplete request, or null if minimumCoverage was not specified in the request. </param>
            <param name="results"> The list of returned Autocompleted items. </param>
            <returns> A new AutocompleteResults instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.AutocompleteItem(System.String,System.String)">
            <summary> Initializes a new instance of AutocompleteItem. </summary>
            <param name="text"> The completed term. </param>
            <param name="queryPlusText"> The query along with the completed term. </param>
            <returns> A new AutocompleteItem instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.FacetResult(System.Nullable{System.Int64},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of FacetResult. </summary>
            <param name="count"> The approximate count of documents falling within the bucket described by this facet. </param>
            <param name="additionalProperties"> . </param>
            <returns> A new FacetResult instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.IndexDocumentsResult(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.IndexingResult})">
            <summary> Initializes a new instance of IndexDocumentsResult. </summary>
            <param name="results"> The list of status information for each document in the indexing request. </param>
            <returns> A new IndexDocumentsResult instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.IndexingResult(System.String,System.String,System.Boolean,System.Int32)">
            <summary> Initializes a new instance of IndexingResult. </summary>
            <param name="key"> The key of a document that was in the indexing request. </param>
            <param name="errorMessage"> The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded. </param>
            <param name="succeeded"> A value indicating whether the indexing operation succeeded for the document identified by the key. </param>
            <param name="status"> The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </param>
            <returns> A new IndexingResult instance for mocking. </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchResult``1(``0,System.Nullable{System.Double},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <summary> Initializes a new instance of SearchResult. </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
            <param name="document">The document found by the search query.</param>
            <param name="score">
            The relevance score of the document compared to other documents
            returned by the query.
            </param>
            <param name="highlights">
            Text fragments from the document that indicate the matching search
            terms, organized by each applicable field; null if hit highlighting
            was not enabled for the query.
            </param>
            <returns>A new SearchResult instance for mocking.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchResults``1(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.SearchResult{``0}},System.Nullable{System.Int64},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{Azure.Search.Documents.Models.FacetResult}},System.Nullable{System.Double},Azure.Response)">
            <summary> Initializes a new instance of SearchResults. </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
            <param name="values">The search result values.</param>
            <param name="totalCount">The total count of results found by the search operation.</param>
            <param name="facets">The facet query results for the search operation.</param>
            <param name="coverage">A value indicating the percentage of the index that was included in the query</param>
            <param name="rawResponse">The raw Response that obtained these results from the service.</param>
            <returns>A new SearchResults instance for mocking.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchResultsPage``1(Azure.Search.Documents.Models.SearchResults{``0})">
            <summary> Initializes a new instance of SearchResultsPage. </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
            <param name="results">The search results for this page.</param>
            <returns>A new SearchResultsPage instance for mocking.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SearchSuggestion``1(``0,System.String)">
            <summary> Initializes a new instance of SearchSuggestion. </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
            <param name="document">The document being suggested.</param>
            <param name="text">The text of the suggestion result.</param>
            <returns>A new SuggestResults instance for mocking.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchModelFactory.SuggestResults``1(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Models.SearchSuggestion{``0}},System.Nullable{System.Double})">
            <summary> Initializes a new instance of SearchResult. </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="results">
            The sequence of suggestions returned by the query.
            </param>
            <param name="coverage">
            A value indicating the percentage of the index that was included in
            the query, or null if minimumCoverage was not set in the request.
            </param>
            <returns>A new SuggestResults instance for mocking.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.FacetType">
            <summary>
            Specifies the type of a facet query result.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.FacetType.Value">
            <summary>
            The facet counts documents with a particular field value.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.FacetType.Range">
            <summary>
            The facet counts documents with a field value in a particular range.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexDocumentsAction`1">
            <summary>
            Represents an index action that operates on a document.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexDocumentsAction`1.ActionType">
            <summary>
            The operation to perform on a document in an indexing batch.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexDocumentsAction`1.Document">
            <summary>
            The document to index.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction`1.#ctor(Azure.Search.Documents.Models.IndexActionType,`0)">
            <summary>
            Initializes a new instance of the IndexDocumentsAction class.
            </summary>
            <param name="type">
            The operation to perform on the document.
            </param>
            <param name="doc">The document to index.</param>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction`1.SerializeAsync(System.Text.Json.Utf8JsonWriter,Azure.Core.Serialization.ObjectSerializer,System.Text.Json.JsonSerializerOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Serialize the document write action.
            </summary>
            <param name="writer">The JSON writer.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="options">JSON serializer options.</param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>A task representing the serialization.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexDocumentsAction">
            <summary>
            Creates <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> instances to add to an
            <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> and submit via
            <see cref="M:Azure.Search.Documents.SearchClient.IndexDocuments``1(Azure.Search.Documents.Models.IndexDocumentsBatch{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction.Upload``1(``0)">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to upload.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="document">The document to upload.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to upload.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction.Merge``1(``0)">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to merge.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="document">The document to merge.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to merge.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction.MergeOrUpload``1(``0)">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to merge or upload.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="document">The document to merge or upload.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to merge or upload.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction.Delete``1(``0)">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to delete.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="document">The document to delete.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to delete.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsAction.Delete(System.String,System.String)">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to
            delete.
            </summary>
            <param name="keyName">
            The name of the key field of the index.
            </param>
            <param name="keyValue">The key of the document to delete.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsAction`1" /> to delete.
            </returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1">
            <summary>
            Contains a batch of document write actions to send to a search index
            via <see cref="M:Azure.Search.Documents.SearchClient.IndexDocuments``1(Azure.Search.Documents.Models.IndexDocumentsBatch{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.IndexDocumentsBatch`1.Actions">
            <summary>
            The actions in the batch.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch`1.#ctor">
            <summary>
            Initializes a new instance of the IndexDocumentsBatch class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch`1.#ctor(Azure.Search.Documents.Models.IndexActionType,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the IndexDocumentsBatch class.
            </summary>
            <param name="type">
            The operation to perform on a document in an indexing batch.
            </param>
            <param name="documents">
            The collection of documents to index.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch`1.SerializeAsync(System.Text.Json.Utf8JsonWriter,Azure.Core.Serialization.ObjectSerializer,System.Text.Json.JsonSerializerOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Serialize the document batch.
            </summary>
            <param name="writer">The JSON writer.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="options">JSON serializer options.</param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>A task representing the serialization.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.IndexDocumentsBatch">
            <summary>
            Creates <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> instances to update
            search indexes via <see cref="M:Azure.Search.Documents.SearchClient.IndexDocuments``1(Azure.Search.Documents.Models.IndexDocumentsBatch{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch.Upload``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to upload.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to upload.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to upload.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch.Merge``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to merge.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to merge.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to merge.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch.MergeOrUpload``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to merge or upload.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to merge or upload.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to merge or upload.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to delete.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to delete.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to delete.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch.Delete(System.String,System.Collections.Generic.IEnumerable{System.String})">
             <summary>
            Create an <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to
             delete.
             </summary>
             <param name="keyName">
             The name of the key field that uniquely identifies documents in
             the index.
             </param>
             <param name="keyValues">
             The keys of the documents to delete.
             </param>
             <returns>
             An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to delete.
             </returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.IndexDocumentsBatch.Create``1(Azure.Search.Documents.Models.IndexDocumentsAction{``0}[])">
            <summary>
            Creates a new <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> for uploading
            documents to the index.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="actions">The document write actions.</param>
            <returns>
            An <see cref="T:Azure.Search.Documents.Models.IndexDocumentsBatch`1" /> to update.
            </returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.RangeFacetResult`1">
            <summary>
            A single bucket of a range facet query result that reports the number
            of documents with a field value falling within a particular range.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was
            applied. Valid types include <see cref="T:System.DateTimeOffset" />,
            <see cref="T:System.Double" />, and <see cref="T:System.Int64" />.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.RangeFacetResult`1.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket
            described by this facet.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.RangeFacetResult`1.From">
            <summary>
            Gets a value indicating the inclusive lower bound of the facet's
            range, or <c>null</c> to indicate that there is no lower bound
            (for the first bucket).
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.RangeFacetResult`1.To">
            <summary>
            Gets a value indicating the exclusive upper bound of the facet's
            range, or <c>null</c> to indicate that there is no upper bound
            (for the last bucket).
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.RangeFacetResult`1.#ctor(System.Int64,System.Nullable{`0},System.Nullable{`0})">
            <summary>
            Creates a new instance of the RangeFacetResult class.
            </summary>
            <param name="count">
            The approximate count of documents falling within the bucket
            described by this facet.
            </param>
            <param name="from">
            A value indicating the inclusive lower bound of the facet's range,
            or <c>null</c> to indicate that there is no lower bound (for the
            first bucket).
            </param>
            <param name="to">
            A value indicating the exclusive upper bound of the facet's range,
            or <c>null</c> to indicate that there is no upper bound (for the
            last bucket).
            </param>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchContinuationToken">
            <summary>
            Creates continuation tokens used for resuming a search that requires
            multiple requests to return the user's desired data.  This is only to
            support server-side paging.  Client-side paging should be handled with
            Skip and Size.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchContinuationToken.Serialize(System.Uri,Azure.Search.Documents.SearchOptions)">
            <summary>
            Creates a durable, opaque continuation token that can be provided
            to users.
            </summary>
            <param name="nextPageUri">
            URI of additional results when making GET requests.
            </param>
            <param name="nextPageOptions">
            <see cref="T:Azure.Search.Documents.SearchOptions" /> for additional results when making POST
            requests.
            </param>
            <returns>A continuation token.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchContinuationToken.Deserialize(System.String)">
            <summary>
            Parses a continuation token and returns the corresponding to the
            next page's <see cref="T:Azure.Search.Documents.SearchOptions" />.
            </summary>
            <param name="continuationToken">
            The serialized continuation token.
            </param>
            <returns>The continuation token's next page options.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchMode">
            <summary>
            Specifies whether any or all of the search terms must be matched in order to count the document as a match.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.SearchMode.Any">
            <summary>
            Any search terms may match.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.SearchMode.All">
            <summary>
            All search terms must match.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchQueryType">
            <summary>
            Specifies the syntax of the search query.  The default is "simple".
            Use "full" if your query uses the Lucene query syntax.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.SearchQueryType.Simple">
            <summary>
            Uses the simple query syntax for searches.
            <para>Search text is interpreted using a simple query language that allows for symbols such as +, * and \"\".
            Queries are evaluated across all searchable fields by default, unless the searchFields parameter is specified.</para>
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Models.SearchQueryType.Full">
            <summary>
            Uses the full Lucene query syntax for searches.
            <para>Search text is interpreted using the Lucene query language which allows field-specific and weighted searches, as well as other advanced features.</para>
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchResult`1">
            <summary>
            Contains a document found by a search query, plus associated metadata.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResult`1.Score">
            <summary>
            The relevance score of the document compared to other documents
            returned by the query.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResult`1.Highlights">
            <summary>
            Text fragments from the document that indicate the matching search
            terms, organized by each applicable field; null if hit highlighting
            was not enabled for the query.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResult`1.Document">
            <summary>
            The document found by the search query.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResult`1.#ctor">
            <summary>
            Initializes a new instance of the SearchResult class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResult`1.DeserializeAsync(System.Text.Json.JsonElement,Azure.Core.Serialization.ObjectSerializer,System.Text.Json.JsonSerializerOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deserialize a SearchResult and its model.
            </summary>
            <param name="element">A JSON element.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="options">JSON serializer options.</param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>Deserialized SearchResults.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchResults`1">
            <summary>
            Response containing search results from an index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.TotalCount">
            <summary>
            The total count of results found by the search operation, or null
            if the count was not requested via
            <see cref="P:Azure.Search.Documents.SearchOptions.IncludeTotalCount" />.  If present, the
            count may be greater than the number of results in this response.
            This can happen if you use the <see cref="P:Azure.Search.Documents.SearchOptions.Size" /> or
            <see cref="P:Azure.Search.Documents.SearchOptions.Skip" /> parameters, or if Azure Cognitive
            Search can't return all the requested documents in a single Search
            response.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.Coverage">
            <summary>
            A value indicating the percentage of the index that was included in
            the query, or null if <see cref="P:Azure.Search.Documents.SearchOptions.MinimumCoverage" />
            was not specified in the request.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.Facets">
            <summary>
            The facet query results for the search operation, organized as a
            collection of buckets for each faceted field; null if the query did
            not include any facet expressions via
            <see cref="P:Azure.Search.Documents.SearchOptions.Facets" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.Values">
            <summary>
            Gets the first (server side) page of search result values.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.NextUri">
            <summary>
            Gets or sets the fully constructed URI for the next page of
            results.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.NextOptions">
            <summary>
            Gets or sets the SearchOptions required to fetch the next page of
            results.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResults`1.RawResponse">
            <summary>
            Gets the raw Response that obtained these results from the service.
            This is only used when paging.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResults`1.#ctor">
            <summary>
            Initializes a new instance of the SearchResults class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResults`1.GetResults">
            <summary>
            Get all of the <see cref="T:Azure.Search.Documents.Models.SearchResult`1" />s synchronously.
            </summary>
            <returns>The search results.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResults`1.GetResultsAsync">
            <summary>
            Get all of the <see cref="T:Azure.Search.Documents.Models.SearchResult`1" />s asynchronously.
            </summary>
            <returns>The search results.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResults`1.ConfigurePaging(Azure.Search.Documents.SearchClient,Azure.Response)">
            <summary>
            Initialize the state needed to allow paging.
            </summary>
            <param name="client">
            The SearchClient to make requests.
            </param>
            <param name="rawResponse">
            The raw response that obtained these results.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResults`1.GetNextPageAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Get the next (server-side) page of results.
            </summary>
            <param name="async">
            Whether to execute synchronously or asynchronously.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>The next page of SearchResults.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResults`1.DeserializeAsync(System.IO.Stream,Azure.Core.Serialization.ObjectSerializer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deserialize the SearchResults.
            </summary>
            <param name="json">A JSON stream.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>Deserialized SearchResults.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchResultsPage`1">
            <summary>
            A page of <see cref="T:Azure.Search.Documents.Models.SearchResult`1" />s returned from
            <see cref="M:Azure.Search.Documents.Models.SearchResults`1.GetResultsAsync" />'s
            <see cref="M:Azure.AsyncPageable`1.AsPages(System.String,System.Nullable{System.Int32})" /> method.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResultsPage`1.TotalCount">
            <summary>
            The total count of results found by the search operation, or null
            if the count was not requested via
            <see cref="P:Azure.Search.Documents.SearchOptions.IncludeTotalCount" />.  If present, the
            count may be greater than the number of results in this response.
            This can happen if you use the <see cref="P:Azure.Search.Documents.SearchOptions.Size" /> or
            <see cref="P:Azure.Search.Documents.SearchOptions.Skip" /> parameters, or if Azure Cognitive
            Search can't return all the requested documents in a single Search
            response.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResultsPage`1.Coverage">
            <summary>
            A value indicating the percentage of the index that was included in
            the query, or null if <see cref="P:Azure.Search.Documents.SearchOptions.MinimumCoverage" />
            was not specified in the request.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResultsPage`1.Facets">
            <summary>
            The facet query results for the search operation, organized as a
            collection of buckets for each faceted field; null if the query did
            not include any facet expressions via
            <see cref="P:Azure.Search.Documents.SearchOptions.Facets" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResultsPage`1.Values">
            <summary>
            Gets the values in this <see cref="T:Azure.Page`1" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchResultsPage`1.ContinuationToken">
            <summary>
            Gets the continuation token used to request the next
            <see cref="T:Azure.Page`1" />.  The continuation token may be null or
            empty when there are no more pages.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchResultsPage`1.GetRawResponse">
            <summary>
            Gets the <see cref="T:Azure.Response" /> that provided this
            <see cref="T:Azure.Page`1" />.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchAsyncPageable`1">
            <summary>
            <see cref="T:Azure.AsyncPageable`1" /> of <see cref="T:Azure.Search.Documents.Models.SearchResult`1" />s
            returned from <see cref="M:Azure.Search.Documents.Models.SearchResults`1.GetResultsAsync" /> to
            enumerate all of the search results.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchAsyncPageable`1.AsPages(System.String,System.Nullable{System.Int32})">
            <summary>
            Enumerate the values a <see cref="T:Azure.Page`1" /> at a time.  This may
            make multiple service requests.
            </summary><param name="continuationToken">
            A continuation token indicating where to resume paging or null to
            begin paging from the beginning.
            </param><param name="pageSizeHint">
            The number of items per <see cref="T:Azure.Page`1" /> that should be requested (from
            service operations that support it). It's not guaranteed that the value will be respected.
            </param><returns>
            An async sequence of <see cref="T:Azure.Page`1" />s.
            </returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchPageable`1">
            <summary>
            <see cref="T:Azure.Pageable`1" /> of <see cref="T:Azure.Search.Documents.Models.SearchResult`1" />s returned
            from <see cref="M:Azure.Search.Documents.Models.SearchResults`1.GetResults" /> to enumerate all of the
            search results.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchPageable`1.AsPages(System.String,System.Nullable{System.Int32})">
            <summary>
            Enumerate the values a <see cref="T:Azure.Page`1" /> at a time.  This may
            make multiple service requests.
            </summary><param name="continuationToken">
            A continuation token indicating where to resume paging or null to
            begin paging from the beginning.
            </param><param name="pageSizeHint">
            The number of items per <see cref="T:Azure.Page`1" /> that should be requested (from
            service operations that support it). It's not guaranteed that the value will be respected.
            </param><returns>
            An async sequence of <see cref="T:Azure.Page`1" />s.
            </returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchSuggestion`1">
            <summary>
            A result containing a document found by a suggestion query, plus
            associated metadata.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchSuggestion`1.Text">
            <summary>
            The text of the suggestion result.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchSuggestion`1.Document">
            <summary>
            The document being suggested.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchSuggestion`1.#ctor">
            <summary>
            Initializes a new instance of the SearchSuggestion class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchSuggestion`1.DeserializeAsync(System.Text.Json.JsonElement,Azure.Core.Serialization.ObjectSerializer,System.Text.Json.JsonSerializerOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deserialize a SearchSuggestion and its model.
            </summary>
            <param name="element">A JSON element.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="options">JSON serializer options.</param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>Deserialized SearchSuggestion.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.SuggestResults`1">
            <summary>
            Response containing suggestion query results from an index.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type can
            be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.SuggestResults`1.Coverage">
            <summary>
            A value indicating the percentage of the index that was included in
            the query, or null if minimumCoverage was not set in the request.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SuggestResults`1.Results">
            <summary>
            The sequence of suggestions returned by the query.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SuggestResults`1.#ctor">
            <summary>
            Initializes a new instance of the SuggestResults class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SuggestResults`1.DeserializeAsync(System.IO.Stream,Azure.Core.Serialization.ObjectSerializer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deserialize the SuggestResults.
            </summary>
            <param name="json">A JSON stream.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>Deserialized SuggestResults.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Models.ValueFacetResult`1">
            <summary>
            A single bucket of a simple or interval facet query result that reports
            the number of documents with a field falling within a particular
            interval or having a specific value.
            </summary>
            <typeparam name="T">
            A type that matches the type of the field to which the facet was
            applied.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Models.ValueFacetResult`1.Count">
            <summary>
            Gets the approximate count of documents falling within the bucket
            described by this facet.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.ValueFacetResult`1.Value">
            <summary>
            Gets the value of the facet, or the inclusive lower bound if it's
            an interval facet.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.ValueFacetResult`1.#ctor(System.Int64,`0)">
            <summary>
            Creates a new instance of the ValueFacetResult class.
            </summary>
            <param name="count">
            The approximate count of documents falling within the bucket
            described by this facet.
            </param>
            <param name="value">
            The value of the facet, or the inclusive lower bound if it's an
            interval facet.
            </param>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchDocument">
            <summary>
            Represents an untyped document returned from a search or document
            lookup.  It can be accessed as either a dynamic object or a dictionary.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.SetValue(System.String,System.Object)">
            <summary>
            Set a document property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetValue``1(System.String)">
            <summary>
            Get a document property.
            </summary>
            <typeparam name="T">The expected type of the property value.</typeparam>
            <param name="name">The property name.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetValue(System.String,System.Type)">
            <summary>
            Get a document property.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The expected type of the property value.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.TryGetValue(System.String,System.Type,System.Object@)">
            <summary>
            Try to get a document property.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The expected type of the property value.</param>
            <param name="value">The value of the property if found.</param>
            <returns>A value indicating whether the property was found.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.ConvertValue(System.Object,System.Type)">
            <summary>
            Attempt to convert a value to the desired type.  This is full of
            Search specific conversions and I'd expect to be able to override
            a base version of this provided by DynamicData.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="type">The type to convert to.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.#ctor">
            <summary>
            Initializes a new instance of the SearchDocument class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the SearchDocument class with initial
            values.
            </summary>
            <param name="values">Initial values of the document.</param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetBoolean(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Nullable`1" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetBooleanCollection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Boolean" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetInt32(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Nullable`1" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetInt32Collection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Int32" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetInt64(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Nullable`1" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetInt64Collection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Int64" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetDouble(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Nullable`1" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetDoubleCollection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Double" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetDateTimeOffset(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.Nullable`1" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetDateTimeOffsetCollection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.DateTimeOffset" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetString(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.String" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetStringCollection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:System.String" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetPoint(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:Azure.Core.GeoJson.GeoPoint" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetPointCollection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            <see cref="T:Azure.Core.GeoJson.GeoPoint" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetObject(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            complex <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetObjectCollection(System.String)">
            <summary>
            Get the value of a <see cref="T:Azure.Search.Documents.Models.SearchDocument" />'s
            complex <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> collection property called
            <paramref name="key" />.
            </summary>
            <param name="key">The name of the property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.Item(System.String)">
            <summary>Gets or sets the element with the specified key.</summary><param name="key">The key of the element to get or set.</param><returns>The element with the specified key.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.TryGetValue(System.String,System.Object@)">
            <summary>Gets the value associated with the specified key.</summary><param name="key">The key whose value to get.</param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param><returns><see langword="true" /> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.Keys">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#IDictionary{System#String,System#Object}#Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.Add(System.String,System.Object)">
            <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><param name="key">The object to use as the key of the element to add.</param><param name="value">The object to use as the value of the element to add.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.ContainsKey(System.String)">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</summary><param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param><returns><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.Remove(System.String)">
            <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><param name="key">The key of the element to remove.</param><returns><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.  This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Models.SearchDocumentConverter">
            <summary>
            Convert JSON to and from a SearchDocument.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocumentConverter.Write(System.Text.Json.Utf8JsonWriter,Azure.Search.Documents.Models.SearchDocument,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write a SearchDocument as JSON.
            </summary>
            <param name="writer">The JSON writer.</param>
            <param name="value">The document.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocumentConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Parse JSON into a SearchDocument.
            </summary>
            <param name="reader">The JSON reader.</param>
            <param name="typeToConvert">The type to convert to.</param>
            <param name="options">Serialization options.</param>
            <returns>A deserialized SearchDocument.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Batching.ManualRetryDelay">
            <summary>
            Implements a "manual" version of an exponential back off retry policy
            that allows us to block before sending the next request instead of
            immediately after we get a response.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.ManualRetryDelay.Delay">
            <summary>
            The initial delay we use for calculating back off.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.ManualRetryDelay.MaxDelay">
            <summary>
            The maximum delay between attempts.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Batching.ManualRetryDelay.Update(System.Boolean)">
            <summary>
            Update whether the last request was throttled.
            </summary>
            <param name="throttled">
            Whether the last request was throttled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.Batching.ManualRetryDelay.WaitIfNeededAsync(System.Threading.CancellationToken)">
            <summary>
            Wait until our retry delay has elapsed, if needed.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task that will delay if needed.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Batching.Publisher`1">
            <summary>
            Implement a Producer/Consumer pattern where we (potentially) have
            multiple document producers and a single consumer that submits those
            events to a service.  This class is mostly focused on synchronizing
            behavior between document producers and relies on abstract methods to
            implement service specific semantics.
            </summary>
            <typeparam name="T">The type of document being published.</typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.IndexingActionsCount">
            <summary>
            Gets the number of indexing actions currently awaiting submission.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.AutoFlush">
            <summary>
            Gets a value indicating whether the publisher should automatically
            flush any indexing actions that have been added.  This will happen
            when the batch is full or when the <see cref="P:Azure.Search.Documents.Batching.Publisher`1.AutoFlushInterval" />
            has elapsed.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.AutoFlushInterval">
            <summary>
            Gets an optional amount of time to wait before automatically
            flushing any remaining indexing actions.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.PublisherCancellationToken">
            <summary>
            Gets a <see cref="T:System.Threading.CancellationToken" /> to use when publishing.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.BatchActionCount">
            <summary>
            Gets or sets a value indicating the number of actions to group into a batch
            when tuning the behavior of the publisher.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.BatchPayloadSize">
            <summary>
            Gets a value indicating the number of bytes to use when tuning the
            behavior of the publisher.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.Publisher`1.MaxRetries">
            <summary>
            Gets the number of times to retry a failed document.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.#ctor(System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Creates a new Publisher which immediately starts listening to
            process requests.
            </summary>
            <param name="autoFlush">
            A value indicating whether the publisher should automatically flush.
            </param>
            <param name="autoFlushInterval">
            An optional amount of time to wait before automatically flushing.
            </param>
            <param name="batchActionSize">
            The number of actions to group into a batch.
            </param>
            <param name="batchPayloadSize">
            The number of bytes to use when tuning the behavior of the
            publisher.
            </param>
            <param name="maxRetries">
            The number of times to retry a failed document.
            </param>
            <param name="retryDelay">
            The initial retry delay on which to base calculations for a
            backoff-based approach.
            </param>
            <param name="maxRetryDelay">
            The maximum permissible delay between retry attempts.
            </param>
            <param name="publisherCancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to use when publishing.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.AddDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Add documents to be published.  This should only be called outside
            of the Publisher itself.
            </summary>
            <param name="documents">The documents to publish.</param>
            <param name="async">Whether to run sync or async.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task for adding the documents.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.FlushAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Flush any pending documents.  This should only be called outside of
            the Publisher itself.
            </summary>
            <param name="async">Whether to run sync or async.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task for adding the documents.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.GetDocumentKey(`0)">
            <summary>
            Get a key used to identify a given document.
            </summary>
            <param name="document">The document.</param>
            <returns>A key for that document.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.OnDocumentsAddedAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Process any documents that have been added for publishing.
            </summary>
            <param name="documents">The documents to publish.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task for processing the added documents.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.OnFlushedAsync(System.Threading.CancellationToken)">
            <summary>
            Process any requests to flush.  After submitting, this will unblock
            anyone waiting behind the Flush barrier.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task for flushing.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.System#IAsyncDisposable#DisposeAsync">
            <summary>
            Clean up any resources.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.System#IDisposable#Dispose">
            <summary>
            Clean up any resources.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.DisposeAsync(System.Boolean)">
            <summary>
            Dispose the sender and flush any remaining indexing actions that
            haven't been sent yet.  This will block until everything's been
            sent.
            </summary>
            <param name="async">Whether to call this sync or async.</param>
            <returns>A Task that will wait until we're disposed.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.SubmitBatchAsync(System.Collections.Generic.IList{Azure.Search.Documents.Batching.PublisherAction{`0}},System.Threading.CancellationToken)">
            <summary>
            Send indexing actions to be processed by the service.
            </summary>
            <param name="batch">The batch of actions to submit.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>Whether the submission was throttled.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.OnSubmitBatchAsync(System.Collections.Generic.IList{Azure.Search.Documents.Batching.PublisherAction{`0}},System.Threading.CancellationToken)">
            <summary>
            Send indexing actions to be processed by the service.
            </summary>
            <param name="batch">The batch of actions to submit.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>Whether the submission was throttled.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.GetEndpoint">
            <summary>
            Gets the endpoint information of the publisher.
            </summary>
            <returns>Service End point Uri of the publisher</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.EnqueueRetry(Azure.Search.Documents.Batching.PublisherAction{`0},System.Boolean)">
            <summary>
            Enqueues an action to be retried.
            </summary>
            <param name="action">The action to be retried.</param>
            <param name="skipIncrement">
            Whether we should skip incrementing the retry attempts because the
            failure wasn't related to the action.
            </param>
            <returns>
            A value indicating whether the action is retriable.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.Publisher`1.EnqueueRetry(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Batching.PublisherAction{`0}})">
            <summary>
            Enqueues <see cref="T:Azure.Search.Documents.Batching.PublisherAction`1" />s to be retried.
            </summary>
            <param name="actions">The <see cref="T:Azure.Search.Documents.Batching.PublisherAction`1" />s to be retried.</param>
        </member>
        <member name="T:Azure.Search.Documents.Batching.PublisherAction`1">
            <summary>
            Tracks actions that the publisher hasn't submitted yet.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this
            type can be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.Batching.PublisherAction`1.Document">
            <summary>
            Gets the action to submit.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.PublisherAction`1.Key">
            <summary>
            The key used to identify the document.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Batching.PublisherAction`1.RetryAttempts">
            <summary>
            Gets the number of retry attempts.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Batching.PublisherAction`1.#ctor(`0,System.String)">
            <summary>
            Creates a new PublisherAction.
            </summary>
            <param name="document">The action to submit.</param>
            <param name="key">Key of the action's document.</param>
        </member>
        <member name="T:Azure.Search.Documents.Batching.SearchIndexingPublisher`1">
            <summary>
            The SearchIndexingPublisher is responsible for submitting documents to
            the service for indexing.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this
            type can be retrieved as documents from the index. You can use
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> for dynamic documents.
            </typeparam>
        </member>
        <member name="M:Azure.Search.Documents.Batching.SearchIndexingPublisher`1.#ctor(Azure.Search.Documents.SearchIndexingBufferedSender{`0},System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Creates a new SearchIndexingPublisher which immediately starts
            listening to process requests.
            </summary>
            <param name="sender">The sender that produces actions.</param>
            <param name="autoFlush">
            A value indicating whether the publisher should automatically flush.
            </param>
            <param name="autoFlushInterval">
            An optional amount of time to wait before automatically flushing.
            </param>
            <param name="batchActionSize">
            The number of actions to group into a batch.
            </param>
            <param name="batchPayloadSize">
            The number of bytes to use when tuning the behavior of the
            publisher.
            </param>
            <param name="maxRetries">
            The number of times to retry a failed document.
            </param>
            <param name="retryDelay">
            The initial retry delay on which to base calculations for a
            backoff-based approach.
            </param>
            <param name="maxRetryDelay">
            The maximum permissible delay between retry attempts.
            </param>
            <param name="publisherCancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to use when publishing.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.Batching.SearchIndexingPublisher`1.GetDocumentKey(Azure.Search.Documents.Models.IndexDocumentsAction{`0})">
            <summary>
            Get a key used to identify a given document.
            </summary>
            <param name="document">The document.</param>
            <returns>A key for that document.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.SearchIndexingPublisher`1.OnDocumentsAddedAsync(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Models.IndexDocumentsAction{`0}},System.Threading.CancellationToken)">
            <summary>
            Process any documents that have been added for publishing.
            </summary>
            <param name="documents">The documents to publish.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Task for processing the added documents.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.SearchIndexingPublisher`1.OnSubmitBatchAsync(System.Collections.Generic.IList{Azure.Search.Documents.Batching.PublisherAction{Azure.Search.Documents.Models.IndexDocumentsAction{`0}}},System.Threading.CancellationToken)">
            <summary>
            Send indexing actions to be processed by the service.
            </summary>
            <param name="batch">The batch of actions to submit.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>Whether the submission was throttled.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Batching.SearchIndexingPublisher`1.GetEndpoint">
            <summary>
            Gets the endpoint information of the publisher.
            </summary>
            <returns>Service End point Uri of the publisher</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchIndexingBufferedSender`1">
            <summary>
            Index search documents with intelligent batching, automatic flushing,
            and retries for failed indexing actions.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema.  Instances of this
            type can be retrieved as documents from the index. You can use
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> for dynamic documents.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.SearchClient">
            <summary>
            Gets the <see cref="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.SearchClient" /> used to send requests to the
            service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.Endpoint">
            <summary>
            Gets the URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
            <remarks>
            This is not the URI of the Search Index.  You could construct that
            URI with "{Endpoint}/indexes/{IndexName}" if needed.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.ServiceName">
            <summary>
            Gets the name of the Search Service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.IndexName">
            <summary>
            Gets the name of the Search Index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSender`1.KeyFieldAccessor">
            <summary>
            Gets a function that can be used to access the index key value of a
            document.
            </summary>
        </member>
        <member name="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionAdded">
            <summary>
            Event raised whenever an indexing action is added to the sender.
            </summary>
        </member>
        <member name="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionSent">
            <summary>
            Event raised whenever an indexing action is sent by the sender.
            </summary>
        </member>
        <member name="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionCompleted">
            <summary>
            Event raised whenever an indexing action was submitted successfully.
            </summary>
        </member>
        <member name="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionFailed">
            <summary>
            Event raised whenever an indexing action failed.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.#ctor">
            <summary>
            Protected constructor for mocking.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.#ctor(Azure.Search.Documents.SearchClient,Azure.Search.Documents.SearchIndexingBufferedSenderOptions{`0})">
            <summary>
            Creates a new instance of <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" /> that
            can be used to index search documents with intelligent batching,
            automatic flushing, and retries for failed indexing actions.
            </summary>
            <param name="searchClient">
            The SearchClient used to send requests to the service.
            </param>
            <param name="options">
            The <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1" /> to
            customize the sender's behavior.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="searchClient" /> is null.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.System#IDisposable#Dispose">
            <summary>
            Flush any remaining work and clean up resources.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.System#IAsyncDisposable#DisposeAsync">
            <summary>
            Flush any remaining work and clean up resources.
            </summary>
            <returns>
            A task that will complete when the object has finished disposing.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.DisposeAsync(System.Boolean)">
            <summary>
            Dispose the sender and flush any remaining indexing actions that
            haven't been sent yet.  This will block until everything's been
            sent.
            </summary>
            <param name="async">Whether to call this sync or async.</param>
            <returns>A Task that will wait until we're disposed.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.Finalize">
            <summary>
            Ensure the sender was properly disposed.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.OnActionAddedAsync(Azure.Search.Documents.Models.IndexDocumentsAction{`0},System.Threading.CancellationToken)">
            <summary>
            Raise the <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionAdded" /> event.
            </summary>
            <param name="action">The action being added.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>
            A task that will not complete until every handler does.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.OnActionSentAsync(Azure.Search.Documents.Models.IndexDocumentsAction{`0},System.Threading.CancellationToken)">
            <summary>
            Raise the <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionSent" /> event.
            </summary>
            <param name="action">The action being added.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>
            A task that will not complete until every handler does.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.OnActionCompletedAsync(Azure.Search.Documents.Models.IndexDocumentsAction{`0},Azure.Search.Documents.Models.IndexingResult,System.Threading.CancellationToken)">
            <summary>
            Raise the <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionCompleted" /> event.
            </summary>
            <param name="action">The action being added.</param>
            <param name="result">The result of indexing.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>
            A task that will not complete until every handler does.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.OnActionFailedAsync(Azure.Search.Documents.Models.IndexDocumentsAction{`0},Azure.Search.Documents.Models.IndexingResult,System.Exception,System.Threading.CancellationToken)">
            <summary>
            Raise the <see cref="E:Azure.Search.Documents.SearchIndexingBufferedSender`1.ActionFailed" /> event.
            </summary>
            <param name="action">The action being added.</param>
            <param name="result">The result of indexing.</param>
            <param name="exception">An exception that was thrown.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>
            A task that will not complete until every handler does.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.IndexDocuments(Azure.Search.Documents.Models.IndexDocumentsBatch{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of upload, merge, and/or delete actions to eventually
            send to the search index.
            </summary>
            <param name="batch">The batch of document index actions.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.IndexDocumentsAsync(Azure.Search.Documents.Models.IndexDocumentsBatch{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of upload, merge, and/or delete actions to eventually
            send to the search index.
            </summary>
            <param name="batch">The batch of document index actions.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.UploadDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of upload actions to eventually send to the search
            index.
            </summary>
            <param name="documents">The documents to upload.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.UploadDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of upload actions to eventually send to the search
            index.
            </summary>
            <param name="documents">The documents to upload.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of merge actions to eventually send to the search
            index.
            </summary>
            <param name="documents">The documents to merge.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of merge actions to eventually send to the search
            index.
            </summary>
            <param name="documents">The documents to merge.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>.
            <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeOrUploadDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of merge or upload actions to eventually send to the
            search index.
            </summary>
            <param name="documents">The documents to merge or upload.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.MergeOrUploadDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of merge or upload actions to eventually send to the
            search index.
            </summary>
            <param name="documents">The documents to merge or upload.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.DeleteDocuments(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of delete actions to eventually send to the search
            index.
            </summary>
            <param name="documents">The documents to delete.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.DeleteDocumentsAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of delete actions to eventually send to the search
            index.
            </summary>
            <param name="documents">The documents to delete.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.Flush(System.Threading.CancellationToken)">
            <summary>
            Flush any pending indexing actions.  This will wait until
            everything has been sent before returning.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSender`1.FlushAsync(System.Threading.CancellationToken)">
            <summary>
            Flush any pending indexing actions.  This will wait until
            everything has been sent before returning.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>A Task that will complete after flushing.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchIndexingBufferedSenderExtensions">
            <summary>
            Extension methods for <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSenderExtensions.DeleteDocuments(Azure.Search.Documents.SearchIndexingBufferedSender{Azure.Search.Documents.Models.SearchDocument},System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of delete actions to eventually send to the search
            index.
            </summary>
            <param name="indexer">The sender.</param>
            <param name="keyFieldName">The name of the key field.</param>
            <param name="documentKeys">
            The keys of the documents to delete.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchIndexingBufferedSenderExtensions.DeleteDocumentsAsync(Azure.Search.Documents.SearchIndexingBufferedSender{Azure.Search.Documents.Models.SearchDocument},System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Adds a batch of delete actions to eventually send to the search
            index.
            </summary>
            <param name="indexer">The sender.</param>
            <param name="keyFieldName">The name of the key field.</param>
            <param name="documentKeys">
            The keys of the documents to delete.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            A task that completes when the indexing actions have been added but
            not yet sent.
            </returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1">
            <summary>
            Provides the configuration options for
            <see cref="T:Azure.Search.Documents.SearchIndexingBufferedSender`1" />.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.AutoFlush">
            <summary>
            Gets or sets a value indicating whether the sender should
            automatically flush any indexing actions that have been added.
            This will happen when the batch is full or when the
            <see cref="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.AutoFlushInterval" /> has elapsed.  The default value is
            <see langword="true" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.AutoFlushInterval">
            <summary>
            Gets or sets an optional amount of time to wait before
            automatically flushing any remaining indexing actions.  The default
            value is 60 seconds.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.FlushCancellationToken">
            <summary>
            Gets or sets a <see cref="T:System.Threading.CancellationToken" /> to use when
            submitting indexing actions.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.InitialBatchActionCount">
            <summary>
            Gets or sets a value indicating the initial number of actions to
            group into a batch when tuning the behavior of the sender.  The
            default value will be 512 if unset.  The current service maximum is
            32000.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.BatchPayloadSize">
            <summary>
            Gets or sets a value indicating the number of bytes to use when
            tuning the behavior of the sender.  The default value is 512.  The
            current service maximum is 32000.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.MaxRetriesPerIndexAction">
            <summary>
            Gets or sets the number of times to retry a failed document.  Note
            that this is different than <see cref="P:Azure.Core.RetryOptions.MaxRetries" />
            which will try to resend the same request.  This property is used
            to control the number of attempts we will make to submit an indexing
            action.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.ThrottlingDelay">
            <summary>
            The initial retry delay. The delay will increase exponentially with
            subsequent retries and add random jitter.  Note that this is
            different than <see cref="P:Azure.Core.RetryOptions.Delay" /> which
            will only delay before resending the same request.  This property
            is used to add delay between additional batch submissions when our
            requests are being throttled by the service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.MaxThrottlingDelay">
            <summary>
            The maximum permissible delay between retry attempts.  Note that
            this is different than <see cref="P:Azure.Core.RetryOptions.MaxDelay" />
            which will only delay before resending the same request.  This
            property is used to add delay between additional batch
            submissions when our requests are being throttled by the service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchIndexingBufferedSenderOptions`1.KeyFieldAccessor">
            <summary>
            Gets or sets a function that can be used to access the index key
            value of a document.  Any indexing errors are identified by key and
            you can use this function to provide that mapping.  Otherwise we
            will look for <see cref="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsKey" /> or call
            <see cref="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndex(System.String,System.Threading.CancellationToken)" />
            to help automatically determine the key.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.DataSourcesRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of DataSourcesRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.CreateOrUpdateAsync(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new datasource or updates a datasource if it already exists. </summary>
            <param name="dataSourceName"> The name of the datasource to create or update. </param>
            <param name="dataSource"> The definition of the datasource to create or update. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceName" /> or <paramref name="dataSource" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.CreateOrUpdate(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new datasource or updates a datasource if it already exists. </summary>
            <param name="dataSourceName"> The name of the datasource to create or update. </param>
            <param name="dataSource"> The definition of the datasource to create or update. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceName" /> or <paramref name="dataSource" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a datasource. </summary>
            <param name="dataSourceName"> The name of the datasource to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a datasource. </summary>
            <param name="dataSourceName"> The name of the datasource to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves a datasource definition. </summary>
            <param name="dataSourceName"> The name of the datasource to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.Get(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves a datasource definition. </summary>
            <param name="dataSourceName"> The name of the datasource to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSourceName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists all datasources available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the data sources to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists all datasources available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the data sources to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.CreateAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Threading.CancellationToken)">
            <summary> Creates a new datasource. </summary>
            <param name="dataSource"> The definition of the datasource to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSource" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DataSourcesRestClient.Create(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Threading.CancellationToken)">
            <summary> Creates a new datasource. </summary>
            <param name="dataSource"> The definition of the datasource to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSource" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.DocumentsRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of DocumentsRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="indexName"> The name of the index. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" />, <paramref name="indexName" /> or <paramref name="apiVersion" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="indexName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.CountAsync(System.Threading.CancellationToken)">
            <summary> Queries the number of documents in the index. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.Count(System.Threading.CancellationToken)">
            <summary> Queries the number of documents in the index. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.SearchPostAsync(Azure.Search.Documents.SearchOptions,System.Threading.CancellationToken)">
            <summary> Searches for documents in the index. </summary>
            <param name="searchRequest"> The definition of the Search request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="searchRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.SearchPost(Azure.Search.Documents.SearchOptions,System.Threading.CancellationToken)">
            <summary> Searches for documents in the index. </summary>
            <param name="searchRequest"> The definition of the Search request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="searchRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.GetAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Retrieves a document from the index. </summary>
            <param name="key"> The key of the document to retrieve. </param>
            <param name="selectedFields"> List of field names to retrieve for the document; Any field not retrieved will be missing from the returned document. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.Get(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> Retrieves a document from the index. </summary>
            <param name="key"> The key of the document to retrieve. </param>
            <param name="selectedFields"> List of field names to retrieve for the document; Any field not retrieved will be missing from the returned document. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.SuggestPostAsync(Azure.Search.Documents.SuggestOptions,System.Threading.CancellationToken)">
            <summary> Suggests documents in the index that match the given partial query text. </summary>
            <param name="suggestRequest"> The Suggest request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="suggestRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.SuggestPost(Azure.Search.Documents.SuggestOptions,System.Threading.CancellationToken)">
            <summary> Suggests documents in the index that match the given partial query text. </summary>
            <param name="suggestRequest"> The Suggest request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="suggestRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.IndexAsync(Azure.Search.Documents.Models.IndexBatch,System.Threading.CancellationToken)">
            <summary> Sends a batch of document write actions to the index. </summary>
            <param name="batch"> The batch of index actions. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="batch" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.Index(Azure.Search.Documents.Models.IndexBatch,System.Threading.CancellationToken)">
            <summary> Sends a batch of document write actions to the index. </summary>
            <param name="batch"> The batch of index actions. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="batch" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.AutocompletePostAsync(Azure.Search.Documents.AutocompleteOptions,System.Threading.CancellationToken)">
            <summary> Autocompletes incomplete query terms based on input text and matching terms in the index. </summary>
            <param name="autocompleteRequest"> The definition of the Autocomplete request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="autocompleteRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.DocumentsRestClient.AutocompletePost(Azure.Search.Documents.AutocompleteOptions,System.Threading.CancellationToken)">
            <summary> Autocompletes incomplete query terms based on input text and matching terms in the index. </summary>
            <param name="autocompleteRequest"> The definition of the Autocomplete request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="autocompleteRequest" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.IndexersRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of IndexersRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.ResetAsync(System.String,System.Threading.CancellationToken)">
            <summary> Resets the change tracking state associated with an indexer. </summary>
            <param name="indexerName"> The name of the indexer to reset. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.Reset(System.String,System.Threading.CancellationToken)">
            <summary> Resets the change tracking state associated with an indexer. </summary>
            <param name="indexerName"> The name of the indexer to reset. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.RunAsync(System.String,System.Threading.CancellationToken)">
            <summary> Runs an indexer on-demand. </summary>
            <param name="indexerName"> The name of the indexer to run. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.Run(System.String,System.Threading.CancellationToken)">
            <summary> Runs an indexer on-demand. </summary>
            <param name="indexerName"> The name of the indexer to run. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.CreateOrUpdateAsync(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexer,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new indexer or updates an indexer if it already exists. </summary>
            <param name="indexerName"> The name of the indexer to create or update. </param>
            <param name="indexer"> The definition of the indexer to create or update. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> or <paramref name="indexer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.CreateOrUpdate(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexer,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new indexer or updates an indexer if it already exists. </summary>
            <param name="indexerName"> The name of the indexer to create or update. </param>
            <param name="indexer"> The definition of the indexer to create or update. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> or <paramref name="indexer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes an indexer. </summary>
            <param name="indexerName"> The name of the indexer to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes an indexer. </summary>
            <param name="indexerName"> The name of the indexer to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves an indexer definition. </summary>
            <param name="indexerName"> The name of the indexer to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.Get(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves an indexer definition. </summary>
            <param name="indexerName"> The name of the indexer to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists all indexers available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists all indexers available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.CreateAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Threading.CancellationToken)">
            <summary> Creates a new indexer. </summary>
            <param name="indexer"> The definition of the indexer to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.Create(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Threading.CancellationToken)">
            <summary> Creates a new indexer. </summary>
            <param name="indexer"> The definition of the indexer to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.GetStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary> Returns the current status and execution history of an indexer. </summary>
            <param name="indexerName"> The name of the indexer for which to retrieve status. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexersRestClient.GetStatus(System.String,System.Threading.CancellationToken)">
            <summary> Returns the current status and execution history of an indexer. </summary>
            <param name="indexerName"> The name of the indexer for which to retrieve status. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexerName" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.IndexesRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of IndexesRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.CreateAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Threading.CancellationToken)">
            <summary> Creates a new search index. </summary>
            <param name="index"> The definition of the index to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="index" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.Create(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Threading.CancellationToken)">
            <summary> Creates a new search index. </summary>
            <param name="index"> The definition of the index to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="index" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists all indexes available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists all indexes available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.CreateOrUpdateAsync(System.String,Azure.Search.Documents.Indexes.Models.SearchIndex,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new search index or updates an index if it already exists. </summary>
            <param name="indexName"> The definition of the index to create or update. </param>
            <param name="index"> The definition of the index to create or update. </param>
            <param name="allowIndexDowntime"> Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> or <paramref name="index" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.CreateOrUpdate(System.String,Azure.Search.Documents.Indexes.Models.SearchIndex,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new search index or updates an index if it already exists. </summary>
            <param name="indexName"> The definition of the index to create or update. </param>
            <param name="index"> The definition of the index to create or update. </param>
            <param name="allowIndexDowntime"> Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests to fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> or <paramref name="index" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a search index and all the documents it contains. This operation is permanent, with no recovery option. Make sure you have a master copy of your index definition, data ingestion code, and a backup of the primary data source in case you need to re-build the index. </summary>
            <param name="indexName"> The name of the index to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a search index and all the documents it contains. This operation is permanent, with no recovery option. Make sure you have a master copy of your index definition, data ingestion code, and a backup of the primary data source in case you need to re-build the index. </summary>
            <param name="indexName"> The name of the index to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves an index definition. </summary>
            <param name="indexName"> The name of the index to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.Get(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves an index definition. </summary>
            <param name="indexName"> The name of the index to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.GetStatisticsAsync(System.String,System.Threading.CancellationToken)">
            <summary> Returns statistics for the given index, including a document count and storage usage. </summary>
            <param name="indexName"> The name of the index for which to retrieve statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.GetStatistics(System.String,System.Threading.CancellationToken)">
            <summary> Returns statistics for the given index, including a document count and storage usage. </summary>
            <param name="indexName"> The name of the index for which to retrieve statistics. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.AnalyzeAsync(System.String,Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions,System.Threading.CancellationToken)">
            <summary> Shows how an analyzer breaks text into tokens. </summary>
            <param name="indexName"> The name of the index for which to test an analyzer. </param>
            <param name="request"> The text and analyzer or analysis components to test. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> or <paramref name="request" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.IndexesRestClient.Analyze(System.String,Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions,System.Threading.CancellationToken)">
            <summary> Shows how an analyzer breaks text into tokens. </summary>
            <param name="indexName"> The name of the index for which to test an analyzer. </param>
            <param name="request"> The text and analyzer or analysis components to test. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexName" /> or <paramref name="request" /> is null. </exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo">
            <summary> Information about a token returned by an analyzer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary> Initializes a new instance of AnalyzedTokenInfo. </summary>
            <param name="token"> The token returned by the analyzer. </param>
            <param name="startOffset"> The index of the first character of the token in the input text. </param>
            <param name="endOffset"> The index of the last character of the token in the input text. </param>
            <param name="position"> The position of the token in the input text relative to other tokens. The first token in the input text has position 0, the next has position 1, and so on. Depending on the analyzer used, some tokens might have the same position, for example if they are synonyms of each other. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="token" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo.Token">
            <summary> The token returned by the analyzer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo.StartOffset">
            <summary> The index of the first character of the token in the input text. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo.EndOffset">
            <summary> The index of the last character of the token in the input text. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo.Position">
            <summary> The position of the token in the input text relative to other tokens. The first token in the input text has position 0, the next has position 1, and so on. Depending on the analyzer used, some tokens might have the same position, for example if they are synonyms of each other. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.AnalyzeResult">
            <summary> The result of testing an analyzer on text. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AnalyzeResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo})">
            <summary> Initializes a new instance of AnalyzeResult. </summary>
            <param name="tokens"> The list of tokens returned by the analyzer specified in the request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tokens" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AnalyzeResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo})">
            <summary> Initializes a new instance of AnalyzeResult. </summary>
            <param name="tokens"> The list of tokens returned by the analyzer specified in the request. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzeResult.Tokens">
            <summary> The list of tokens returned by the analyzer specified in the request. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions">
            <summary> Specifies some text and analysis components used to break that text into tokens. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String)">
            <summary> Initializes a new instance of AnalyzeTextOptions. </summary>
            <param name="text"> The text to break into tokens. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.Text">
            <summary> The text to break into tokens. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String,Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName)">
            <summary>
            Initializes a new instance of AnalyzeRequest.
            </summary>
            <param name="text">Required text to break into tokens.</param>
            <param name="analyzerName">The name of the analyzer to use to break the given <paramref name="text" />.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.#ctor(System.String,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)">
            <summary>
            Initializes a new instance of AnalyzeRequest.
            </summary>
            <param name="text">Required text to break into tokens.</param>
            <param name="tokenizerName">The name of the tokenizer to use to break the given <paramref name="text" />.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.AnalyzerName">
            <summary> The name of the analyzer to use to break the given text. If this parameter is not specified, you must specify a tokenizer instead. The tokenizer and analyzer parameters are mutually exclusive. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.TokenizerName">
            <summary> The name of the tokenizer to use to break the given text. If this parameter is not specified, you must specify an analyzer instead. The tokenizer and analyzer parameters are mutually exclusive. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.TokenFilters">
            <summary> An optional list of token filters to use when breaking the given text. This parameter can only be set when using the tokenizer parameter. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions.CharFilters">
            <summary> An optional list of character filters to use when breaking the given text. This parameter can only be set when using the tokenizer parameter. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.AsciiFoldingTokenFilter">
            <summary> Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the "Basic Latin" Unicode block) into their ASCII equivalents, if such equivalents exist. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AsciiFoldingTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of AsciiFoldingTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AsciiFoldingTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of AsciiFoldingTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="preserveOriginal"> A value indicating whether the original token will be kept. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AsciiFoldingTokenFilter.PreserveOriginal">
            <summary> A value indicating whether the original token will be kept. Default is false. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.AzureActiveDirectoryApplicationCredentials">
            <summary> Credentials of a registered application created for your search service, used for authenticated access to the encryption keys stored in Azure Key Vault. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AzureActiveDirectoryApplicationCredentials.#ctor(System.String)">
            <summary> Initializes a new instance of AzureActiveDirectoryApplicationCredentials. </summary>
            <param name="applicationId"> An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="applicationId" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.AzureActiveDirectoryApplicationCredentials.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of AzureActiveDirectoryApplicationCredentials. </summary>
            <param name="applicationId"> An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application. </param>
            <param name="applicationSecret"> The authentication key of the specified AAD application. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AzureActiveDirectoryApplicationCredentials.ApplicationId">
            <summary> An AAD Application ID that was granted the required access permissions to the Azure Key Vault that is to be used when encrypting your data at rest. The Application ID should not be confused with the Object ID for your AAD Application. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.AzureActiveDirectoryApplicationCredentials.ApplicationSecret">
            <summary> The authentication key of the specified AAD application. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract">
            <summary> Specifies the data to extract from Azure blob storage and tells the indexer which data to extract from image content when "imageAction" is set to a value other than "none".  This applies to embedded image content in a .PDF or other application, or image files such as .jpg and .png, in Azure blobs. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.StorageMetadata">
            <summary> Indexes just the standard blob properties and user-specified metadata. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.AllMetadata">
            <summary> Extracts metadata provided by the Azure blob storage subsystem and the content-type specific metadata (for example, metadata unique to just .png files are indexed). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.ContentAndMetadata">
            <summary> Extracts all metadata and textual content from each blob. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.op_Equality(Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract,Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.op_Inequality(Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract,Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.Equals(Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction">
            <summary> Determines how to process embedded images and image files in Azure blob storage.  Setting the "imageAction" configuration to any value other than "none" requires that a skillset also be attached to that indexer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.None">
            <summary> Ignores embedded images or image files in the data set.  This is the default. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.GenerateNormalizedImages">
            <summary> Extracts text from images (for example, the word "STOP" from a traffic stop sign), and embeds it into the content field.  This action requires that "dataToExtract" is set to "contentAndMetadata".  A normalized image refers to additional processing resulting in uniform image output, sized and rotated to promote consistent rendering when you include images in visual search results. This information is generated for each image when you use this option. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.GenerateNormalizedImagePerPage">
            <summary> Extracts text from images (for example, the word "STOP" from a traffic stop sign), and embeds it into the content field, but treats PDF files differently in that each page will be rendered as an image and normalized accordingly, instead of extracting embedded images.  Non-PDF file types will be treated the same as if "generateNormalizedImages" was set. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.op_Equality(Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction,Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.op_Inequality(Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction,Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.Equals(Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode">
            <summary> Represents the parsing mode for indexing from an Azure blob data source. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.Default">
            <summary> Set to default for normal file processing. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.Text">
            <summary> Set to text to improve indexing performance on plain text files in blob storage. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.DelimitedText">
            <summary> Set to delimitedText when blobs are plain CSV files. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.Json">
            <summary> Set to json to extract structured content from JSON files. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.JsonArray">
            <summary> Set to jsonArray to extract individual elements of a JSON array as separate documents in Azure Cognitive Search. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.JsonLines">
            <summary> Set to jsonLines to extract individual JSON entities, separated by a new line, as separate documents in Azure Cognitive Search. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.op_Equality(Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode,Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.op_Inequality(Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode,Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.Equals(Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm">
            <summary> Determines algorithm for text extraction from PDF files in Azure blob storage. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.None">
            <summary> Leverages normal text extraction.  This is the default. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.DetectAngles">
            <summary> May produce better and more readable text extraction from PDF files that have rotated text within them.  Note that there may be a small performance speed impact when this parameter is used.  This parameter only applies to PDF files, and only to PDFs with embedded text.  If the rotated text appears within an embedded image in the PDF, this parameter does not apply. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.op_Equality(Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm,Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.op_Inequality(Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm,Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.Equals(Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.BM25Similarity">
            <summary> Ranking function based on the Okapi BM25 similarity algorithm. BM25 is a TF-IDF-like algorithm that includes length normalization (controlled by the 'b' parameter) as well as term frequency saturation (controlled by the 'k1' parameter). </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BM25Similarity.#ctor">
            <summary> Initializes a new instance of BM25Similarity. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.BM25Similarity.#ctor(System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary> Initializes a new instance of BM25Similarity. </summary>
            <param name="oDataType"></param>
            <param name="k1"> This property controls the scaling function between the term frequency of each matching terms and the final relevance score of a document-query pair. By default, a value of 1.2 is used. A value of 0.0 means the score does not scale with an increase in term frequency. </param>
            <param name="b"> This property controls how the length of a document affects the relevance score. By default, a value of 0.75 is used. A value of 0.0 means no length normalization is applied, while a value of 1.0 means the score is fully normalized by the length of the document. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BM25Similarity.K1">
            <summary> This property controls the scaling function between the term frequency of each matching terms and the final relevance score of a document-query pair. By default, a value of 1.2 is used. A value of 0.0 means the score does not scale with an increase in term frequency. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.BM25Similarity.B">
            <summary> This property controls how the length of a document affects the relevance score. By default, a value of 0.75 is used. A value of 0.0 means no length normalization is applied, while a value of 1.0 means the score is fully normalized by the length of the document. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CharFilter">
            <summary> Base type for character filters. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilter.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of CharFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the char filter. </param>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CharFilter.ODataType">
            <summary> Identifies the concrete type of the char filter. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CharFilter.Name">
            <summary> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilter.#ctor(System.String)">
            <summary> Initializes a new instance of CharFilter. </summary>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CharFilterName">
            <summary> Defines the names of all character filters supported by Azure Cognitive Search. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.CharFilterName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CharFilterName.HtmlStrip">
            <summary> A character filter that attempts to strip out HTML constructs. See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.html. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.op_Equality(Azure.Search.Documents.Indexes.Models.CharFilterName,Azure.Search.Documents.Indexes.Models.CharFilterName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.CharFilterName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.op_Inequality(Azure.Search.Documents.Indexes.Models.CharFilterName,Azure.Search.Documents.Indexes.Models.CharFilterName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.CharFilterName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.CharFilterName">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.CharFilterName" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.Equals(Azure.Search.Documents.Indexes.Models.CharFilterName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CharFilterName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilter">
            <summary> Forms bigrams of CJK terms that are generated from the standard tokenizer. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of CjkBigramTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilterScripts},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of CjkBigramTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="ignoreScripts"> The scripts to ignore. </param>
            <param name="outputUnigrams"> A value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false). Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilter.OutputUnigrams">
            <summary> A value indicating whether to output both unigrams and bigrams (if true), or just bigrams (if false). Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilter.IgnoreScripts">
            <summary> The scripts to ignore. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilterScripts">
            <summary> Scripts that can be ignored by CjkBigramTokenFilter. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilterScripts.Han">
            <summary> Ignore Han script when forming bigrams of CJK terms. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilterScripts.Hiragana">
            <summary> Ignore Hiragana script when forming bigrams of CJK terms. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilterScripts.Katakana">
            <summary> Ignore Katakana script when forming bigrams of CJK terms. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.CjkBigramTokenFilterScripts.Hangul">
            <summary> Ignore Hangul script when forming bigrams of CJK terms. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ClassicSimilarity">
            <summary> Legacy similarity algorithm which uses the Lucene TFIDFSimilarity implementation of TF-IDF. This variation of TF-IDF introduces static document length normalization as well as coordinating factors that penalize documents that only partially match the searched queries. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ClassicSimilarity.#ctor">
            <summary> Initializes a new instance of ClassicSimilarity. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ClassicSimilarity.#ctor(System.String)">
            <summary> Initializes a new instance of ClassicSimilarity. </summary>
            <param name="oDataType"></param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ClassicTokenizer">
            <summary> Grammar-based tokenizer that is suitable for processing most European-language documents. This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ClassicTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of ClassicTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ClassicTokenizer.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of ClassicTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxTokenLength"> The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ClassicTokenizer.MaxTokenLength">
            <summary> The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccount">
            <summary> Base type for describing any cognitive service resource attached to a skillset. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccount.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of CognitiveServicesAccount. </summary>
            <param name="oDataType"> Identifies the concrete type of the cognitive service resource attached to a skillset. </param>
            <param name="description"> Description of the cognitive service resource attached to a skillset. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccount.ODataType">
            <summary> Identifies the concrete type of the cognitive service resource attached to a skillset. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccount.Description">
            <summary> Description of the cognitive service resource attached to a skillset. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccount.#ctor">
            <summary> Initializes a new instance of CognitiveServicesAccount. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccountKey">
            <summary> A cognitive service resource provisioned with a key that is attached to a skillset. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccountKey.#ctor(System.String)">
            <summary> Initializes a new instance of CognitiveServicesAccountKey. </summary>
            <param name="key"> The key used to provision the cognitive service resource attached to a skillset. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="key" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccountKey.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of CognitiveServicesAccountKey. </summary>
            <param name="oDataType"> Identifies the concrete type of the cognitive service resource attached to a skillset. </param>
            <param name="description"> Description of the cognitive service resource attached to a skillset. </param>
            <param name="key"> The key used to provision the cognitive service resource attached to a skillset. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CognitiveServicesAccountKey.Key">
            <summary> The key used to provision the cognitive service resource attached to a skillset. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CommonGramTokenFilter">
            <summary> Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CommonGramTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of CommonGramTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="commonWords"> The set of common words. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="commonWords" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CommonGramTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of CommonGramTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="commonWords"> The set of common words. </param>
            <param name="ignoreCase"> A value indicating whether common words matching will be case insensitive. Default is false. </param>
            <param name="useQueryMode"> A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CommonGramTokenFilter.IgnoreCase">
            <summary> A value indicating whether common words matching will be case insensitive. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CommonGramTokenFilter.UseQueryMode">
            <summary> A value that indicates whether the token filter is in query mode. When in query mode, the token filter generates bigrams and then removes common words and single terms followed by a common word. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CommonGramTokenFilter.CommonWords">
            <summary> The set of common words. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ConditionalSkill">
            <summary> A skill that enables scenarios that require a Boolean operation to determine the data to assign to an output. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ConditionalSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of ConditionalSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ConditionalSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of ConditionalSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CorsOptions">
            <summary> Defines options to control Cross-Origin Resource Sharing (CORS) for an index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CorsOptions.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of CorsOptions. </summary>
            <param name="allowedOrigins"> The list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended). </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="allowedOrigins" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CorsOptions.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Int64})">
            <summary> Initializes a new instance of CorsOptions. </summary>
            <param name="allowedOrigins"> The list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended). </param>
            <param name="maxAgeInSeconds"> The duration for which browsers should cache CORS preflight responses. Defaults to 5 minutes. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CorsOptions.MaxAgeInSeconds">
            <summary> The duration for which browsers should cache CORS preflight responses. Defaults to 5 minutes. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CorsOptions.AllowedOrigins">
            <summary> The list of origins from which JavaScript code will be granted access to your index. Can contain a list of hosts of the form {protocol}://{fully-qualified-domain-name}[:{port#}], or a single '*' to allow all origins (not recommended). </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CustomAnalyzer">
            <summary> Allows you to take control over the process of converting text into indexable/searchable tokens. It's a user-defined configuration consisting of a single predefined tokenizer and one or more filters. The tokenizer is responsible for breaking text into tokens, and the filters for modifying tokens emitted by the tokenizer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomAnalyzer.#ctor(System.String,System.String,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.TokenFilterName},System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of CustomAnalyzer. </summary>
            <param name="oDataType"> Identifies the concrete type of the analyzer. </param>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="tokenizerName"> The name of the tokenizer to use to divide continuous text into a sequence of tokens, such as breaking a sentence into words. </param>
            <param name="tokenFilters"> A list of token filters used to filter out or modify the tokens generated by a tokenizer. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed. </param>
            <param name="charFilters"> A list of character filters used to prepare input text before it is processed by the tokenizer. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed. </param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomAnalyzer.#ctor(System.String,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)">
            <summary> Initializes a new instance of CustomAnalyzer. </summary>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="tokenizerName"> The name of the tokenizer to use to divide continuous text into a sequence of tokens, such as breaking a sentence into words. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomAnalyzer.TokenizerName">
            <summary> The name of the tokenizer to use to divide continuous text into a sequence of tokens, such as breaking a sentence into words. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomAnalyzer.TokenFilters">
            <summary> A list of token filters used to filter out or modify the tokens generated by a tokenizer. For example, you can specify a lowercase filter that converts all characters to lowercase. The filters are run in the order in which they are listed. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomAnalyzer.CharFilters">
            <summary> A list of character filters used to prepare input text before it is processed by the tokenizer. For instance, they can replace certain characters or symbols. The filters are run in the order in which they are listed. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CustomEntity">
            <summary> An object that contains information about the matches that were found, and related metadata. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntity.#ctor(System.String)">
            <summary> Initializes a new instance of CustomEntity. </summary>
            <param name="name"> The top-level entity descriptor. Matches in the skill output will be grouped by this name, and it should represent the "normalized" form of the text being found. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntity.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.CustomEntityAlias})">
            <summary> Initializes a new instance of CustomEntity. </summary>
            <param name="name"> The top-level entity descriptor. Matches in the skill output will be grouped by this name, and it should represent the "normalized" form of the text being found. </param>
            <param name="description"> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </param>
            <param name="type"> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </param>
            <param name="subtype"> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </param>
            <param name="id"> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </param>
            <param name="caseSensitive"> Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to character casing. Sample case insensitive matches of "Microsoft" could be: microsoft, microSoft, MICROSOFT. </param>
            <param name="accentSensitive"> Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to accent. </param>
            <param name="fuzzyEditDistance"> Defaults to 0. Maximum value of 5. Denotes the acceptable number of divergent characters that would still constitute a match with the entity name. The smallest possible fuzziness for any given match is returned. For instance, if the edit distance is set to 3, "Windows10" would still match "Windows", "Windows10" and "Windows 7". When case sensitivity is set to false, case differences do NOT count towards fuzziness tolerance, but otherwise do. </param>
            <param name="defaultCaseSensitive"> Changes the default case sensitivity value for this entity. It be used to change the default value of all aliases caseSensitive values. </param>
            <param name="defaultAccentSensitive"> Changes the default accent sensitivity value for this entity. It be used to change the default value of all aliases accentSensitive values. </param>
            <param name="defaultFuzzyEditDistance"> Changes the default fuzzy edit distance value for this entity. It can be used to change the default value of all aliases fuzzyEditDistance values. </param>
            <param name="aliases"> An array of complex objects that can be used to specify alternative spellings or synonyms to the root entity name. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.Name">
            <summary> The top-level entity descriptor. Matches in the skill output will be grouped by this name, and it should represent the "normalized" form of the text being found. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.Description">
            <summary> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.Type">
            <summary> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.Subtype">
            <summary> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.Id">
            <summary> This field can be used as a passthrough for custom metadata about the matched text(s). The value of this field will appear with every match of its entity in the skill output. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.CaseSensitive">
            <summary> Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to character casing. Sample case insensitive matches of "Microsoft" could be: microsoft, microSoft, MICROSOFT. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.AccentSensitive">
            <summary> Defaults to false. Boolean value denoting whether comparisons with the entity name should be sensitive to accent. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.FuzzyEditDistance">
            <summary> Defaults to 0. Maximum value of 5. Denotes the acceptable number of divergent characters that would still constitute a match with the entity name. The smallest possible fuzziness for any given match is returned. For instance, if the edit distance is set to 3, "Windows10" would still match "Windows", "Windows10" and "Windows 7". When case sensitivity is set to false, case differences do NOT count towards fuzziness tolerance, but otherwise do. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.DefaultCaseSensitive">
            <summary> Changes the default case sensitivity value for this entity. It be used to change the default value of all aliases caseSensitive values. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.DefaultAccentSensitive">
            <summary> Changes the default accent sensitivity value for this entity. It be used to change the default value of all aliases accentSensitive values. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.DefaultFuzzyEditDistance">
            <summary> Changes the default fuzzy edit distance value for this entity. It can be used to change the default value of all aliases fuzzyEditDistance values. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntity.Aliases">
            <summary> An array of complex objects that can be used to specify alternative spellings or synonyms to the root entity name. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CustomEntityAlias">
            <summary> A complex object that can be used to specify alternative spellings or synonyms to the root entity name. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityAlias.#ctor(System.String)">
            <summary> Initializes a new instance of CustomEntityAlias. </summary>
            <param name="text"> The text of the alias. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityAlias.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of CustomEntityAlias. </summary>
            <param name="text"> The text of the alias. </param>
            <param name="caseSensitive"> Determine if the alias is case sensitive. </param>
            <param name="accentSensitive"> Determine if the alias is accent sensitive. </param>
            <param name="fuzzyEditDistance"> Determine the fuzzy edit distance of the alias. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityAlias.Text">
            <summary> The text of the alias. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityAlias.CaseSensitive">
            <summary> Determine if the alias is case sensitive. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityAlias.AccentSensitive">
            <summary> Determine if the alias is accent sensitive. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityAlias.FuzzyEditDistance">
            <summary> Determine the fuzzy edit distance of the alias. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill">
            <summary> A skill looks for text from a custom, user-defined list of words and phrases. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of CustomEntityLookupSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage},System.Uri,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.CustomEntity},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of CustomEntityLookupSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
            <param name="entitiesDefinitionUri"> Path to a JSON or CSV file containing all the target text to match against. This entity definition is read at the beginning of an indexer run. Any updates to this file during an indexer run will not take effect until subsequent runs. This config must be accessible over HTTPS. </param>
            <param name="inlineEntitiesDefinition"> The inline CustomEntity definition. </param>
            <param name="globalDefaultCaseSensitive"> A global flag for CaseSensitive. If CaseSensitive is not set in CustomEntity, this value will be the default value. </param>
            <param name="globalDefaultAccentSensitive"> A global flag for AccentSensitive. If AccentSensitive is not set in CustomEntity, this value will be the default value. </param>
            <param name="globalDefaultFuzzyEditDistance"> A global flag for FuzzyEditDistance. If FuzzyEditDistance is not set in CustomEntity, this value will be the default value. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.GlobalDefaultCaseSensitive">
            <summary> A global flag for CaseSensitive. If CaseSensitive is not set in CustomEntity, this value will be the default value. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.GlobalDefaultAccentSensitive">
            <summary> A global flag for AccentSensitive. If AccentSensitive is not set in CustomEntity, this value will be the default value. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.GlobalDefaultFuzzyEditDistance">
            <summary> A global flag for FuzzyEditDistance. If FuzzyEditDistance is not set in CustomEntity, this value will be the default value. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.EntitiesDefinitionUri">
            <summary> Path to a JSON or CSV file containing all the target text to match against. This entity definition is read at the beginning of an indexer run. Any updates to this file during an indexer run will not take effect until subsequent runs. This configuration must be accessible over HTTPS. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkill.InlineEntitiesDefinition">
            <summary> The inline CustomEntity definition. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage">
            <summary> The language codes supported for input text by CustomEntityLookupSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Ko">
            <summary> Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Pt">
            <summary> Portuguese. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage,Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage,Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.CustomEntityLookupSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DataChangeDetectionPolicy">
            <summary> Base type for data change detection policies. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DataChangeDetectionPolicy.#ctor(System.String)">
            <summary> Initializes a new instance of DataChangeDetectionPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data change detection policy. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DataChangeDetectionPolicy.ODataType">
            <summary> Identifies the concrete type of the data change detection policy. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DataChangeDetectionPolicy.#ctor">
            <summary> Initializes a new instance of DataChangeDetectionPolicy. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DataDeletionDetectionPolicy">
            <summary> Base type for data deletion detection policies. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DataDeletionDetectionPolicy.#ctor(System.String)">
            <summary> Initializes a new instance of DataDeletionDetectionPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data deletion detection policy. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DataDeletionDetectionPolicy.ODataType">
            <summary> Identifies the concrete type of the data deletion detection policy. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DataDeletionDetectionPolicy.#ctor">
            <summary> Initializes a new instance of DataDeletionDetectionPolicy. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DataSourceCredentials">
            <summary> Represents credentials that can be used to connect to a datasource. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DataSourceCredentials.#ctor">
            <summary> Initializes a new instance of DataSourceCredentials. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DataSourceCredentials.#ctor(System.String)">
            <summary> Initializes a new instance of DataSourceCredentials. </summary>
            <param name="connectionString"> The connection string for the datasource. Set to '&lt;unchanged&gt;' if you do not want the connection string updated. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DataSourceCredentials.ConnectionString">
            <summary> The connection string for the datasource. Set to '&lt;unchanged&gt;' if you do not want the connection string updated. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.DataSourceCredentials.UnchangedValue">
            <summary>
            Sentinel value that indicates to the server not to update the stored credentials.
            </summary>
            <remarks>
            Currently undocumented, but required to avoid clearing stored credentials.
            See https://github.com/Azure/azure-rest-api-specs/issues/9877 for details.
            </remarks>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DefaultCognitiveServicesAccount">
            <summary> An empty object that represents the default cognitive service resource for a skillset. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DefaultCognitiveServicesAccount.#ctor">
            <summary> Initializes a new instance of DefaultCognitiveServicesAccount. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DefaultCognitiveServicesAccount.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of DefaultCognitiveServicesAccount. </summary>
            <param name="oDataType"> Identifies the concrete type of the cognitive service resource attached to a skillset. </param>
            <param name="description"> Description of the cognitive service resource attached to a skillset. </param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter">
            <summary> Decomposes compound words found in many Germanic languages. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of DictionaryDecompounderTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="wordList"> The list of words to match against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="wordList" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of DictionaryDecompounderTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="wordList"> The list of words to match against. </param>
            <param name="minWordSize"> The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300. </param>
            <param name="minSubwordSize"> The minimum subword size. Only subwords longer than this are outputted. Default is 2. Maximum is 300. </param>
            <param name="maxSubwordSize"> The maximum subword size. Only subwords shorter than this are outputted. Default is 15. Maximum is 300. </param>
            <param name="onlyLongestMatch"> A value indicating whether to add only the longest matching subword to the output. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MinWordSize">
            <summary> The minimum word size. Only words longer than this get processed. Default is 5. Maximum is 300. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MinSubwordSize">
            <summary> The minimum subword size. Only subwords longer than this are outputted. Default is 2. Maximum is 300. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.MaxSubwordSize">
            <summary> The maximum subword size. Only subwords shorter than this are outputted. Default is 15. Maximum is 300. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.OnlyLongestMatch">
            <summary> A value indicating whether to add only the longest matching subword to the output. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DictionaryDecompounderTokenFilter.WordList">
            <summary> The list of words to match against. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DistanceScoringFunction">
            <summary> Defines a function that boosts scores based on distance from a geographic location. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DistanceScoringFunction.#ctor(System.String,System.String,System.Double,System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation},Azure.Search.Documents.Indexes.Models.DistanceScoringParameters)">
            <summary> Initializes a new instance of DistanceScoringFunction. </summary>
            <param name="type"> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </param>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </param>
            <param name="parameters"> Parameter values for the distance scoring function. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DistanceScoringFunction.Parameters">
            <summary> Parameter values for the distance scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DistanceScoringFunction.#ctor(System.String,System.Double,Azure.Search.Documents.Indexes.Models.DistanceScoringParameters)">
            <summary> Initializes a new instance of DistanceScoringFunction. </summary>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="parameters"> Parameter values for the distance scoring function. </param>
            <exception cref="T:System.ArgumentException"><paramref name="fieldName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName" /> or <paramref name="parameters" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DistanceScoringParameters">
            <summary> Provides parameter values to a distance scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DistanceScoringParameters.#ctor(System.String,System.Double)">
            <summary> Initializes a new instance of DistanceScoringParameters. </summary>
            <param name="referencePointParameter"> The name of the parameter passed in search queries to specify the reference location. </param>
            <param name="boostingDistance"> The distance in kilometers from the reference location where the boosting range ends. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="referencePointParameter" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DistanceScoringParameters.ReferencePointParameter">
            <summary> The name of the parameter passed in search queries to specify the reference location. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DistanceScoringParameters.BoostingDistance">
            <summary> The distance in kilometers from the reference location where the boosting range ends. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.DocumentExtractionSkill">
            <summary> A skill that extracts content from a file within the enrichment pipeline. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DocumentExtractionSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of DocumentExtractionSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.DocumentExtractionSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode},System.Nullable{Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of DocumentExtractionSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="parsingMode"> The parsingMode for the skill. Will be set to 'default' if not defined. </param>
            <param name="dataToExtract"> The type of data to be extracted for the skill. Will be set to 'contentAndMetadata' if not defined. </param>
            <param name="configuration"> A dictionary of configurations for the skill. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DocumentExtractionSkill.Configuration">
            <summary> A dictionary of configurations for the skill. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DocumentExtractionSkill.DataToExtract">
            <summary> The type of data to be extracted for the skill. Will be set to 'contentAndMetadata' if not defined. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.DocumentExtractionSkill.ParsingMode">
            <summary> The parsingMode for the skill. Will be set to 'default' if not defined. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilter">
            <summary> Generates n-grams of the given size(s) starting from the front or the back of an input token. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of EdgeNGramTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilter.MinGram">
            <summary>
            The minimum n-gram length. Default is 1. Must be less than the value of maxGram.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilter.MaxGram">
            <summary>
            The maximum n-gram length. Default is 2.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilter.Side">
            <summary>
            Specifies which side of the input the n-gram should be generated from. Default is <see cref="F:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilterSide.Front" />.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilterSide">
            <summary> Specifies which side of the input an n-gram should be generated from. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilterSide.Front">
            <summary> Specifies that the n-gram should be generated from the front of the input. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenFilterSide.Back">
            <summary> Specifies that the n-gram should be generated from the back of the input. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenizer">
            <summary> Tokenizes the input from an edge into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of EdgeNGramTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenizer.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.TokenCharacterKind})">
            <summary> Initializes a new instance of EdgeNGramTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="minGram"> The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram. </param>
            <param name="maxGram"> The maximum n-gram length. Default is 2. Maximum is 300. </param>
            <param name="tokenChars"> Character classes to keep in the tokens. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenizer.MinGram">
            <summary> The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenizer.MaxGram">
            <summary> The maximum n-gram length. Default is 2. Maximum is 300. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EdgeNGramTokenizer.TokenChars">
            <summary> Character classes to keep in the tokens. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ElisionTokenFilter">
            <summary> Removes elisions. For example, "l'avion" (the plane) will be converted to "avion" (plane). This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ElisionTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of ElisionTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ElisionTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of ElisionTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="articles"> The set of articles to remove. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ElisionTokenFilter.Articles">
            <summary> The set of articles to remove. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.EntityCategory">
            <summary> A string indicating what entity categories to return. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.EntityCategory" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Location">
            <summary> Entities describing a physical location. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Organization">
            <summary> Entities describing an organization. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Person">
            <summary> Entities describing a person. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Quantity">
            <summary> Entities describing a quantity. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Datetime">
            <summary> Entities describing a date and time. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Url">
            <summary> Entities describing a URL. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityCategory.Email">
            <summary> Entities describing an email address. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.op_Equality(Azure.Search.Documents.Indexes.Models.EntityCategory,Azure.Search.Documents.Indexes.Models.EntityCategory)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.EntityCategory" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.op_Inequality(Azure.Search.Documents.Indexes.Models.EntityCategory,Azure.Search.Documents.Indexes.Models.EntityCategory)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.EntityCategory" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.EntityCategory">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.EntityCategory" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.Equals(Azure.Search.Documents.Indexes.Models.EntityCategory)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityCategory.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill">
            <summary> Text analytics entity recognition. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of EntityRecognitionSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.EntityCategory},System.Nullable{Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage},System.Nullable{System.Boolean},System.Nullable{System.Double})">
            <summary> Initializes a new instance of EntityRecognitionSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="categories"> A list of entity categories that should be extracted. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
            <param name="includeTypelessEntities"> Determines whether or not to include entities which are well known but don't conform to a pre-defined type. If this configuration is not set (default), set to null or set to false, entities which don't conform to one of the pre-defined types will not be surfaced. </param>
            <param name="minimumPrecision"> A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill.IncludeTypelessEntities">
            <summary> Determines whether or not to include entities which are well known but don't conform to a pre-defined type. If this configuration is not set (default), set to null or set to false, entities which don't conform to one of the pre-defined types will not be surfaced. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill.MinimumPrecision">
            <summary> A value between 0 and 1 that be used to only include entities whose confidence score is greater than the value specified. If not set (default), or if explicitly set to null, all entities will be included. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkill.Categories">
            <summary> A list of entity categories that should be extracted. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage">
            <summary> The language codes supported for input text by EntityRecognitionSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Ar">
            <summary> Arabic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Cs">
            <summary> Czech. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.ZhHans">
            <summary> Chinese-Simplified. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.ZhHant">
            <summary> Chinese-Traditional. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Nl">
            <summary> Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.El">
            <summary> Greek. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Hu">
            <summary> Hungarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Ja">
            <summary> Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Ko">
            <summary> Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.No">
            <summary> Norwegian (Bokmaal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Pl">
            <summary> Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.PtPT">
            <summary> Portuguese (Portugal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.PtBR">
            <summary> Portuguese (Brazil). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Ru">
            <summary> Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Sv">
            <summary> Swedish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Tr">
            <summary> Turkish. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage,Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage,Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.EntityRecognitionSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.FieldMapping">
            <summary> Defines a mapping between a field in a data source and a target field in an index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FieldMapping.#ctor(System.String)">
            <summary> Initializes a new instance of FieldMapping. </summary>
            <param name="sourceFieldName"> The name of the field in the data source. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sourceFieldName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FieldMapping.#ctor(System.String,System.String,Azure.Search.Documents.Indexes.Models.FieldMappingFunction)">
            <summary> Initializes a new instance of FieldMapping. </summary>
            <param name="sourceFieldName"> The name of the field in the data source. </param>
            <param name="targetFieldName"> The name of the target field in the index. Same as the source field name by default. </param>
            <param name="mappingFunction"> A function to apply to each source field value before indexing. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FieldMapping.SourceFieldName">
            <summary> The name of the field in the data source. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FieldMapping.TargetFieldName">
            <summary> The name of the target field in the index. Same as the source field name by default. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FieldMapping.MappingFunction">
            <summary> A function to apply to each source field value before indexing. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.FieldMappingFunction">
            <summary> Represents a function that transforms a value from a data source before indexing. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FieldMappingFunction.#ctor(System.String)">
            <summary> Initializes a new instance of FieldMappingFunction. </summary>
            <param name="name"> The name of the field mapping function. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FieldMappingFunction.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of FieldMappingFunction. </summary>
            <param name="name"> The name of the field mapping function. </param>
            <param name="parameters"> A dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FieldMappingFunction.Name">
            <summary> The name of the field mapping function. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FieldMappingFunction.Parameters">
            <summary> A dictionary of parameter name/value pairs to pass to the function. Each value must be of a primitive type. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.FreshnessScoringFunction">
            <summary> Defines a function that boosts scores based on the value of a date-time field. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FreshnessScoringFunction.#ctor(System.String,System.String,System.Double,System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation},Azure.Search.Documents.Indexes.Models.FreshnessScoringParameters)">
            <summary> Initializes a new instance of FreshnessScoringFunction. </summary>
            <param name="type"> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </param>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </param>
            <param name="parameters"> Parameter values for the freshness scoring function. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FreshnessScoringFunction.Parameters">
            <summary> Parameter values for the freshness scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FreshnessScoringFunction.#ctor(System.String,System.Double,Azure.Search.Documents.Indexes.Models.FreshnessScoringParameters)">
            <summary> Initializes a new instance of FreshnessScoringFunction. </summary>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="parameters"> Parameter values for the freshness scoring function. </param>
            <exception cref="T:System.ArgumentException"><paramref name="fieldName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName" /> or <paramref name="parameters" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.FreshnessScoringParameters">
            <summary> Provides parameter values to a freshness scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.FreshnessScoringParameters.#ctor(System.TimeSpan)">
            <summary> Initializes a new instance of FreshnessScoringParameters. </summary>
            <param name="boostingDuration"> The expiration period after which boosting will stop for a particular document. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.FreshnessScoringParameters.BoostingDuration">
            <summary> The expiration period after which boosting will stop for a particular document. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.HighWaterMarkChangeDetectionPolicy">
            <summary> Defines a data change detection policy that captures changes based on the value of a high water mark column. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.HighWaterMarkChangeDetectionPolicy.#ctor(System.String)">
            <summary> Initializes a new instance of HighWaterMarkChangeDetectionPolicy. </summary>
            <param name="highWaterMarkColumnName"> The name of the high water mark column. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="highWaterMarkColumnName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.HighWaterMarkChangeDetectionPolicy.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of HighWaterMarkChangeDetectionPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data change detection policy. </param>
            <param name="highWaterMarkColumnName"> The name of the high water mark column. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.HighWaterMarkChangeDetectionPolicy.HighWaterMarkColumnName">
            <summary> The name of the high water mark column. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkill">
            <summary> A skill that analyzes image files. It extracts a rich set of visual features based on the image content. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of ImageAnalysisSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.VisualFeature},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.ImageDetail})">
            <summary> Initializes a new instance of ImageAnalysisSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
            <param name="visualFeatures"> A list of visual features. </param>
            <param name="details"> A string indicating which domain-specific details to return. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkill.VisualFeatures">
            <summary> A list of visual features. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkill.Details">
            <summary> A string indicating which domain-specific details to return. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage">
            <summary> The language codes supported for input by ImageAnalysisSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.Ja">
            <summary> Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.Pt">
            <summary> Portuguese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.Zh">
            <summary> Chinese. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage,Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage,Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageAnalysisSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ImageDetail">
            <summary> A string indicating which domain-specific details to return. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.ImageDetail" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageDetail.Celebrities">
            <summary> Details recognized as celebrities. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ImageDetail.Landmarks">
            <summary> Details recognized as landmarks. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.op_Equality(Azure.Search.Documents.Indexes.Models.ImageDetail,Azure.Search.Documents.Indexes.Models.ImageDetail)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.ImageDetail" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.op_Inequality(Azure.Search.Documents.Indexes.Models.ImageDetail,Azure.Search.Documents.Indexes.Models.ImageDetail)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.ImageDetail" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.ImageDetail">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.ImageDetail" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.Equals(Azure.Search.Documents.Indexes.Models.ImageDetail)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ImageDetail.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment">
            <summary> Specifies the environment in which the indexer should execute. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.Standard">
            <summary> Indicates that Azure Cognitive Search can determine where the indexer should execute. This is the default environment when nothing is specified and is the recommended value. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.Private">
            <summary> Indicates that the indexer should run with the environment provisioned specifically for the search service. This should only be specified as the execution environment if the indexer needs to access resources securely over shared private link resources. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.op_Equality(Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment,Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.op_Inequality(Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment,Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.Equals(Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult">
            <summary> Represents the result of an individual indexer execution. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.#ctor(Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndexerError},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndexerWarning},System.Int32,System.Int32)">
            <summary> Initializes a new instance of IndexerExecutionResult. </summary>
            <param name="status"> The outcome of this indexer execution. </param>
            <param name="errors"> The item-level indexing errors. </param>
            <param name="warnings"> The item-level indexing warnings. </param>
            <param name="itemCount"> The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed. </param>
            <param name="failedItemCount"> The number of items that failed to be indexed during this indexer execution. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="errors" /> or <paramref name="warnings" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.#ctor(Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexerError},System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexerWarning},System.Int32,System.Int32,System.String,System.String)">
            <summary> Initializes a new instance of IndexerExecutionResult. </summary>
            <param name="status"> The outcome of this indexer execution. </param>
            <param name="errorMessage"> The error message indicating the top-level error, if any. </param>
            <param name="startTime"> The start time of this indexer execution. </param>
            <param name="endTime"> The end time of this indexer execution, if the execution has already completed. </param>
            <param name="errors"> The item-level indexing errors. </param>
            <param name="warnings"> The item-level indexing warnings. </param>
            <param name="itemCount"> The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed. </param>
            <param name="failedItemCount"> The number of items that failed to be indexed during this indexer execution. </param>
            <param name="initialTrackingState"> Change tracking state with which an indexer execution started. </param>
            <param name="finalTrackingState"> Change tracking state with which an indexer execution finished. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.Status">
            <summary> The outcome of this indexer execution. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.ErrorMessage">
            <summary> The error message indicating the top-level error, if any. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.StartTime">
            <summary> The start time of this indexer execution. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.EndTime">
            <summary> The end time of this indexer execution, if the execution has already completed. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.Errors">
            <summary> The item-level indexing errors. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.Warnings">
            <summary> The item-level indexing warnings. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.ItemCount">
            <summary> The number of items that were processed during this indexer execution. This includes both successfully processed items and items where indexing was attempted but failed. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.FailedItemCount">
            <summary> The number of items that failed to be indexed during this indexer execution. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.InitialTrackingState">
            <summary> Change tracking state with which an indexer execution started. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexerExecutionResult.FinalTrackingState">
            <summary> Change tracking state with which an indexer execution finished. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus">
            <summary> Represents the status of an individual indexer execution. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus.TransientFailure">
            <summary> An indexer invocation has failed, but the failure may be transient. Indexer invocations will continue per schedule. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus.Success">
            <summary> Indexer execution completed successfully. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus.InProgress">
            <summary> Indexer execution is in progress. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerExecutionStatus.Reset">
            <summary> Indexer has been reset. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexerStatus">
            <summary> Represents the overall indexer status. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerStatus.Unknown">
            <summary> Indicates that the indexer is in an unknown state. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerStatus.Error">
            <summary> Indicates that the indexer experienced an error that cannot be corrected without human intervention. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.IndexerStatus.Running">
            <summary> Indicates that the indexer is running normally. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexingParameters">
            <summary> Represents parameters for indexer execution. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParameters.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration)">
            <summary> Initializes a new instance of IndexingParameters. </summary>
            <param name="batchSize"> The number of items that are read from the data source and indexed as a single batch in order to improve performance. The default depends on the data source type. </param>
            <param name="maxFailedItems"> The maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0. </param>
            <param name="maxFailedItemsPerBatch"> The maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0. </param>
            <param name="indexingParametersConfiguration"> A dictionary of indexer-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParameters.BatchSize">
            <summary> The number of items that are read from the data source and indexed as a single batch in order to improve performance. The default depends on the data source type. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParameters.MaxFailedItems">
            <summary> The maximum number of items that can fail indexing for indexer execution to still be considered successful. -1 means no limit. Default is 0. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParameters.MaxFailedItemsPerBatch">
            <summary> The maximum number of items in a single batch that can fail indexing for the batch to still be considered successful. -1 means no limit. Default is 0. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParameters.#ctor">
            <summary> Initializes a new instance of IndexingParameters. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParameters.Configuration">
            <summary>
            A dictionary of indexer-specific configuration properties.
            Each name is the name of a <see href="https://docs.microsoft.com/rest/api/searchservice/create-indexer#parameters">specific property</see>.
            Each value must be of a primitive type.
            Use <see cref="P:Azure.Search.Documents.Indexes.Models.IndexingParameters.IndexingParametersConfiguration" /> instead to set well-known properties intuitively.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParameters.IndexingParametersConfiguration">
            <summary>
            Indexer-specific configuration properties.
            Each value must be of a primitive type.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParameters.ConfigurationAdapter.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParameters.ConfigurationAdapterItemCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration">
            <summary> A dictionary of indexer-specific configuration properties. Each name is the name of a specific property. Each value must be of a primitive type. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.#ctor">
            <summary> Initializes a new instance of IndexingParametersConfiguration. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.#ctor(System.Nullable{Azure.Search.Documents.Indexes.Models.BlobIndexerParsingMode},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{Azure.Search.Documents.Indexes.Models.BlobIndexerDataToExtract},System.Nullable{Azure.Search.Documents.Indexes.Models.BlobIndexerImageAction},System.Nullable{System.Boolean},System.Nullable{Azure.Search.Documents.Indexes.Models.BlobIndexerPdfTextRotationAlgorithm},System.Nullable{Azure.Search.Documents.Indexes.Models.IndexerExecutionEnvironment},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of IndexingParametersConfiguration. </summary>
            <param name="parsingMode"> Represents the parsing mode for indexing from an Azure blob data source. </param>
            <param name="excludedFileNameExtensions"> Comma-delimited list of filename extensions to ignore when processing from Azure blob storage.  For example, you could exclude ".png, .mp4" to skip over those files during indexing. </param>
            <param name="indexedFileNameExtensions"> Comma-delimited list of filename extensions to select when processing from Azure blob storage.  For example, you could focus indexing on specific application files ".docx, .pptx, .msg" to specifically include those file types. </param>
            <param name="failOnUnsupportedContentType"> For Azure blobs, set to false if you want to continue indexing when an unsupported content type is encountered, and you don't know all the content types (file extensions) in advance. </param>
            <param name="failOnUnprocessableDocument"> For Azure blobs, set to false if you want to continue indexing if a document fails indexing. </param>
            <param name="indexStorageMetadataOnlyForOversizedDocuments"> For Azure blobs, set this property to true to still index storage metadata for blob content that is too large to process. Oversized blobs are treated as errors by default. For limits on blob size, see https://docs.microsoft.com/azure/search/search-limits-quotas-capacity. </param>
            <param name="delimitedTextHeaders"> For CSV blobs, specifies a comma-delimited list of column headers, useful for mapping source fields to destination fields in an index. </param>
            <param name="delimitedTextDelimiter"> For CSV blobs, specifies the end-of-line single-character delimiter for CSV files where each line starts a new document (for example, "|"). </param>
            <param name="firstLineContainsHeaders"> For CSV blobs, indicates that the first (non-blank) line of each blob contains headers. </param>
            <param name="documentRoot"> For JSON arrays, given a structured or semi-structured document, you can specify a path to the array using this property. </param>
            <param name="dataToExtract"> Specifies the data to extract from Azure blob storage and tells the indexer which data to extract from image content when "imageAction" is set to a value other than "none".  This applies to embedded image content in a .PDF or other application, or image files such as .jpg and .png, in Azure blobs. </param>
            <param name="imageAction"> Determines how to process embedded images and image files in Azure blob storage.  Setting the "imageAction" configuration to any value other than "none" requires that a skillset also be attached to that indexer. </param>
            <param name="allowSkillsetToReadFileData"> If true, will create a path //document//file_data that is an object representing the original file data downloaded from your blob data source.  This allows you to pass the original file data to a custom skill for processing within the enrichment pipeline, or to the Document Extraction skill. </param>
            <param name="pdfTextRotationAlgorithm"> Determines algorithm for text extraction from PDF files in Azure blob storage. </param>
            <param name="executionEnvironment"> Specifies the environment in which the indexer should execute. </param>
            <param name="queryTimeout"> Increases the timeout beyond the 5-minute default for Azure SQL database data sources, specified in the format "hh:mm:ss". </param>
            <param name="additionalProperties"> Additional Properties. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.ParsingMode">
            <summary> Represents the parsing mode for indexing from an Azure blob data source. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.ExcludedFileNameExtensions">
            <summary> Comma-delimited list of filename extensions to ignore when processing from Azure blob storage.  For example, you could exclude ".png, .mp4" to skip over those files during indexing. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.IndexedFileNameExtensions">
            <summary> Comma-delimited list of filename extensions to select when processing from Azure blob storage.  For example, you could focus indexing on specific application files ".docx, .pptx, .msg" to specifically include those file types. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.FailOnUnsupportedContentType">
            <summary> For Azure blobs, set to false if you want to continue indexing when an unsupported content type is encountered, and you don't know all the content types (file extensions) in advance. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.FailOnUnprocessableDocument">
            <summary> For Azure blobs, set to false if you want to continue indexing if a document fails indexing. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.IndexStorageMetadataOnlyForOversizedDocuments">
            <summary> For Azure blobs, set this property to true to still index storage metadata for blob content that is too large to process. Oversized blobs are treated as errors by default. For limits on blob size, see https://docs.microsoft.com/azure/search/search-limits-quotas-capacity. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.DelimitedTextHeaders">
            <summary> For CSV blobs, specifies a comma-delimited list of column headers, useful for mapping source fields to destination fields in an index. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.DelimitedTextDelimiter">
            <summary> For CSV blobs, specifies the end-of-line single-character delimiter for CSV files where each line starts a new document (for example, "|"). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.FirstLineContainsHeaders">
            <summary> For CSV blobs, indicates that the first (non-blank) line of each blob contains headers. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.DocumentRoot">
            <summary> For JSON arrays, given a structured or semi-structured document, you can specify a path to the array using this property. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.DataToExtract">
            <summary> Specifies the data to extract from Azure blob storage and tells the indexer which data to extract from image content when "imageAction" is set to a value other than "none".  This applies to embedded image content in a .PDF or other application, or image files such as .jpg and .png, in Azure blobs. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.ImageAction">
            <summary> Determines how to process embedded images and image files in Azure blob storage.  Setting the "imageAction" configuration to any value other than "none" requires that a skillset also be attached to that indexer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.AllowSkillsetToReadFileData">
            <summary> If true, will create a path //document//file_data that is an object representing the original file data downloaded from your blob data source.  This allows you to pass the original file data to a custom skill for processing within the enrichment pipeline, or to the Document Extraction skill. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.PdfTextRotationAlgorithm">
            <summary> Determines algorithm for text extraction from PDF files in Azure blob storage. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.ExecutionEnvironment">
            <summary> Specifies the environment in which the indexer should execute. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.QueryTimeout">
            <summary>
            Increases the timeout beyond the 5-minute default for Azure SQL database data sources.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.Reset">
            <summary>
            Sets all well-known properties to null and clears <see cref="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.AdditionalProperties" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.WellKnownProperties">
            <summary>
            Gets a collection of properties declared by the model, along with getters and setters.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.TryGetValue(System.String,System.Object@)">
            <summary>Gets the value associated with the specified key.</summary><param name="key">The key whose value to get.</param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param><returns><see langword="true" /> if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.ContainsKey(System.String)">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</summary><param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param><returns><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, <see langword="false" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.Keys">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.Add(System.String,System.Object)">
            <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><param name="key">The object to use as the key of the element to add.</param><param name="value">The object to use as the value of the element to add.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.Remove(System.String)">
            <summary>Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><param name="key">The key of the element to remove.</param><returns><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.  This method also returns <see langword="false" /> if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.Item(System.String)">
            <summary>Gets or sets the element with the specified key.</summary><param name="key">The key of the element to get or set.</param><returns>The element with the specified key.</returns><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is <see langword="null" />.</exception><exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.IndexingSchedule">
            <summary> Represents a schedule for indexer execution. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingSchedule.#ctor(System.TimeSpan)">
            <summary> Initializes a new instance of IndexingSchedule. </summary>
            <param name="interval"> The interval of time between indexer executions. </param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingSchedule.#ctor(System.TimeSpan,System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of IndexingSchedule. </summary>
            <param name="interval"> The interval of time between indexer executions. </param>
            <param name="startTime"> The time when an indexer should start running. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingSchedule.Interval">
            <summary> The interval of time between indexer executions. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingSchedule.StartTime">
            <summary> The time when an indexer should start running. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry">
            <summary> Input field mapping for a skill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry.#ctor(System.String)">
            <summary> Initializes a new instance of InputFieldMappingEntry. </summary>
            <param name="name"> The name of the input. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry})">
            <summary> Initializes a new instance of InputFieldMappingEntry. </summary>
            <param name="name"> The name of the input. </param>
            <param name="source"> The source of the input. </param>
            <param name="sourceContext"> The source context used for selecting recursive inputs. </param>
            <param name="inputs"> The recursive inputs used when creating a complex type. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry.Name">
            <summary> The name of the input. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry.Source">
            <summary> The source of the input. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry.SourceContext">
            <summary> The source context used for selecting recursive inputs. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry.Inputs">
            <summary> The recursive inputs used when creating a complex type. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KeepTokenFilter">
            <summary> A token filter that only keeps tokens with text contained in a specified list of words. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeepTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of KeepTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="keepWords"> The list of words to keep. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="keepWords" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeepTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of KeepTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="keepWords"> The list of words to keep. </param>
            <param name="lowerCaseKeepWords"> A value indicating whether to lower case all words first. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeepTokenFilter.LowerCaseKeepWords">
            <summary> A value indicating whether to lower case all words first. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeepTokenFilter.KeepWords">
            <summary> The list of words to keep. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkill">
            <summary> A skill that uses text analytics for key phrase extraction. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of KeyPhraseExtractionSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage},System.Nullable{System.Int32},System.String)">
            <summary> Initializes a new instance of KeyPhraseExtractionSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
            <param name="maxKeyPhraseCount"> A number indicating how many key phrases to return. If absent, all identified key phrases will be returned. </param>
            <param name="modelVersion"> The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkill.MaxKeyPhraseCount">
            <summary> A number indicating how many key phrases to return. If absent, all identified key phrases will be returned. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkill.ModelVersion">
            <summary> The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage">
            <summary> The language codes supported for input text by KeyPhraseExtractionSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Nl">
            <summary> Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Ja">
            <summary> Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Ko">
            <summary> Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.No">
            <summary> Norwegian (Bokmaal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Pl">
            <summary> Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.PtPT">
            <summary> Portuguese (Portugal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.PtBR">
            <summary> Portuguese (Brazil). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Ru">
            <summary> Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Sv">
            <summary> Swedish. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage,Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage,Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeyPhraseExtractionSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KeywordMarkerTokenFilter">
            <summary> Marks terms as keywords. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeywordMarkerTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of KeywordMarkerTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="keywords"> A list of words to mark as keywords. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="keywords" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeywordMarkerTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of KeywordMarkerTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="keywords"> A list of words to mark as keywords. </param>
            <param name="ignoreCase"> A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeywordMarkerTokenFilter.IgnoreCase">
            <summary> A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeywordMarkerTokenFilter.Keywords">
            <summary> A list of words to mark as keywords. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KeywordTokenizer">
            <summary> Emits the entire input as a single token. This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KeywordTokenizer.#ctor(System.String)">
            <summary>
            Initializes a new instance of KeywordTokenizer.
            </summary>
            <param name="name">
            The name of the tokenizer. It must only contain letters, digits, spaces,
            dashes or underscores, can only start and end with alphanumeric characters,
            and is limited to 128 characters.
            </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeywordTokenizer.BufferSize">
            <summary>
            The read buffer size in bytes. Default is 256.
            Setting this property on new instances of <see cref="T:Azure.Search.Documents.Indexes.Models.KeywordTokenizer" /> may result in an error
            when sending new requests to the Azure Cognitive Search service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KeywordTokenizer.MaxTokenLength">
            <summary>
            The maximum token length. Default is 256.
            Tokens longer than the maximum length are split.
            The maximum token length that can be used is 300 characters.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStore">
            <summary> Definition of additional projections to azure blob, table, or files, of enriched data. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.#ctor(System.String,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection})">
            <summary> Initializes a new instance of KnowledgeStore. </summary>
            <param name="storageConnectionString"> The connection string to the storage account projections will be stored in. </param>
            <param name="projections"> A list of additional projections to perform during indexing. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="storageConnectionString" /> or <paramref name="projections" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStore.#ctor(System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection})">
            <summary> Initializes a new instance of KnowledgeStore. </summary>
            <param name="storageConnectionString"> The connection string to the storage account projections will be stored in. </param>
            <param name="projections"> A list of additional projections to perform during indexing. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.StorageConnectionString">
            <summary> The connection string to the storage account projections will be stored in. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStore.Projections">
            <summary> A list of additional projections to perform during indexing. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStoreFileProjectionSelector">
            <summary> Projection definition for what data to store in Azure Files. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreFileProjectionSelector.#ctor(System.String)">
            <summary> Initializes a new instance of KnowledgeStoreFileProjectionSelector. </summary>
            <param name="storageContainer"> Blob container to store projections in. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="storageContainer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreFileProjectionSelector.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.String)">
            <summary> Initializes a new instance of KnowledgeStoreFileProjectionSelector. </summary>
            <param name="referenceKeyName"> Name of reference key to different projection. </param>
            <param name="generatedKeyName"> Name of generated key to store projection under. </param>
            <param name="source"> Source data to project. </param>
            <param name="sourceContext"> Source context for complex projections. </param>
            <param name="inputs"> Nested inputs for complex projections. </param>
            <param name="storageContainer"> Blob container to store projections in. </param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStoreObjectProjectionSelector">
            <summary> Projection definition for what data to store in Azure Blob. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreObjectProjectionSelector.#ctor(System.String)">
            <summary> Initializes a new instance of KnowledgeStoreObjectProjectionSelector. </summary>
            <param name="storageContainer"> Blob container to store projections in. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="storageContainer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreObjectProjectionSelector.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.String)">
            <summary> Initializes a new instance of KnowledgeStoreObjectProjectionSelector. </summary>
            <param name="referenceKeyName"> Name of reference key to different projection. </param>
            <param name="generatedKeyName"> Name of generated key to store projection under. </param>
            <param name="source"> Source data to project. </param>
            <param name="sourceContext"> Source context for complex projections. </param>
            <param name="inputs"> Nested inputs for complex projections. </param>
            <param name="storageContainer"> Blob container to store projections in. </param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection">
            <summary> Container object for various projection selectors. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection.#ctor">
            <summary> Initializes a new instance of KnowledgeStoreProjection. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection.#ctor(System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.KnowledgeStoreTableProjectionSelector},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.KnowledgeStoreObjectProjectionSelector},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.KnowledgeStoreFileProjectionSelector})">
            <summary> Initializes a new instance of KnowledgeStoreProjection. </summary>
            <param name="tables"> Projections to Azure Table storage. </param>
            <param name="objects"> Projections to Azure Blob storage. </param>
            <param name="files"> Projections to Azure File storage. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection.Tables">
            <summary> Projections to Azure Table storage. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection.Objects">
            <summary> Projections to Azure Blob storage. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjection.Files">
            <summary> Projections to Azure File storage. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector">
            <summary> Abstract class to share properties between concrete selectors. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.#ctor">
            <summary> Initializes a new instance of KnowledgeStoreProjectionSelector. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry})">
            <summary> Initializes a new instance of KnowledgeStoreProjectionSelector. </summary>
            <param name="referenceKeyName"> Name of reference key to different projection. </param>
            <param name="generatedKeyName"> Name of generated key to store projection under. </param>
            <param name="source"> Source data to project. </param>
            <param name="sourceContext"> Source context for complex projections. </param>
            <param name="inputs"> Nested inputs for complex projections. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.ReferenceKeyName">
            <summary> Name of reference key to different projection. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.GeneratedKeyName">
            <summary> Name of generated key to store projection under. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.Source">
            <summary> Source data to project. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.SourceContext">
            <summary> Source context for complex projections. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreProjectionSelector.Inputs">
            <summary> Nested inputs for complex projections. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStoreStorageProjectionSelector">
            <summary> Abstract class to share properties between concrete selectors. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreStorageProjectionSelector.#ctor(System.String)">
            <summary> Initializes a new instance of KnowledgeStoreStorageProjectionSelector. </summary>
            <param name="storageContainer"> Blob container to store projections in. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="storageContainer" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreStorageProjectionSelector.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.String)">
            <summary> Initializes a new instance of KnowledgeStoreStorageProjectionSelector. </summary>
            <param name="referenceKeyName"> Name of reference key to different projection. </param>
            <param name="generatedKeyName"> Name of generated key to store projection under. </param>
            <param name="source"> Source data to project. </param>
            <param name="sourceContext"> Source context for complex projections. </param>
            <param name="inputs"> Nested inputs for complex projections. </param>
            <param name="storageContainer"> Blob container to store projections in. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreStorageProjectionSelector.StorageContainer">
            <summary> Blob container to store projections in. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.KnowledgeStoreTableProjectionSelector">
            <summary> Description for what data to store in Azure Tables. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreTableProjectionSelector.#ctor(System.String)">
            <summary> Initializes a new instance of KnowledgeStoreTableProjectionSelector. </summary>
            <param name="tableName"> Name of the Azure table to store projected data in. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tableName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.KnowledgeStoreTableProjectionSelector.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.String)">
            <summary> Initializes a new instance of KnowledgeStoreTableProjectionSelector. </summary>
            <param name="referenceKeyName"> Name of reference key to different projection. </param>
            <param name="generatedKeyName"> Name of generated key to store projection under. </param>
            <param name="source"> Source data to project. </param>
            <param name="sourceContext"> Source context for complex projections. </param>
            <param name="inputs"> Nested inputs for complex projections. </param>
            <param name="tableName"> Name of the Azure table to store projected data in. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.KnowledgeStoreTableProjectionSelector.TableName">
            <summary> Name of the Azure table to store projected data in. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LanguageDetectionSkill">
            <summary> A skill that detects the language of input text and reports a single language code for every document submitted on the request. The language code is paired with a score indicating the confidence of the analysis. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LanguageDetectionSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of LanguageDetectionSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LanguageDetectionSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.String,System.String)">
            <summary> Initializes a new instance of LanguageDetectionSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultCountryHint"> A country code to use as a hint to the language detection model if it cannot disambiguate the language. </param>
            <param name="modelVersion"> The version of the model to use when calling the Text Analytics service. It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LanguageDetectionSkill.DefaultCountryHint">
            <summary> A country code to use as a hint to the language detection model if it cannot disambiguate the language. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LanguageDetectionSkill.ModelVersion">
            <summary> The version of the model to use when calling the Text Analytics service.
            It will default to the latest available when not specified. We recommend you do not specify this value unless absolutely necessary.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LengthTokenFilter">
            <summary> Removes words that are too long or too short. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LengthTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of LengthTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LengthTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of LengthTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="minLength"> The minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of max. </param>
            <param name="maxLength"> The maximum length in characters. Default and maximum is 300. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LengthTokenFilter.MinLength">
            <summary>
            Gets the minimum length in characters. Default is 0. Maximum is 300. Must be less than the value of <see cref="P:Azure.Search.Documents.Indexes.Models.LengthTokenFilter.MinLength" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LengthTokenFilter.MaxLength">
            <summary>
            Gets the maximum length in characters. Default and maximum is 300.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzer">
            <summary> Base type for analyzers. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzer.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of LexicalAnalyzer. </summary>
            <param name="oDataType"> Identifies the concrete type of the analyzer. </param>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzer.ODataType">
            <summary> Identifies the concrete type of the analyzer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzer.Name">
            <summary> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzer.#ctor(System.String)">
            <summary> Initializes a new instance of LexicalAnalyzer. </summary>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName">
            <summary> Defines the names of all text analyzers supported by Azure Cognitive Search. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ArMicrosoft">
            <summary> Microsoft analyzer for Arabic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ArLucene">
            <summary> Lucene analyzer for Arabic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HyLucene">
            <summary> Lucene analyzer for Armenian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.BnMicrosoft">
            <summary> Microsoft analyzer for Bangla. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.EuLucene">
            <summary> Lucene analyzer for Basque. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.BgMicrosoft">
            <summary> Microsoft analyzer for Bulgarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.BgLucene">
            <summary> Lucene analyzer for Bulgarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.CaMicrosoft">
            <summary> Microsoft analyzer for Catalan. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.CaLucene">
            <summary> Lucene analyzer for Catalan. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ZhHansMicrosoft">
            <summary> Microsoft analyzer for Chinese (Simplified). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ZhHansLucene">
            <summary> Lucene analyzer for Chinese (Simplified). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ZhHantMicrosoft">
            <summary> Microsoft analyzer for Chinese (Traditional). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ZhHantLucene">
            <summary> Lucene analyzer for Chinese (Traditional). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HrMicrosoft">
            <summary> Microsoft analyzer for Croatian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.CsMicrosoft">
            <summary> Microsoft analyzer for Czech. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.CsLucene">
            <summary> Lucene analyzer for Czech. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.DaMicrosoft">
            <summary> Microsoft analyzer for Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.DaLucene">
            <summary> Lucene analyzer for Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.NlMicrosoft">
            <summary> Microsoft analyzer for Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.NlLucene">
            <summary> Lucene analyzer for Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.EnMicrosoft">
            <summary> Microsoft analyzer for English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.EnLucene">
            <summary> Lucene analyzer for English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.EtMicrosoft">
            <summary> Microsoft analyzer for Estonian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.FiMicrosoft">
            <summary> Microsoft analyzer for Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.FiLucene">
            <summary> Lucene analyzer for Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.FrMicrosoft">
            <summary> Microsoft analyzer for French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.FrLucene">
            <summary> Lucene analyzer for French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.GlLucene">
            <summary> Lucene analyzer for Galician. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.DeMicrosoft">
            <summary> Microsoft analyzer for German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.DeLucene">
            <summary> Lucene analyzer for German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ElMicrosoft">
            <summary> Microsoft analyzer for Greek. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ElLucene">
            <summary> Lucene analyzer for Greek. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.GuMicrosoft">
            <summary> Microsoft analyzer for Gujarati. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HeMicrosoft">
            <summary> Microsoft analyzer for Hebrew. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HiMicrosoft">
            <summary> Microsoft analyzer for Hindi. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HiLucene">
            <summary> Lucene analyzer for Hindi. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HuMicrosoft">
            <summary> Microsoft analyzer for Hungarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.HuLucene">
            <summary> Lucene analyzer for Hungarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.IsMicrosoft">
            <summary> Microsoft analyzer for Icelandic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.IdMicrosoft">
            <summary> Microsoft analyzer for Indonesian (Bahasa). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.IdLucene">
            <summary> Lucene analyzer for Indonesian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.GaLucene">
            <summary> Lucene analyzer for Irish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ItMicrosoft">
            <summary> Microsoft analyzer for Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ItLucene">
            <summary> Lucene analyzer for Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.JaMicrosoft">
            <summary> Microsoft analyzer for Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.JaLucene">
            <summary> Lucene analyzer for Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.KnMicrosoft">
            <summary> Microsoft analyzer for Kannada. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.KoMicrosoft">
            <summary> Microsoft analyzer for Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.KoLucene">
            <summary> Lucene analyzer for Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.LvMicrosoft">
            <summary> Microsoft analyzer for Latvian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.LvLucene">
            <summary> Lucene analyzer for Latvian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.LtMicrosoft">
            <summary> Microsoft analyzer for Lithuanian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.MlMicrosoft">
            <summary> Microsoft analyzer for Malayalam. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.MsMicrosoft">
            <summary> Microsoft analyzer for Malay (Latin). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.MrMicrosoft">
            <summary> Microsoft analyzer for Marathi. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.NbMicrosoft">
            <summary> Microsoft analyzer for Norwegian (Bokmål). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.NoLucene">
            <summary> Lucene analyzer for Norwegian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.FaLucene">
            <summary> Lucene analyzer for Persian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PlMicrosoft">
            <summary> Microsoft analyzer for Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PlLucene">
            <summary> Lucene analyzer for Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PtBrMicrosoft">
            <summary> Microsoft analyzer for Portuguese (Brazil). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PtBrLucene">
            <summary> Lucene analyzer for Portuguese (Brazil). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PtPtMicrosoft">
            <summary> Microsoft analyzer for Portuguese (Portugal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PtPtLucene">
            <summary> Lucene analyzer for Portuguese (Portugal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.PaMicrosoft">
            <summary> Microsoft analyzer for Punjabi. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.RoMicrosoft">
            <summary> Microsoft analyzer for Romanian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.RoLucene">
            <summary> Lucene analyzer for Romanian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.RuMicrosoft">
            <summary> Microsoft analyzer for Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.RuLucene">
            <summary> Lucene analyzer for Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.SrCyrillicMicrosoft">
            <summary> Microsoft analyzer for Serbian (Cyrillic). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.SrLatinMicrosoft">
            <summary> Microsoft analyzer for Serbian (Latin). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.SkMicrosoft">
            <summary> Microsoft analyzer for Slovak. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.SlMicrosoft">
            <summary> Microsoft analyzer for Slovenian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.EsMicrosoft">
            <summary> Microsoft analyzer for Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.EsLucene">
            <summary> Lucene analyzer for Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.SvMicrosoft">
            <summary> Microsoft analyzer for Swedish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.SvLucene">
            <summary> Lucene analyzer for Swedish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.TaMicrosoft">
            <summary> Microsoft analyzer for Tamil. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.TeMicrosoft">
            <summary> Microsoft analyzer for Telugu. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ThMicrosoft">
            <summary> Microsoft analyzer for Thai. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ThLucene">
            <summary> Lucene analyzer for Thai. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.TrMicrosoft">
            <summary> Microsoft analyzer for Turkish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.TrLucene">
            <summary> Lucene analyzer for Turkish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.UkMicrosoft">
            <summary> Microsoft analyzer for Ukrainian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.UrMicrosoft">
            <summary> Microsoft analyzer for Urdu. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ViMicrosoft">
            <summary> Microsoft analyzer for Vietnamese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.StandardLucene">
            <summary> Standard Lucene analyzer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.StandardAsciiFoldingLucene">
            <summary> Standard ASCII Folding Lucene analyzer. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Keyword">
            <summary> Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Pattern">
            <summary> Flexibly separates text into terms via a regular expression pattern. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Simple">
            <summary> Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Stop">
            <summary> Divides text at non-letters; Applies the lowercase and stopword token filters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Whitespace">
            <summary> An analyzer that uses the whitespace tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.op_Equality(Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName,Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.op_Inequality(Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName,Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Equals(Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values">
            <summary>
            The values of all declared <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName" /> properties as string constants.
            These can be used in <see cref="T:Azure.Search.Documents.Indexes.SearchableFieldAttribute" /> and anywhere else constants are required.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ArMicrosoft">
            <summary> Microsoft analyzer for Arabic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ArLucene">
            <summary> Lucene analyzer for Arabic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HyLucene">
            <summary> Lucene analyzer for Armenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.BnMicrosoft">
            <summary> Microsoft analyzer for Bangla. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.EuLucene">
            <summary> Lucene analyzer for Basque. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.BgMicrosoft">
            <summary> Microsoft analyzer for Bulgarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.BgLucene">
            <summary> Lucene analyzer for Bulgarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.CaMicrosoft">
            <summary> Microsoft analyzer for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.CaLucene">
            <summary> Lucene analyzer for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ZhHansMicrosoft">
            <summary> Microsoft analyzer for Chinese (Simplified). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ZhHansLucene">
            <summary> Lucene analyzer for Chinese (Simplified). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ZhHantMicrosoft">
            <summary> Microsoft analyzer for Chinese (Traditional). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ZhHantLucene">
            <summary> Lucene analyzer for Chinese (Traditional). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HrMicrosoft">
            <summary> Microsoft analyzer for Croatian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.CsMicrosoft">
            <summary> Microsoft analyzer for Czech. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.CsLucene">
            <summary> Lucene analyzer for Czech. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.DaMicrosoft">
            <summary> Microsoft analyzer for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.DaLucene">
            <summary> Lucene analyzer for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.NlMicrosoft">
            <summary> Microsoft analyzer for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.NlLucene">
            <summary> Lucene analyzer for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.EnMicrosoft">
            <summary> Microsoft analyzer for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.EnLucene">
            <summary> Lucene analyzer for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.EtMicrosoft">
            <summary> Microsoft analyzer for Estonian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.FiMicrosoft">
            <summary> Microsoft analyzer for Finnish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.FiLucene">
            <summary> Lucene analyzer for Finnish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.FrMicrosoft">
            <summary> Microsoft analyzer for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.FrLucene">
            <summary> Lucene analyzer for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.GlLucene">
            <summary> Lucene analyzer for Galician. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.DeMicrosoft">
            <summary> Microsoft analyzer for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.DeLucene">
            <summary> Lucene analyzer for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ElMicrosoft">
            <summary> Microsoft analyzer for Greek. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ElLucene">
            <summary> Lucene analyzer for Greek. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.GuMicrosoft">
            <summary> Microsoft analyzer for Gujarati. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HeMicrosoft">
            <summary> Microsoft analyzer for Hebrew. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HiMicrosoft">
            <summary> Microsoft analyzer for Hindi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HiLucene">
            <summary> Lucene analyzer for Hindi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HuMicrosoft">
            <summary> Microsoft analyzer for Hungarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.HuLucene">
            <summary> Lucene analyzer for Hungarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.IsMicrosoft">
            <summary> Microsoft analyzer for Icelandic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.IdMicrosoft">
            <summary> Microsoft analyzer for Indonesian (Bahasa). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.IdLucene">
            <summary> Lucene analyzer for Indonesian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.GaLucene">
            <summary> Lucene analyzer for Irish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ItMicrosoft">
            <summary> Microsoft analyzer for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ItLucene">
            <summary> Lucene analyzer for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.JaMicrosoft">
            <summary> Microsoft analyzer for Japanese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.JaLucene">
            <summary> Lucene analyzer for Japanese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.KnMicrosoft">
            <summary> Microsoft analyzer for Kannada. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.KoMicrosoft">
            <summary> Microsoft analyzer for Korean. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.KoLucene">
            <summary> Lucene analyzer for Korean. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.LvMicrosoft">
            <summary> Microsoft analyzer for Latvian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.LvLucene">
            <summary> Lucene analyzer for Latvian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.LtMicrosoft">
            <summary> Microsoft analyzer for Lithuanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.MlMicrosoft">
            <summary> Microsoft analyzer for Malayalam. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.MsMicrosoft">
            <summary> Microsoft analyzer for Malay (Latin). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.MrMicrosoft">
            <summary> Microsoft analyzer for Marathi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.NbMicrosoft">
            <summary> Microsoft analyzer for Norwegian (Bokmål). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.NoLucene">
            <summary> Lucene analyzer for Norwegian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.FaLucene">
            <summary> Lucene analyzer for Persian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PlMicrosoft">
            <summary> Microsoft analyzer for Polish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PlLucene">
            <summary> Lucene analyzer for Polish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PtBrMicrosoft">
            <summary> Microsoft analyzer for Portuguese (Brazil). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PtBrLucene">
            <summary> Lucene analyzer for Portuguese (Brazil). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PtPtMicrosoft">
            <summary> Microsoft analyzer for Portuguese (Portugal). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PtPtLucene">
            <summary> Lucene analyzer for Portuguese (Portugal). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.PaMicrosoft">
            <summary> Microsoft analyzer for Punjabi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.RoMicrosoft">
            <summary> Microsoft analyzer for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.RoLucene">
            <summary> Lucene analyzer for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.RuMicrosoft">
            <summary> Microsoft analyzer for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.RuLucene">
            <summary> Lucene analyzer for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.SrCyrillicMicrosoft">
            <summary> Microsoft analyzer for Serbian (Cyrillic). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.SrLatinMicrosoft">
            <summary> Microsoft analyzer for Serbian (Latin). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.SkMicrosoft">
            <summary> Microsoft analyzer for Slovak. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.SlMicrosoft">
            <summary> Microsoft analyzer for Slovenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.EsMicrosoft">
            <summary> Microsoft analyzer for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.EsLucene">
            <summary> Lucene analyzer for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.SvMicrosoft">
            <summary> Microsoft analyzer for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.SvLucene">
            <summary> Lucene analyzer for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.TaMicrosoft">
            <summary> Microsoft analyzer for Tamil. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.TeMicrosoft">
            <summary> Microsoft analyzer for Telugu. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ThMicrosoft">
            <summary> Microsoft analyzer for Thai. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ThLucene">
            <summary> Lucene analyzer for Thai. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.TrMicrosoft">
            <summary> Microsoft analyzer for Turkish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.TrLucene">
            <summary> Lucene analyzer for Turkish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.UkMicrosoft">
            <summary> Microsoft analyzer for Ukrainian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.UrMicrosoft">
            <summary> Microsoft analyzer for Urdu. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.ViMicrosoft">
            <summary> Microsoft analyzer for Vietnamese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.StandardLucene">
            <summary> Standard Lucene analyzer. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.StandardAsciiFoldingLucene">
            <summary> Standard ASCII Folding Lucene analyzer. See <see href="https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#Analyzers">Add custom analyzers to string fields in an Azure Cognitive Search index</see>. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.Keyword">
            <summary> Treats the entire content of a field as a single token. This is useful for data like zip codes, ids, and some product names. See <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordAnalyzer.html">KeywordAnalyzer (Lucene API)</see>. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.Pattern">
            <summary> Flexibly separates text into terms via a regular expression pattern. See <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/PatternAnalyzer.html">PatternAnalyzer (Lucene API)</see>. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.Simple">
            <summary> Divides text at non-letters and converts them to lower case. See <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/SimpleAnalyzer.html">SimpleAnalyzer (Lucene API)</see>. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.Stop">
            <summary> Divides text at non-letters; Applies the lowercase and stopword token filters. See <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopAnalyzer.html">StopAnalyzer (Lucene API)</see>. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values.Whitespace">
            <summary> An analyzer that uses the whitespace tokenizer. See <see href="http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceAnalyzer.html">WhitespaceAnalyzer (Lucene API)</see>. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizer">
            <summary> Base type for tokenizers. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizer.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of LexicalTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizer.ODataType">
            <summary> Identifies the concrete type of the tokenizer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizer.Name">
            <summary> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of LexicalTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName">
            <summary> Defines the names of all tokenizers supported by Azure Cognitive Search. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Classic">
            <summary> Grammar-based tokenizer that is suitable for processing most European-language documents. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.EdgeNGram">
            <summary> Tokenizes the input from an edge into n-grams of the given size(s). See https://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Keyword">
            <summary> Emits the entire input as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/KeywordTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Letter">
            <summary> Divides text at non-letters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LetterTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Lowercase">
            <summary> Divides text at non-letters and converts them to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.MicrosoftLanguageTokenizer">
            <summary> Divides text using language-specific rules. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.MicrosoftLanguageStemmingTokenizer">
            <summary> Divides text using language-specific rules and reduces words to their base forms. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.NGram">
            <summary> Tokenizes the input into n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.PathHierarchy">
            <summary> Tokenizer for path-like hierarchies. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/path/PathHierarchyTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Pattern">
            <summary> Tokenizer that uses regex pattern matching to construct distinct tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/pattern/PatternTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Standard">
            <summary> Standard Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/StandardTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.UaxUrlEmail">
            <summary> Tokenizes urls and emails as one token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/UAX29URLEmailTokenizer.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Whitespace">
            <summary> Divides text at whitespace. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/WhitespaceTokenizer.html. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Equality(Azure.Search.Documents.Indexes.Models.LexicalTokenizerName,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Inequality(Azure.Search.Documents.Indexes.Models.LexicalTokenizerName,Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.LexicalTokenizerName">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.Equals(Azure.Search.Documents.Indexes.Models.LexicalTokenizerName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LexicalTokenizerName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LimitTokenFilter">
            <summary> Limits the number of tokens while indexing. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LimitTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of LimitTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LimitTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of LimitTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxTokenCount"> The maximum number of tokens to produce. Default is 1. </param>
            <param name="consumeAllTokens"> A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LimitTokenFilter.MaxTokenCount">
            <summary> The maximum number of tokens to produce. Default is 1. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LimitTokenFilter.ConsumeAllTokens">
            <summary> A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ListDataSourcesResult">
            <summary> Response from a List Datasources request. If successful, it includes the full definitions of all datasources. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListDataSourcesResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection})">
            <summary> Initializes a new instance of ListDataSourcesResult. </summary>
            <param name="dataSources"> The datasources in the Search service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dataSources" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListDataSourcesResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection})">
            <summary> Initializes a new instance of ListDataSourcesResult. </summary>
            <param name="dataSources"> The datasources in the Search service. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ListDataSourcesResult.DataSources">
            <summary> The datasources in the Search service. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ListIndexersResult">
            <summary> Response from a List Indexers request. If successful, it includes the full definitions of all indexers. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListIndexersResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndexer})">
            <summary> Initializes a new instance of ListIndexersResult. </summary>
            <param name="indexers"> The indexers in the Search service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexers" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListIndexersResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexer})">
            <summary> Initializes a new instance of ListIndexersResult. </summary>
            <param name="indexers"> The indexers in the Search service. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ListIndexersResult.Indexers">
            <summary> The indexers in the Search service. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ListIndexesResult">
            <summary> Response from a List Indexes request. If successful, it includes the full definitions of all indexes. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListIndexesResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndex})">
            <summary> Initializes a new instance of ListIndexesResult. </summary>
            <param name="indexes"> The indexes in the Search service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="indexes" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListIndexesResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndex})">
            <summary> Initializes a new instance of ListIndexesResult. </summary>
            <param name="indexes"> The indexes in the Search service. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ListIndexesResult.Indexes">
            <summary> The indexes in the Search service. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ListSkillsetsResult">
            <summary> Response from a list skillset request. If successful, it includes the full definitions of all skillsets. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListSkillsetsResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset})">
            <summary> Initializes a new instance of ListSkillsetsResult. </summary>
            <param name="skillsets"> The skillsets defined in the Search service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsets" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListSkillsetsResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset})">
            <summary> Initializes a new instance of ListSkillsetsResult. </summary>
            <param name="skillsets"> The skillsets defined in the Search service. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ListSkillsetsResult.Skillsets">
            <summary> The skillsets defined in the Search service. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ListSynonymMapsResult">
            <summary> Response from a List SynonymMaps request. If successful, it includes the full definitions of all synonym maps. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListSynonymMapsResult.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SynonymMap})">
            <summary> Initializes a new instance of ListSynonymMapsResult. </summary>
            <param name="synonymMaps"> The synonym maps in the Search service. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMaps" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ListSynonymMapsResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SynonymMap})">
            <summary> Initializes a new instance of ListSynonymMapsResult. </summary>
            <param name="synonymMaps"> The synonym maps in the Search service. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ListSynonymMapsResult.SynonymMaps">
            <summary> The synonym maps in the Search service. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LuceneStandardAnalyzer">
            <summary> Standard Apache Lucene analyzer; Composed of the standard tokenizer, lowercase filter and stop filter. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LuceneStandardAnalyzer.#ctor(System.String)">
            <summary> Initializes a new instance of LuceneStandardAnalyzer. </summary>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LuceneStandardAnalyzer.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of LuceneStandardAnalyzer. </summary>
            <param name="oDataType"> Identifies the concrete type of the analyzer. </param>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxTokenLength"> The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters. </param>
            <param name="stopwords"> A list of stopwords. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LuceneStandardAnalyzer.MaxTokenLength">
            <summary> The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LuceneStandardAnalyzer.Stopwords">
            <summary> A list of stopwords. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.LuceneStandardTokenizer">
            <summary> Breaks text following the Unicode Text Segmentation rules. This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.LuceneStandardTokenizer.#ctor(System.String)">
            <summary>
            Initializes a new instance of LuceneStandardTokenizer.
            </summary>
            <param name="name">
            The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores,
            can only start and end with alphanumeric characters, and is limited to 128 characters.
            </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.LuceneStandardTokenizer.MaxTokenLength">
            <summary>
            The maximum token length. Default is 255.
            Tokens longer than the maximum length are split.
            The maximum token length that can be used is 300 characters.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MagnitudeScoringFunction">
            <summary> Defines a function that boosts scores based on the magnitude of a numeric field. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MagnitudeScoringFunction.#ctor(System.String,System.String,System.Double,System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation},Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters)">
            <summary> Initializes a new instance of MagnitudeScoringFunction. </summary>
            <param name="type"> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </param>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </param>
            <param name="parameters"> Parameter values for the magnitude scoring function. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MagnitudeScoringFunction.Parameters">
            <summary> Parameter values for the magnitude scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MagnitudeScoringFunction.#ctor(System.String,System.Double,Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters)">
            <summary> Initializes a new instance of MagnitudeScoringFunction. </summary>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="parameters"> Parameter values for the magnitude scoring function. </param>
            <exception cref="T:System.ArgumentException"><paramref name="fieldName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName" /> or <paramref name="parameters" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters">
            <summary> Provides parameter values to a magnitude scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters.#ctor(System.Double,System.Double)">
            <summary> Initializes a new instance of MagnitudeScoringParameters. </summary>
            <param name="boostingRangeStart"> The field value at which boosting starts. </param>
            <param name="boostingRangeEnd"> The field value at which boosting ends. </param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters.#ctor(System.Double,System.Double,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of MagnitudeScoringParameters. </summary>
            <param name="boostingRangeStart"> The field value at which boosting starts. </param>
            <param name="boostingRangeEnd"> The field value at which boosting ends. </param>
            <param name="shouldBoostBeyondRangeByConstant"> A value indicating whether to apply a constant boost for field values beyond the range end value; default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters.BoostingRangeStart">
            <summary> The field value at which boosting starts. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters.BoostingRangeEnd">
            <summary> The field value at which boosting ends. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MagnitudeScoringParameters.ShouldBoostBeyondRangeByConstant">
            <summary> A value indicating whether to apply a constant boost for field values beyond the range end value; default is false. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MappingCharFilter">
            <summary> A character filter that applies mappings defined with the mappings option. Matching is greedy (longest pattern matching at a given point wins). Replacement is allowed to be the empty string. This character filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MappingCharFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of MappingCharFilter. </summary>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="mappings"> A list of mappings of the following format: "a=&gt;b" (all occurrences of the character "a" will be replaced with character "b"). </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="mappings" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MappingCharFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of MappingCharFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the char filter. </param>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="mappings"> A list of mappings of the following format: "a=&gt;b" (all occurrences of the character "a" will be replaced with character "b"). </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MappingCharFilter.Mappings">
            <summary> A list of mappings of the following format: "a=&gt;b" (all occurrences of the character "a" will be replaced with character "b"). </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MergeSkill">
            <summary> A skill for merging two or more strings into a single unified string, with an optional user-defined delimiter separating each component part. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MergeSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of MergeSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MergeSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.String,System.String)">
            <summary> Initializes a new instance of MergeSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="insertPreTag"> The tag indicates the start of the merged text. By default, the tag is an empty space. </param>
            <param name="insertPostTag"> The tag indicates the end of the merged text. By default, the tag is an empty space. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MergeSkill.InsertPreTag">
            <summary> The tag indicates the start of the merged text. By default, the tag is an empty space. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MergeSkill.InsertPostTag">
            <summary> The tag indicates the end of the merged text. By default, the tag is an empty space. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageStemmingTokenizer">
            <summary> Divides text using language-specific rules and reduces words to their base forms. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageStemmingTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of MicrosoftLanguageStemmingTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageStemmingTokenizer.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage})">
            <summary> Initializes a new instance of MicrosoftLanguageStemmingTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxTokenLength"> The maximum token length. Tokens longer than the maximum length are split. Maximum token length that can be used is 300 characters. Tokens longer than 300 characters are first split into tokens of length 300 and then each of those tokens is split based on the max token length set. Default is 255. </param>
            <param name="isSearchTokenizer"> A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false. </param>
            <param name="language"> The language to use. The default is English. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageStemmingTokenizer.MaxTokenLength">
            <summary> The maximum token length. Tokens longer than the maximum length are split. Maximum token length that can be used is 300 characters. Tokens longer than 300 characters are first split into tokens of length 300 and then each of those tokens is split based on the max token length set. Default is 255. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageStemmingTokenizer.IsSearchTokenizer">
            <summary> A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageStemmingTokenizer.Language">
            <summary> The language to use. The default is English. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageTokenizer">
            <summary> Divides text using language-specific rules. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of MicrosoftLanguageTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageTokenizer.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage})">
            <summary> Initializes a new instance of MicrosoftLanguageTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxTokenLength"> The maximum token length. Tokens longer than the maximum length are split. Maximum token length that can be used is 300 characters. Tokens longer than 300 characters are first split into tokens of length 300 and then each of those tokens is split based on the max token length set. Default is 255. </param>
            <param name="isSearchTokenizer"> A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false. </param>
            <param name="language"> The language to use. The default is English. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageTokenizer.MaxTokenLength">
            <summary> The maximum token length. Tokens longer than the maximum length are split. Maximum token length that can be used is 300 characters. Tokens longer than 300 characters are first split into tokens of length 300 and then each of those tokens is split based on the max token length set. Default is 255. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageTokenizer.IsSearchTokenizer">
            <summary> A value indicating how the tokenizer is used. Set to true if used as the search tokenizer, set to false if used as the indexing tokenizer. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.MicrosoftLanguageTokenizer.Language">
            <summary> The language to use. The default is English. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage">
            <summary> Lists the languages supported by the Microsoft language stemming tokenizer. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Arabic">
            <summary> Selects the Microsoft stemming tokenizer for Arabic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Bangla">
            <summary> Selects the Microsoft stemming tokenizer for Bangla. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Bulgarian">
            <summary> Selects the Microsoft stemming tokenizer for Bulgarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Catalan">
            <summary> Selects the Microsoft stemming tokenizer for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Croatian">
            <summary> Selects the Microsoft stemming tokenizer for Croatian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Czech">
            <summary> Selects the Microsoft stemming tokenizer for Czech. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Danish">
            <summary> Selects the Microsoft stemming tokenizer for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Dutch">
            <summary> Selects the Microsoft stemming tokenizer for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.English">
            <summary> Selects the Microsoft stemming tokenizer for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Estonian">
            <summary> Selects the Microsoft stemming tokenizer for Estonian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Finnish">
            <summary> Selects the Microsoft stemming tokenizer for Finnish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.French">
            <summary> Selects the Microsoft stemming tokenizer for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.German">
            <summary> Selects the Microsoft stemming tokenizer for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Greek">
            <summary> Selects the Microsoft stemming tokenizer for Greek. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Gujarati">
            <summary> Selects the Microsoft stemming tokenizer for Gujarati. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Hebrew">
            <summary> Selects the Microsoft stemming tokenizer for Hebrew. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Hindi">
            <summary> Selects the Microsoft stemming tokenizer for Hindi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Hungarian">
            <summary> Selects the Microsoft stemming tokenizer for Hungarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Icelandic">
            <summary> Selects the Microsoft stemming tokenizer for Icelandic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Indonesian">
            <summary> Selects the Microsoft stemming tokenizer for Indonesian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Italian">
            <summary> Selects the Microsoft stemming tokenizer for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Kannada">
            <summary> Selects the Microsoft stemming tokenizer for Kannada. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Latvian">
            <summary> Selects the Microsoft stemming tokenizer for Latvian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Lithuanian">
            <summary> Selects the Microsoft stemming tokenizer for Lithuanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Malay">
            <summary> Selects the Microsoft stemming tokenizer for Malay. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Malayalam">
            <summary> Selects the Microsoft stemming tokenizer for Malayalam. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Marathi">
            <summary> Selects the Microsoft stemming tokenizer for Marathi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.NorwegianBokmaal">
            <summary> Selects the Microsoft stemming tokenizer for Norwegian (Bokmål). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Polish">
            <summary> Selects the Microsoft stemming tokenizer for Polish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Portuguese">
            <summary> Selects the Microsoft stemming tokenizer for Portuguese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.PortugueseBrazilian">
            <summary> Selects the Microsoft stemming tokenizer for Portuguese (Brazil). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Punjabi">
            <summary> Selects the Microsoft stemming tokenizer for Punjabi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Romanian">
            <summary> Selects the Microsoft stemming tokenizer for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Russian">
            <summary> Selects the Microsoft stemming tokenizer for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.SerbianCyrillic">
            <summary> Selects the Microsoft stemming tokenizer for Serbian (Cyrillic). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.SerbianLatin">
            <summary> Selects the Microsoft stemming tokenizer for Serbian (Latin). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Slovak">
            <summary> Selects the Microsoft stemming tokenizer for Slovak. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Slovenian">
            <summary> Selects the Microsoft stemming tokenizer for Slovenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Spanish">
            <summary> Selects the Microsoft stemming tokenizer for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Swedish">
            <summary> Selects the Microsoft stemming tokenizer for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Tamil">
            <summary> Selects the Microsoft stemming tokenizer for Tamil. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Telugu">
            <summary> Selects the Microsoft stemming tokenizer for Telugu. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Turkish">
            <summary> Selects the Microsoft stemming tokenizer for Turkish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Ukrainian">
            <summary> Selects the Microsoft stemming tokenizer for Ukrainian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftStemmingTokenizerLanguage.Urdu">
            <summary> Selects the Microsoft stemming tokenizer for Urdu. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage">
            <summary> Lists the languages supported by the Microsoft language tokenizer. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Bangla">
            <summary> Selects the Microsoft tokenizer for Bangla. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Bulgarian">
            <summary> Selects the Microsoft tokenizer for Bulgarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Catalan">
            <summary> Selects the Microsoft tokenizer for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.ChineseSimplified">
            <summary> Selects the Microsoft tokenizer for Chinese (Simplified). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.ChineseTraditional">
            <summary> Selects the Microsoft tokenizer for Chinese (Traditional). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Croatian">
            <summary> Selects the Microsoft tokenizer for Croatian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Czech">
            <summary> Selects the Microsoft tokenizer for Czech. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Danish">
            <summary> Selects the Microsoft tokenizer for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Dutch">
            <summary> Selects the Microsoft tokenizer for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.English">
            <summary> Selects the Microsoft tokenizer for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.French">
            <summary> Selects the Microsoft tokenizer for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.German">
            <summary> Selects the Microsoft tokenizer for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Greek">
            <summary> Selects the Microsoft tokenizer for Greek. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Gujarati">
            <summary> Selects the Microsoft tokenizer for Gujarati. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Hindi">
            <summary> Selects the Microsoft tokenizer for Hindi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Icelandic">
            <summary> Selects the Microsoft tokenizer for Icelandic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Indonesian">
            <summary> Selects the Microsoft tokenizer for Indonesian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Italian">
            <summary> Selects the Microsoft tokenizer for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Japanese">
            <summary> Selects the Microsoft tokenizer for Japanese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Kannada">
            <summary> Selects the Microsoft tokenizer for Kannada. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Korean">
            <summary> Selects the Microsoft tokenizer for Korean. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Malay">
            <summary> Selects the Microsoft tokenizer for Malay. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Malayalam">
            <summary> Selects the Microsoft tokenizer for Malayalam. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Marathi">
            <summary> Selects the Microsoft tokenizer for Marathi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.NorwegianBokmaal">
            <summary> Selects the Microsoft tokenizer for Norwegian (Bokmål). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Polish">
            <summary> Selects the Microsoft tokenizer for Polish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Portuguese">
            <summary> Selects the Microsoft tokenizer for Portuguese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.PortugueseBrazilian">
            <summary> Selects the Microsoft tokenizer for Portuguese (Brazil). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Punjabi">
            <summary> Selects the Microsoft tokenizer for Punjabi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Romanian">
            <summary> Selects the Microsoft tokenizer for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Russian">
            <summary> Selects the Microsoft tokenizer for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.SerbianCyrillic">
            <summary> Selects the Microsoft tokenizer for Serbian (Cyrillic). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.SerbianLatin">
            <summary> Selects the Microsoft tokenizer for Serbian (Latin). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Slovenian">
            <summary> Selects the Microsoft tokenizer for Slovenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Spanish">
            <summary> Selects the Microsoft tokenizer for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Swedish">
            <summary> Selects the Microsoft tokenizer for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Tamil">
            <summary> Selects the Microsoft tokenizer for Tamil. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Telugu">
            <summary> Selects the Microsoft tokenizer for Telugu. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Thai">
            <summary> Selects the Microsoft tokenizer for Thai. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Ukrainian">
            <summary> Selects the Microsoft tokenizer for Ukrainian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Urdu">
            <summary> Selects the Microsoft tokenizer for Urdu. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.MicrosoftTokenizerLanguage.Vietnamese">
            <summary> Selects the Microsoft tokenizer for Vietnamese. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.NGramTokenFilter">
            <summary> Generates n-grams of the given size(s). This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.NGramTokenFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of NGramTokenFilter.
            </summary>
            <param name="name">
            The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores,
            can only start and end with alphanumeric characters, and is limited to 128 characters.
            </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.NGramTokenFilter.MinGram">
            <summary>
            The minimum n-gram length. Default is 1.
            Maximum is 300.
            Must be less than the value of maxGram.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.NGramTokenFilter.MaxGram">
            <summary>
            The maximum n-gram length. Default is 2.
            Maximum is 300.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.NGramTokenizer">
            <summary> Tokenizes the input into n-grams of the given size(s). This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.NGramTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of NGramTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.NGramTokenizer.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.TokenCharacterKind})">
            <summary> Initializes a new instance of NGramTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="minGram"> The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram. </param>
            <param name="maxGram"> The maximum n-gram length. Default is 2. Maximum is 300. </param>
            <param name="tokenChars"> Character classes to keep in the tokens. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.NGramTokenizer.MinGram">
            <summary> The minimum n-gram length. Default is 1. Maximum is 300. Must be less than the value of maxGram. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.NGramTokenizer.MaxGram">
            <summary> The maximum n-gram length. Default is 2. Maximum is 300. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.NGramTokenizer.TokenChars">
            <summary> Character classes to keep in the tokens. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.OcrSkill">
            <summary> A skill that extracts text from image files. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of OcrSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.OcrSkillLanguage},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of OcrSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
            <param name="shouldDetectOrientation"> A value indicating to turn orientation detection on or not. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkill.ShouldDetectOrientation">
            <summary> A value indicating to turn orientation detection on or not. Default is false. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage">
            <summary> The language codes supported for input by OcrSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.ZhHans">
            <summary> Chinese-Simplified. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.ZhHant">
            <summary> Chinese-Traditional. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Cs">
            <summary> Czech. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Nl">
            <summary> Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.El">
            <summary> Greek. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Hu">
            <summary> Hungarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Ja">
            <summary> Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Ko">
            <summary> Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Nb">
            <summary> Norwegian (Bokmaal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Pl">
            <summary> Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Pt">
            <summary> Portuguese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Ru">
            <summary> Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Sv">
            <summary> Swedish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Tr">
            <summary> Turkish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Ar">
            <summary> Arabic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Ro">
            <summary> Romanian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.SrCyrl">
            <summary> Serbian (Cyrillic, Serbia). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.SrLatn">
            <summary> Serbian (Latin, Serbia). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Sk">
            <summary> Slovak. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.OcrSkillLanguage,Azure.Search.Documents.Indexes.Models.OcrSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.OcrSkillLanguage,Azure.Search.Documents.Indexes.Models.OcrSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.OcrSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.OcrSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OcrSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry">
            <summary> Output field mapping for a skill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry.#ctor(System.String)">
            <summary> Initializes a new instance of OutputFieldMappingEntry. </summary>
            <param name="name"> The name of the output defined by the skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of OutputFieldMappingEntry. </summary>
            <param name="name"> The name of the output defined by the skill. </param>
            <param name="targetName"> The target name of the output. It is optional and default to name. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry.Name">
            <summary> The name of the output defined by the skill. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry.TargetName">
            <summary> The target name of the output. It is optional and default to name. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer">
            <summary> Tokenizer for path-like hierarchies. This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of PathHierarchyTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.#ctor(System.String,System.String,System.Nullable{System.Char},System.Nullable{System.Char},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of PathHierarchyTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="delimiter"> The delimiter character to use. Default is "/". </param>
            <param name="replacement"> A value that, if set, replaces the delimiter character. Default is "/". </param>
            <param name="maxTokenLength"> The maximum token length. Default and maximum is 300. </param>
            <param name="reverseTokenOrder"> A value indicating whether to generate tokens in reverse order. Default is false. </param>
            <param name="numberOfTokensToSkip"> The number of initial tokens to skip. Default is 0. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.Delimiter">
            <summary> The delimiter character to use. Default is "/". </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.Replacement">
            <summary> A value that, if set, replaces the delimiter character. Default is "/". </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.MaxTokenLength">
            <summary> The maximum token length. Default and maximum is 300. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.ReverseTokenOrder">
            <summary> A value indicating whether to generate tokens in reverse order. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PathHierarchyTokenizer.NumberOfTokensToSkip">
            <summary> The number of initial tokens to skip. Default is 0. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PatternAnalyzer">
            <summary> Flexibly separates text into terms via a regular expression pattern. This analyzer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.#ctor(System.String)">
            <summary> Initializes a new instance of PatternAnalyzer. </summary>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of PatternAnalyzer. </summary>
            <param name="oDataType"> Identifies the concrete type of the analyzer. </param>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="lowerCaseTerms"> A value indicating whether terms should be lower-cased. Default is true. </param>
            <param name="pattern"> A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters. </param>
            <param name="flagsInternal"> Regular expression flags. </param>
            <param name="stopwords"> A list of stopwords. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.LowerCaseTerms">
            <summary> A value indicating whether terms should be lower-cased. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.Pattern">
            <summary> A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.Flags">
            <summary>
            Gets regular expression flags for <see cref="P:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.Pattern" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternAnalyzer.Stopwords">
            <summary>
            Gets a list of stopwords.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PatternCaptureTokenFilter">
            <summary> Uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternCaptureTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of PatternCaptureTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="patterns"> A list of patterns to match against each token. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="patterns" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternCaptureTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of PatternCaptureTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="patterns"> A list of patterns to match against each token. </param>
            <param name="preserveOriginal"> A value indicating whether to return the original token even if one of the patterns matches. Default is true. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternCaptureTokenFilter.PreserveOriginal">
            <summary> A value indicating whether to return the original token even if one of the patterns matches. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternCaptureTokenFilter.Patterns">
            <summary> A list of patterns to match against each token. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PatternReplaceCharFilter">
            <summary> A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text "aa bb aa bb", pattern "(aa)\s+(bb)", and replacement "$1#$2", the result would be "aa#bb aa#bb". This character filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternReplaceCharFilter.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of PatternReplaceCharFilter. </summary>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="pattern"> A regular expression pattern. </param>
            <param name="replacement"> The replacement text. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="pattern" /> or <paramref name="replacement" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternReplaceCharFilter.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of PatternReplaceCharFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the char filter. </param>
            <param name="name"> The name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="pattern"> A regular expression pattern. </param>
            <param name="replacement"> The replacement text. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternReplaceCharFilter.Pattern">
            <summary> A regular expression pattern. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternReplaceCharFilter.Replacement">
            <summary> The replacement text. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PatternReplaceTokenFilter">
            <summary> A character filter that replaces characters in the input string. It uses a regular expression to identify character sequences to preserve and a replacement pattern to identify characters to replace. For example, given the input text "aa bb aa bb", pattern "(aa)\s+(bb)", and replacement "$1#$2", the result would be "aa#bb aa#bb". This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternReplaceTokenFilter.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of PatternReplaceTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="pattern"> A regular expression pattern. </param>
            <param name="replacement"> The replacement text. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="pattern" /> or <paramref name="replacement" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternReplaceTokenFilter.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of PatternReplaceTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="pattern"> A regular expression pattern. </param>
            <param name="replacement"> The replacement text. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternReplaceTokenFilter.Pattern">
            <summary> A regular expression pattern. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternReplaceTokenFilter.Replacement">
            <summary> The replacement text. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PatternTokenizer">
            <summary> Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of PatternTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PatternTokenizer.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of PatternTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="pattern"> A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters. </param>
            <param name="flagsInternal"> Regular expression flags. </param>
            <param name="group"> The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Pattern">
            <summary> A regular expression pattern to match token separators. Default is an expression that matches one or more non-word characters. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Group">
            <summary> The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Flags">
            <summary>
            Regular expression flags for <see cref="P:Azure.Search.Documents.Indexes.Models.PatternTokenizer.Pattern" />.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PhoneticEncoder">
            <summary> Identifies the type of phonetic encoder to use with a PhoneticTokenFilter. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.Metaphone">
            <summary> Encodes a token into a Metaphone value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.DoubleMetaphone">
            <summary> Encodes a token into a double metaphone value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.Soundex">
            <summary> Encodes a token into a Soundex value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.RefinedSoundex">
            <summary> Encodes a token into a Refined Soundex value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.Caverphone1">
            <summary> Encodes a token into a Caverphone 1.0 value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.Caverphone2">
            <summary> Encodes a token into a Caverphone 2.0 value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.Cologne">
            <summary> Encodes a token into a Cologne Phonetic value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.Nysiis">
            <summary> Encodes a token into a NYSIIS value. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.KoelnerPhonetik">
            <summary> Encodes a token using the Kölner Phonetik algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.HaasePhonetik">
            <summary> Encodes a token using the Haase refinement of the Kölner Phonetik algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.PhoneticEncoder.BeiderMorse">
            <summary> Encodes a token into a Beider-Morse value. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.PhoneticTokenFilter">
            <summary> Create tokens for phonetic matches. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PhoneticTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of PhoneticTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.PhoneticTokenFilter.#ctor(System.String,System.String,System.Nullable{Azure.Search.Documents.Indexes.Models.PhoneticEncoder},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of PhoneticTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="encoder"> The phonetic encoder to use. Default is "metaphone". </param>
            <param name="replaceOriginalTokens"> A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PhoneticTokenFilter.Encoder">
            <summary> The phonetic encoder to use. Default is "metaphone". </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.PhoneticTokenFilter.ReplaceOriginalTokens">
            <summary> A value indicating whether encoded tokens should replace original tokens. If false, encoded tokens are added as synonyms. Default is true. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.RegexFlag">
            <summary> Defines flags that can be combined to control how regular expressions are used in the pattern analyzer and pattern tokenizer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.RegexFlag" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.CanonEq">
            <summary> Enables canonical equivalence. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.CaseInsensitive">
            <summary> Enables case-insensitive matching. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.Comments">
            <summary> Permits whitespace and comments in the pattern. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.DotAll">
            <summary> Enables dotall mode. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.Literal">
            <summary> Enables literal parsing of the pattern. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.Multiline">
            <summary> Enables multiline mode. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.UnicodeCase">
            <summary> Enables Unicode-aware case folding. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.RegexFlag.UnixLines">
            <summary> Enables Unix lines mode. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.op_Equality(Azure.Search.Documents.Indexes.Models.RegexFlag,Azure.Search.Documents.Indexes.Models.RegexFlag)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.RegexFlag" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.op_Inequality(Azure.Search.Documents.Indexes.Models.RegexFlag,Azure.Search.Documents.Indexes.Models.RegexFlag)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.RegexFlag" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.RegexFlag">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.RegexFlag" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.Equals(Azure.Search.Documents.Indexes.Models.RegexFlag)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.RegexFlag.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ScoringFunction">
            <summary> Base type for functions that can modify document scores during ranking. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ScoringFunction.#ctor(System.String,System.String,System.Double,System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation})">
            <summary> Initializes a new instance of ScoringFunction. </summary>
            <param name="type"> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </param>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringFunction.Type">
            <summary> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringFunction.FieldName">
            <summary> The name of the field used as input to the scoring function. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringFunction.Boost">
            <summary> A multiplier for the raw score. Must be a positive number not equal to 1.0. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringFunction.Interpolation">
            <summary> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ScoringFunction.#ctor(System.String,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.ScoringFunction" /> class.
            </summary>
            <param name="fieldName">The name of the field used as input to the scoring function.</param>
            <param name="boost">A multiplier for the raw score. Must be a positive number not equal to 1.0.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation">
            <summary> Defines the aggregation function used to combine the results of all the scoring functions in a scoring profile. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation.Sum">
            <summary> Boost scores by the sum of all scoring function results. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation.Average">
            <summary> Boost scores by the average of all scoring function results. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation.Minimum">
            <summary> Boost scores by the minimum of all scoring function results. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation.Maximum">
            <summary> Boost scores by the maximum of all scoring function results. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation.FirstMatching">
            <summary> Boost scores using the first applicable scoring function in the scoring profile. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation">
            <summary> Defines the function used to interpolate score boosting across a range of documents. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation.Linear">
            <summary> Boosts scores by a linearly decreasing amount. This is the default interpolation for scoring functions. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation.Constant">
            <summary> Boosts scores by a constant factor. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation.Quadratic">
            <summary> Boosts scores by an amount that decreases quadratically. Boosts decrease slowly for higher scores, and more quickly as the scores decrease. This interpolation option is not allowed in tag scoring functions. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation.Logarithmic">
            <summary> Boosts scores by an amount that decreases logarithmically. Boosts decrease quickly for higher scores, and more slowly as the scores decrease. This interpolation option is not allowed in tag scoring functions. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ScoringProfile">
            <summary> Defines parameters for a search index that influence scoring in search queries. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ScoringProfile.#ctor(System.String)">
            <summary> Initializes a new instance of ScoringProfile. </summary>
            <param name="name"> The name of the scoring profile. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ScoringProfile.#ctor(System.String,Azure.Search.Documents.Indexes.Models.TextWeights,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.ScoringFunction},System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionAggregation})">
            <summary> Initializes a new instance of ScoringProfile. </summary>
            <param name="name"> The name of the scoring profile. </param>
            <param name="textWeights"> Parameters that boost scoring based on text matches in certain index fields. </param>
            <param name="functions"> The collection of functions that influence the scoring of documents. </param>
            <param name="functionAggregation"> A value indicating how the results of individual scoring functions should be combined. Defaults to "Sum". Ignored if there are no scoring functions. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringProfile.Name">
            <summary> The name of the scoring profile. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringProfile.TextWeights">
            <summary> Parameters that boost scoring based on text matches in certain index fields. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringProfile.FunctionAggregation">
            <summary> A value indicating how the results of individual scoring functions should be combined. Defaults to "Sum". Ignored if there are no scoring functions. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ScoringProfile.Functions">
            <summary> The collection of functions that influence the scoring of documents. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchField">
            <summary> Represents a field in an index definition, which describes the name, data type, and search behavior of a field. </summary>
            <summary>
            <para>
            Represents a field in an index definition, which describes the name, data type, and search behavior of a field.
            </para>
            <para>
            When creating an index, instead use the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchField.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName},System.Nullable{Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName},System.Nullable{Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.SearchField})">
            <summary> Initializes a new instance of SearchField. </summary>
            <param name="name"> The name of the field, which must be unique within the fields collection of the index or parent field. </param>
            <param name="type"> The data type of the field. </param>
            <param name="isKey"> A value indicating whether the field uniquely identifies documents in the index. Exactly one top-level field in each index must be chosen as the key field and it must be of type Edm.String. Key fields can be used to look up documents directly and update or delete specific documents. Default is false for simple fields and null for complex fields. </param>
            <param name="isRetrievable"> A value indicating whether the field can be returned in a search result. You can disable this option if you want to use a field (for example, margin) as a filter, sorting, or scoring mechanism but do not want the field to be visible to the end user. This property must be true for key fields, and it must be null for complex fields. This property can be changed on existing fields. Enabling this property does not cause any increase in index storage requirements. Default is true for simple fields and null for complex fields. </param>
            <param name="isSearchable"> A value indicating whether the field is full-text searchable. This means it will undergo analysis such as word-breaking during indexing. If you set a searchable field to a value like "sunny day", internally it will be split into the individual tokens "sunny" and "day". This enables full-text searches for these terms. Fields of type Edm.String or Collection(Edm.String) are searchable by default. This property must be false for simple fields of other non-string data types, and it must be null for complex fields. Note: searchable fields consume extra space in your index since Azure Cognitive Search will store an additional tokenized version of the field value for full-text searches. If you want to save space in your index and you don't need a field to be included in searches, set searchable to false. </param>
            <param name="isFilterable"> A value indicating whether to enable the field to be referenced in $filter queries. filterable differs from searchable in how strings are handled. Fields of type Edm.String or Collection(Edm.String) that are filterable do not undergo word-breaking, so comparisons are for exact matches only. For example, if you set such a field f to "sunny day", $filter=f eq 'sunny' will find no matches, but $filter=f eq 'sunny day' will. This property must be null for complex fields. Default is true for simple fields and null for complex fields. </param>
            <param name="isSortable"> A value indicating whether to enable the field to be referenced in $orderby expressions. By default Azure Cognitive Search sorts results by score, but in many experiences users will want to sort by fields in the documents. A simple field can be sortable only if it is single-valued (it has a single value in the scope of the parent document). Simple collection fields cannot be sortable, since they are multi-valued. Simple sub-fields of complex collections are also multi-valued, and therefore cannot be sortable. This is true whether it's an immediate parent field, or an ancestor field, that's the complex collection. Complex fields cannot be sortable and the sortable property must be null for such fields. The default for sortable is true for single-valued simple fields, false for multi-valued simple fields, and null for complex fields. </param>
            <param name="isFacetable"> A value indicating whether to enable the field to be referenced in facet queries. Typically used in a presentation of search results that includes hit count by category (for example, search for digital cameras and see hits by brand, by megapixels, by price, and so on). This property must be null for complex fields. Fields of type Edm.GeographyPoint or Collection(Edm.GeographyPoint) cannot be facetable. Default is true for all other simple fields. </param>
            <param name="analyzerName"> The name of the analyzer to use for the field. This option can be used only with searchable fields and it can't be set together with either searchAnalyzer or indexAnalyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields. </param>
            <param name="searchAnalyzerName"> The name of the analyzer used at search time for the field. This option can be used only with searchable fields. It must be set together with indexAnalyzer and it cannot be set together with the analyzer option. This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. This analyzer can be updated on an existing field. Must be null for complex fields. </param>
            <param name="indexAnalyzerName"> The name of the analyzer used at indexing time for the field. This option can be used only with searchable fields. It must be set together with searchAnalyzer and it cannot be set together with the analyzer option.  This property cannot be set to the name of a language analyzer; use the analyzer property instead if you need a language analyzer. Once the analyzer is chosen, it cannot be changed for the field. Must be null for complex fields. </param>
            <param name="synonymMapNames"> A list of the names of synonym maps to associate with this field. This option can be used only with searchable fields. Currently only one synonym map per field is supported. Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map. This attribute can be changed on existing fields. Must be null or an empty collection for complex fields. </param>
            <param name="fields"> A list of sub-fields if this is a field of type Edm.ComplexType or Collection(Edm.ComplexType). Must be null or empty for simple fields. </param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchField.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> class.
            </summary>
            <param name="name">The name of the field, which must be unique within the index or parent field.</param>
            <param name="type">The data type of the field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.Name">
            <summary>
            Gets the name of the field.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.Type">
            <summary>
            Ge the data type of the field.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IsSearchable">
            <summary>
            Gets or sets a value indicating whether the field is full-text searchable. The default is null.
            This means it will undergo analysis such as word-breaking during indexing.
            This property can be true only for <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)". It must be false for non-string simple fields, and null for complex fields.
            </summary>
            <remarks>
            <para>
            Full-text searches enable the field value "sunny day" to be split into individual terms "sunny" and "day". This will increase the size of your index.
            </para>
            <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IsFilterable">
            <summary>
            Gets or sets a value indicating whether the field can be referenced in <c>$filter</c> queries. The default is null.
            This property must be null for complex fields, but can be set on simple fields within a complex field.
            </summary>
            <remarks>
            <para>
            Filterable differs from searchable in how strings are handled. Fields of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)" that are filterable do not undergo word-breaking, so comparisons are for exact matches only.
            For example, if you set such a field <c>f</c> to "sunny day", <c>$filter=f eq 'sunny'</c> will find no matches, but <c>$filter=f eq 'sunny day'</c> will.
            </para>
            <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IsHidden">
            <summary>
            Gets or sets a value indicating whether the field will be returned in a search result. The default is null.
            This property must be true for key fields, and must be null for complex fields.
            </summary>
            <remarks>
            <para>
            You can hide a field from search results if you want to use it only as a filter, for sorting, or for scoring.
            This property can also be changed on existing fields and enabling it does not cause an increase in index storage requirements.
            </para>
            <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IsSortable">
            <summary>
            Gets or sets a value indicating whether the field can be referenced in a <c>$orderby</c> expression. The default is null.
            A simple field can be sortable only if it is a single-valued type such as <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Int32" />.
            </summary>
            <remarks>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IsFacetable">
            <summary>
            Gets or sets a value indicating whether the field can be retrieved in facet queries. The default is null.
            This property must be null for complex fields, but can be set on simple fields within a complex field.
            </summary>
            <remarks>
            <para>
            Facets are used in presentation of search results that include hit counts by categories.
            For example, in a search for digital cameras, facets might include branch, megapixels, price, etc.
            </para>
            <para>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </para>
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IsKey">
            <summary>
            Gets or sets whether the field is the key field. The default is null.
            A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> must have exactly one key field of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" />.
            </summary>
            <remarks>
            This field must be set according to constraints described in the summary, or the server may respond with an error.
            Instead, consider using the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> classes to help you more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName">
            <summary>
            Gets or sets the name of the analyzer to use for the field.
            This option can be used only with searchable fields and it cannot be set together with either <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName" />.
            Once the analyzer is chosen, it cannot be changed for the field.
            Must be null for complex fields.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName">
            <summary>
            Gets or sets the name of the analyzer used at search time for the field.
            This option can be used only with searchable fields.
            It must be set together with <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName" /> and it cannot be set together with the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> option.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> property instead if you need a language analyzer.
            This analyzer can be updated on an existing field.
            Must be null for complex fields.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.IndexAnalyzerName">
            <summary>
            Gets or sets the name of the analyzer used at indexing time for the field.
            This option can be used only with searchable fields.
            It must be set together with <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.SearchAnalyzerName" /> and it cannot be set together with the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> option.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.AnalyzerName" /> property instead if you need a language analyzer.
            Once the analyzer is chosen, it cannot be changed for the field.
            Must be null for complex fields. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.SynonymMapNames">
            <summary>
            Gets a list of names of synonym maps associated with this field. Only fields where <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.IsSearchable" /> is true can have associated synonym maps.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchField.Fields">
            <summary>
            Gets a list of nested fields if this field is of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Complex" /> or "Collection(DataType.Complex)".
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchField.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
            <remarks>
            This always returns "<see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.Name" /> : <see cref="P:Azure.Search.Documents.Indexes.Models.SearchField.Type" />" and is meant for debugging purposes.
            </remarks>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType">
            <summary> Defines the data type of a field in a search index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.op_Equality(Azure.Search.Documents.Indexes.Models.SearchFieldDataType,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.op_Inequality(Azure.Search.Documents.Indexes.Models.SearchFieldDataType,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.SearchFieldDataType">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Equals(Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String">
            <summary>A <see cref="T:System.String" /> type.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Int32">
            <summary>An <see cref="T:System.Int32" /> type, or something that can convert to an <see cref="T:System.Int32" />.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Int64">
            <summary>An <see cref="T:System.Int64" /> type, or something that can convert to an <see cref="T:System.Int64" />.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Double">
            <summary>A <see cref="T:System.Double" /> type, or something that can convert to a <see cref="T:System.Double" />.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Boolean">
            <summary>A <see cref="T:System.Boolean" /> type.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.DateTimeOffset">
            <summary>A <see cref="T:System.DateTimeOffset" /> type, or <see cref="T:System.DateTime" /> converted to a <see cref="T:System.DateTimeOffset" />.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.GeographyPoint">
            <summary>A geographic point type.</summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Complex">
            <summary>A complex type with child fields.</summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.Collection(Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary>
            Gets a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" /> representing a collection of <paramref name="type" />.
            </summary>
            <param name="type">The type of collection.</param>
            <returns>A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" /> representing a collection of <paramref name="type" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.IsCollection">
            <summary>
            Gets a value indicating whether the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldDataType" /> represents a collection.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndex">
            <summary> Represents a search index definition, which describes the fields and search behavior of an index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndex.#ctor(System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.SearchField},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.ScoringProfile},System.String,Azure.Search.Documents.Indexes.Models.CorsOptions,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.SearchSuggester},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.LexicalAnalyzer},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.LexicalTokenizer},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.TokenFilter},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.CharFilter},Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey,Azure.Search.Documents.Indexes.Models.SimilarityAlgorithm,System.String)">
            <summary> Initializes a new instance of SearchIndex. </summary>
            <param name="name"> The name of the index. </param>
            <param name="fields"> The fields of the index. </param>
            <param name="scoringProfiles"> The scoring profiles for the index. </param>
            <param name="defaultScoringProfile"> The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used. </param>
            <param name="corsOptions"> Options to control Cross-Origin Resource Sharing (CORS) for the index. </param>
            <param name="suggesters"> The suggesters for the index. </param>
            <param name="analyzers"> The analyzers for the index. </param>
            <param name="tokenizers"> The tokenizers for the index. </param>
            <param name="tokenFilters"> The token filters for the index. </param>
            <param name="charFilters"> The character filters for the index. </param>
            <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
            <param name="similarity"> The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used. </param>
            <param name="etag"> The ETag of the index. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.DefaultScoringProfile">
            <summary> The name of the scoring profile to use if none is specified in the query. If this property is not set and no scoring profile is specified in the query, then default scoring (tf-idf) will be used. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.CorsOptions">
            <summary> Options to control Cross-Origin Resource Sharing (CORS) for the index. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.EncryptionKey">
            <summary> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Similarity">
            <summary> The type of similarity algorithm to be used when scoring and ranking the documents matching a search query. The similarity algorithm can only be defined at index creation time and cannot be modified on existing indexes. If null, the ClassicSimilarity algorithm is used. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndex.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> class.
            </summary>
            <param name="name">The name of the index.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndex.#ctor(System.String,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchField})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> class.
            </summary>
            <param name="name">The name of the index.</param>
            <param name="fields">Fields to add to the index.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> or <paramref name="fields" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Name">
            <summary>
            Gets the name of the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Analyzers">
            <summary>
            Gets the analyzers for the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.CharFilters">
            <summary>
            Gets the character filters for the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Fields">
            <summary>
            Gets or sets the fields in the index.
            Use <see cref="T:Azure.Search.Documents.Indexes.FieldBuilder" /> to define fields based on a model class,
            or <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" />, <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" />, and <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> to manually define fields.
            Index fields have many constraints that are not validated with <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> until the index is created on the server.
            </summary>
            <example>
            You can create fields from a model class using <see cref="T:Azure.Search.Documents.Indexes.FieldBuilder" />:
            <code snippet="Snippet:Azure_Search_Tests_Samples_Readme_CreateIndex_New_SearchIndex" language="csharp">
            SearchIndex index = new SearchIndex("hotels")
            {
                Fields = new FieldBuilder().Build(typeof(Hotel)),
                Suggesters =
                {
                    // Suggest query terms from the hotelName field.
                    new SearchSuggester("sg", "hotelName")
                }
            };
            </code>
            For this reason, <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Fields" /> is settable. In scenarios when the model is not known or cannot be modified, you can
            also create fields manually using helper classes:
            <code snippet="Snippet:Azure_Search_Tests_Samples_Readme_CreateManualIndex_New_SearchIndex" language="csharp">
            SearchIndex index = new SearchIndex("hotels")
            {
                Fields =
                {
                    new SimpleField("hotelId", SearchFieldDataType.String) { IsKey = true, IsFilterable = true, IsSortable = true },
                    new SearchableField("hotelName") { IsFilterable = true, IsSortable = true },
                    new SearchableField("description") { AnalyzerName = LexicalAnalyzerName.EnLucene },
                    new SearchableField("tags", collection: true) { IsFilterable = true, IsFacetable = true },
                    new ComplexField("address")
                    {
                        Fields =
                        {
                            new SearchableField("streetAddress"),
                            new SearchableField("city") { IsFilterable = true, IsSortable = true, IsFacetable = true },
                            new SearchableField("stateProvince") { IsFilterable = true, IsSortable = true, IsFacetable = true },
                            new SearchableField("country") { IsFilterable = true, IsSortable = true, IsFacetable = true },
                            new SearchableField("postalCode") { IsFilterable = true, IsSortable = true, IsFacetable = true }
                        }
                    }
                },
                Suggesters =
                {
                    // Suggest query terms from the hotelName field.
                    new SearchSuggester("sg", "hotelName")
                }
            };
            </code>
            </example>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ScoringProfiles">
            <summary>
            Gets the scoring profiles for the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Suggesters">
            <summary>
            Gets the suggesters for the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.TokenFilters">
            <summary>
            Gets the token filters for the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.Tokenizers">
            <summary>
            Gets the tokenizers for the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag">
            <summary>
            The <see cref="T:Azure.ETag" /> of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexer">
            <summary> Represents an indexer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexer.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of SearchIndexer. </summary>
            <param name="name"> The name of the indexer. </param>
            <param name="dataSourceName"> The name of the datasource from which this indexer reads data. </param>
            <param name="targetIndexName"> The name of the index to which this indexer writes data. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" />, <paramref name="dataSourceName" /> or <paramref name="targetIndexName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexer.#ctor(System.String,System.String,System.String,System.String,System.String,Azure.Search.Documents.Indexes.Models.IndexingSchedule,Azure.Search.Documents.Indexes.Models.IndexingParameters,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.FieldMapping},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.FieldMapping},System.Nullable{System.Boolean},System.String,Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey)">
            <summary> Initializes a new instance of SearchIndexer. </summary>
            <param name="name"> The name of the indexer. </param>
            <param name="description"> The description of the indexer. </param>
            <param name="dataSourceName"> The name of the datasource from which this indexer reads data. </param>
            <param name="skillsetName"> The name of the skillset executing with this indexer. </param>
            <param name="targetIndexName"> The name of the index to which this indexer writes data. </param>
            <param name="schedule"> The schedule for this indexer. </param>
            <param name="parameters"> Parameters for indexer execution. </param>
            <param name="fieldMappings"> Defines mappings between fields in the data source and corresponding target fields in the index. </param>
            <param name="outputFieldMappings"> Output field mappings are applied after enrichment and immediately before indexing. </param>
            <param name="isDisabled"> A value indicating whether the indexer is disabled. Default is false. </param>
            <param name="etag"> The ETag of the indexer. </param>
            <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your indexer definition (as well as indexer execution status) when you want full assurance that no one, not even Microsoft, can decrypt them in Azure Cognitive Search. Once you have encrypted your indexer definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your indexer definition (and indexer execution status) will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.Name">
            <summary> The name of the indexer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.Description">
            <summary> The description of the indexer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.DataSourceName">
            <summary> The name of the datasource from which this indexer reads data. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.SkillsetName">
            <summary> The name of the skillset executing with this indexer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.TargetIndexName">
            <summary> The name of the index to which this indexer writes data. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.Schedule">
            <summary> The schedule for this indexer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.Parameters">
            <summary> Parameters for indexer execution. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.IsDisabled">
            <summary> A value indicating whether the indexer is disabled. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.EncryptionKey">
            <summary> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your indexer definition (as well as indexer execution status) when you want full assurance that no one, not even Microsoft, can decrypt them in Azure Cognitive Search. Once you have encrypted your indexer definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your indexer definition (and indexer execution status) will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag">
            <summary>
            The <see cref="T:Azure.ETag" /> of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.FieldMappings">
            <summary> Defines mappings between fields in the data source and corresponding target fields in the index. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.OutputFieldMappings">
            <summary> Output field mappings are applied after enrichment and immediately before indexing. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer">
            <summary> Represents information about the entity (such as Azure SQL table or CosmosDB collection) that will be indexed. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer.#ctor(System.String)">
            <summary> Initializes a new instance of SearchIndexerDataContainer. </summary>
            <param name="name"> The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of SearchIndexerDataContainer. </summary>
            <param name="name"> The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed. </param>
            <param name="query"> A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer.Name">
            <summary> The name of the table or view (for Azure SQL data source) or collection (for CosmosDB data source) that will be indexed. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer.Query">
            <summary> A query that is applied to this data container. The syntax and meaning of this parameter is datasource-specific. Not supported by Azure SQL datasources. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection">
            <summary> Represents a datasource definition, which can be used to configure an indexer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.#ctor(System.String,System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType,Azure.Search.Documents.Indexes.Models.DataSourceCredentials,Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer,Azure.Search.Documents.Indexes.Models.DataChangeDetectionPolicy,Azure.Search.Documents.Indexes.Models.DataDeletionDetectionPolicy,System.String,Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey)">
            <summary> Initializes a new instance of SearchIndexerDataSourceConnection. </summary>
            <param name="name"> The name of the datasource. </param>
            <param name="description"> The description of the datasource. </param>
            <param name="type"> The type of the datasource. </param>
            <param name="credentialsInternal"> Credentials for the datasource. </param>
            <param name="container"> The data container for the datasource. </param>
            <param name="dataChangeDetectionPolicy"> The data change detection policy for the datasource. </param>
            <param name="dataDeletionDetectionPolicy"> The data deletion detection policy for the datasource. </param>
            <param name="etag"> The ETag of the data source. </param>
            <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your datasource definition when you want full assurance that no one, not even Microsoft, can decrypt your data source definition in Azure Cognitive Search. Once you have encrypted your data source definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your datasource definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.Name">
            <summary> The name of the datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.Description">
            <summary> The description of the datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.Type">
            <summary> The type of the datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.Container">
            <summary> The data container for the datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.DataChangeDetectionPolicy">
            <summary> The data change detection policy for the datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.DataDeletionDetectionPolicy">
            <summary> The data deletion detection policy for the datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.EncryptionKey">
            <summary> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your datasource definition when you want full assurance that no one, not even Microsoft, can decrypt your data source definition in Azure Cognitive Search. Once you have encrypted your data source definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your datasource definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType,System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerDataContainer)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> class.
            </summary>
            <param name="name">The name of the data source.</param>
            <param name="type">The type of the data source.</param>
            <param name="connectionString">The connection string to the data source.</param>
            <param name="container">The data container for the data source.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" />, <paramref name="connectionString" />, or <paramref name="container" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag">
            <summary>
            The <see cref="T:Azure.ETag" /> of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ConnectionString">
            <summary>
            Gets or sets a connection string to the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.Container" />.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType">
            <summary> Defines the type of a datasource. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.AzureSql">
            <summary> Indicates an Azure SQL datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.CosmosDb">
            <summary> Indicates a CosmosDB datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.AzureBlob">
            <summary> Indicates an Azure Blob datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.AzureTable">
            <summary> Indicates an Azure Table datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.MySql">
            <summary> Indicates a MySql datasource. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.AdlsGen2">
            <summary> Indicates an ADLS Gen2 datasource. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.op_Equality(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType,Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.op_Inequality(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType,Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.Equals(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerError">
            <summary> Represents an item- or document-level indexing error. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerError.#ctor(System.String,System.Int32)">
            <summary> Initializes a new instance of SearchIndexerError. </summary>
            <param name="errorMessage"> The message describing the error that occurred while processing the item. </param>
            <param name="statusCode"> The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="errorMessage" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerError.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary> Initializes a new instance of SearchIndexerError. </summary>
            <param name="key"> The key of the item for which indexing failed. </param>
            <param name="errorMessage"> The message describing the error that occurred while processing the item. </param>
            <param name="statusCode"> The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </param>
            <param name="name"> The name of the source at which the error originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available. </param>
            <param name="details"> Additional, verbose details about the error to assist in debugging the indexer. This may not be always available. </param>
            <param name="documentationLink"> A link to a troubleshooting guide for these classes of errors. This may not be always available. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerError.Key">
            <summary> The key of the item for which indexing failed. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerError.ErrorMessage">
            <summary> The message describing the error that occurred while processing the item. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerError.StatusCode">
            <summary> The status code indicating why the indexing operation failed. Possible values include: 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerError.Name">
            <summary> The name of the source at which the error originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerError.Details">
            <summary> Additional, verbose details about the error to assist in debugging the indexer. This may not be always available. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerError.DocumentationLink">
            <summary> A link to a troubleshooting guide for these classes of errors. This may not be always available. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerLimits">
            <summary> The SearchIndexerLimits. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerLimits.#ctor">
            <summary> Initializes a new instance of SearchIndexerLimits. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerLimits.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary> Initializes a new instance of SearchIndexerLimits. </summary>
            <param name="maxRunTime"> The maximum duration that the indexer is permitted to run for one execution. </param>
            <param name="maxDocumentExtractionSize"> The maximum size of a document, in bytes, which will be considered valid for indexing. </param>
            <param name="maxDocumentContentCharactersToExtract"> The maximum number of characters that will be extracted from a document picked up for indexing. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerLimits.MaxRunTime">
            <summary> The maximum duration that the indexer is permitted to run for one execution. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerLimits.MaxDocumentExtractionSize">
            <summary> The maximum size of a document, in bytes, which will be considered valid for indexing. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerLimits.MaxDocumentContentCharactersToExtract">
            <summary> The maximum number of characters that will be extracted from a document picked up for indexing. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill">
            <summary> Base type for skills. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of SearchIndexerSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.ODataType">
            <summary> Identifies the concrete type of the skill. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.Description">
            <summary> The description of the skill which describes the inputs, outputs, and usage of the skill. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.Context">
            <summary> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of SearchIndexerSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="inputs" /> or <paramref name="outputs" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.Name">
            <summary>
            The name of the skill which uniquely identifies it within the skillset.
            A skill with no name defined will be given a default name of its 1-based index in the skills array prefaced with the character "#" in debug sessions and error messages.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.Inputs">
            <summary> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkill.Outputs">
            <summary> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset">
            <summary> A list of skills. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.#ctor(System.String,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.SearchIndexerSkill})">
            <summary> Initializes a new instance of SearchIndexerSkillset. </summary>
            <param name="name"> The name of the skillset. </param>
            <param name="skills"> A list of skills in the skillset. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="skills" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.#ctor(System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.SearchIndexerSkill},Azure.Search.Documents.Indexes.Models.CognitiveServicesAccount,Azure.Search.Documents.Indexes.Models.KnowledgeStore,System.String,Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey)">
            <summary> Initializes a new instance of SearchIndexerSkillset. </summary>
            <param name="name"> The name of the skillset. </param>
            <param name="description"> The description of the skillset. </param>
            <param name="skills"> A list of skills in the skillset. </param>
            <param name="cognitiveServicesAccount"> Details about cognitive services to be used when running skills. </param>
            <param name="knowledgeStore"> Definition of additional projections to azure blob, table, or files, of enriched data. </param>
            <param name="etag"> The ETag of the skillset. </param>
            <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your skillset definition when you want full assurance that no one, not even Microsoft, can decrypt your skillset definition in Azure Cognitive Search. Once you have encrypted your skillset definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your skillset definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.Name">
            <summary> The name of the skillset. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.Description">
            <summary> The description of the skillset. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.CognitiveServicesAccount">
            <summary> Details about cognitive services to be used when running skills. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.KnowledgeStore">
            <summary> Definition of additional projections to azure blob, table, or files, of enriched data. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.EncryptionKey">
            <summary> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your skillset definition when you want full assurance that no one, not even Microsoft, can decrypt your skillset definition in Azure Cognitive Search. Once you have encrypted your skillset definition, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your skillset definition will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag">
            <summary>
            The <see cref="T:Azure.ETag" /> of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.Skills">
            <summary> A list of skills in the skillset. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus">
            <summary> Represents the current status and execution history of an indexer. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus.#ctor(Azure.Search.Documents.Indexes.Models.IndexerStatus,System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.IndexerExecutionResult},Azure.Search.Documents.Indexes.Models.SearchIndexerLimits)">
            <summary> Initializes a new instance of SearchIndexerStatus. </summary>
            <param name="status"> Overall indexer status. </param>
            <param name="executionHistory"> History of the recent indexer executions, sorted in reverse chronological order. </param>
            <param name="limits"> The execution limits for the indexer. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="executionHistory" /> or <paramref name="limits" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus.#ctor(Azure.Search.Documents.Indexes.Models.IndexerStatus,Azure.Search.Documents.Indexes.Models.IndexerExecutionResult,System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.IndexerExecutionResult},Azure.Search.Documents.Indexes.Models.SearchIndexerLimits)">
            <summary> Initializes a new instance of SearchIndexerStatus. </summary>
            <param name="status"> Overall indexer status. </param>
            <param name="lastResult"> The result of the most recent or an in-progress indexer execution. </param>
            <param name="executionHistory"> History of the recent indexer executions, sorted in reverse chronological order. </param>
            <param name="limits"> The execution limits for the indexer. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus.Status">
            <summary> Overall indexer status. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus.LastResult">
            <summary> The result of the most recent or an in-progress indexer execution. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus.ExecutionHistory">
            <summary> History of the recent indexer executions, sorted in reverse chronological order. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus.Limits">
            <summary> The execution limits for the indexer. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning">
            <summary> Represents an item-level warning. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.#ctor(System.String)">
            <summary> Initializes a new instance of SearchIndexerWarning. </summary>
            <param name="message"> The message describing the warning that occurred while processing the item. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of SearchIndexerWarning. </summary>
            <param name="key"> The key of the item which generated a warning. </param>
            <param name="message"> The message describing the warning that occurred while processing the item. </param>
            <param name="name"> The name of the source at which the warning originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available. </param>
            <param name="details"> Additional, verbose details about the warning to assist in debugging the indexer. This may not be always available. </param>
            <param name="documentationLink"> A link to a troubleshooting guide for these classes of warnings. This may not be always available. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.Key">
            <summary> The key of the item which generated a warning. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.Message">
            <summary> The message describing the warning that occurred while processing the item. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.Name">
            <summary> The name of the source at which the warning originated. For example, this could refer to a particular skill in the attached skillset. This may not be always available. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.Details">
            <summary> Additional, verbose details about the warning to assist in debugging the indexer. This may not be always available. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexerWarning.DocumentationLink">
            <summary> A link to a troubleshooting guide for these classes of warnings. This may not be always available. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics">
            <summary> Statistics for a given index. Statistics are collected periodically and are not guaranteed to always be up-to-date. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics.#ctor(System.Int64,System.Int64)">
            <summary> Initializes a new instance of SearchIndexStatistics. </summary>
            <param name="documentCount"> The number of documents in the index. </param>
            <param name="storageSize"> The amount of storage in bytes consumed by the index. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics.DocumentCount">
            <summary> The number of documents in the index. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics.StorageSize">
            <summary> The amount of storage in bytes consumed by the index. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchResourceCounter">
            <summary> Represents a resource's usage and quota. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchResourceCounter.#ctor(System.Int64)">
            <summary> Initializes a new instance of SearchResourceCounter. </summary>
            <param name="usage"> The resource usage amount. </param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchResourceCounter.#ctor(System.Int64,System.Nullable{System.Int64})">
            <summary> Initializes a new instance of SearchResourceCounter. </summary>
            <param name="usage"> The resource usage amount. </param>
            <param name="quota"> The resource amount quota. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceCounter.Usage">
            <summary> The resource usage amount. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceCounter.Quota">
            <summary> The resource amount quota. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey">
            <summary> A customer-managed encryption key in Azure Key Vault. Keys that you create and manage can be used to encrypt or decrypt data-at-rest in Azure Cognitive Search, such as indexes and synonym maps. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.#ctor(System.String,System.String,System.String,Azure.Search.Documents.Indexes.Models.AzureActiveDirectoryApplicationCredentials)">
            <summary> Initializes a new instance of SearchResourceEncryptionKey. </summary>
            <param name="keyName"> The name of your Azure Key Vault key to be used to encrypt your data at rest. </param>
            <param name="keyVersion"> The version of your Azure Key Vault key to be used to encrypt your data at rest. </param>
            <param name="vaultUri"> The URI of your Azure Key Vault, also referred to as DNS name, that contains the key to be used to encrypt your data at rest. An example URI might be https://my-keyvault-name.vault.azure.net. </param>
            <param name="accessCredentialsInternal"> Optional Azure Active Directory credentials used for accessing your Azure Key Vault. Not required if using managed identity instead. </param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey" /> class.
            </summary>
            <param name="vaultUri">Required. The Azure Key Vault <see cref="T:System.Uri" />.</param>
            <param name="keyName">Required. The name of the Azure Key Vault key to encrypt resources at rest.</param>
            <param name="keyVersion">Required. The version of the Azure Key Vault key to encrypt resources at rest.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="vaultUri" />, <paramref name="keyName" />, or <paramref name="keyVersion" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.VaultUri">
            <summary>
            Gets the Azure Key Vault <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.KeyName">
            <summary>
            Gets the name of the Azure Key Vault key to encrypt resources at rest.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.KeyVersion">
            <summary>
            Gets the version of the Azure Key Vault key to encrypt resources at rest.
            </summary>
            <remarks>
            A version is required in case the key rotates.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.ApplicationId">
            <summary>
            Gets or sets the application ID to access the Azure Key Vault specified in the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.VaultUri" />.
            The Azure Key Vault must be in the same tenant as the Azure Search service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.ApplicationSecret">
            <summary>
            Gets or sets the application secret to access the Azure Key Vault specified in the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey.VaultUri" />.
            The Azure Key Vault must be in the same tenant as the Azure Search service.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchServiceCounters">
            <summary> Represents service-level resource counters and quotas. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.#ctor(Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter)">
            <summary> Initializes a new instance of SearchServiceCounters. </summary>
            <param name="documentCounter"> Total number of documents across all indexes in the service. </param>
            <param name="indexCounter"> Total number of indexes. </param>
            <param name="indexerCounter"> Total number of indexers. </param>
            <param name="dataSourceCounter"> Total number of data sources. </param>
            <param name="storageSizeCounter"> Total size of used storage in bytes. </param>
            <param name="synonymMapCounter"> Total number of synonym maps. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="documentCounter" />, <paramref name="indexCounter" />, <paramref name="indexerCounter" />, <paramref name="dataSourceCounter" />, <paramref name="storageSizeCounter" /> or <paramref name="synonymMapCounter" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.DocumentCounter">
            <summary> Total number of documents across all indexes in the service. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.IndexCounter">
            <summary> Total number of indexes. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.IndexerCounter">
            <summary> Total number of indexers. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.DataSourceCounter">
            <summary> Total number of data sources. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.StorageSizeCounter">
            <summary> Total size of used storage in bytes. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.SynonymMapCounter">
            <summary> Total number of synonym maps. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.SkillsetCounter">
            <summary> Total number of skillsets. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceCounters.#ctor(Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter,Azure.Search.Documents.Indexes.Models.SearchResourceCounter)">
            <summary> Initializes a new instance of SearchServiceCounters. </summary>
            <param name="documentCounter"> Total number of documents across all indexes in the service. </param>
            <param name="indexCounter"> Total number of indexes. </param>
            <param name="indexerCounter"> Total number of indexers. </param>
            <param name="dataSourceCounter"> Total number of data sources. </param>
            <param name="storageSizeCounter"> Total size of used storage in bytes. </param>
            <param name="synonymMapCounter"> Total number of synonym maps. </param>
            <param name="skillsetCounter"> Total number of skillsets. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="documentCounter" />, <paramref name="indexCounter" />, <paramref name="indexerCounter" />, <paramref name="dataSourceCounter" />, <paramref name="storageSizeCounter" />, or <paramref name="synonymMapCounter" /> is null. </exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchServiceError">
            <summary> Describes an error condition for the Azure Cognitive Search API. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceError.#ctor(System.String)">
            <summary> Initializes a new instance of SearchServiceError. </summary>
            <param name="message"> A human-readable representation of the error. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceError.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.Search.Documents.Indexes.Models.SearchServiceError})">
            <summary> Initializes a new instance of SearchServiceError. </summary>
            <param name="code"> One of a server-defined set of error codes. </param>
            <param name="message"> A human-readable representation of the error. </param>
            <param name="details"> An array of details about specific errors that led to this reported error. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceError.Code">
            <summary> One of a server-defined set of error codes. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceError.Message">
            <summary> A human-readable representation of the error. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceError.Details">
            <summary> An array of details about specific errors that led to this reported error. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchServiceLimits">
            <summary> Represents various service level limits. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceLimits.#ctor">
            <summary> Initializes a new instance of SearchServiceLimits. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceLimits.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of SearchServiceLimits. </summary>
            <param name="maxFieldsPerIndex"> The maximum allowed fields per index. </param>
            <param name="maxFieldNestingDepthPerIndex"> The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3. </param>
            <param name="maxComplexCollectionFieldsPerIndex"> The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index. </param>
            <param name="maxComplexObjectsInCollectionsPerDocument"> The maximum number of objects in complex collections allowed per document. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceLimits.MaxFieldsPerIndex">
            <summary> The maximum allowed fields per index. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceLimits.MaxFieldNestingDepthPerIndex">
            <summary> The maximum depth which you can nest sub-fields in an index, including the top-level complex field. For example, a/b/c has a nesting depth of 3. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceLimits.MaxComplexCollectionFieldsPerIndex">
            <summary> The maximum number of fields of type Collection(Edm.ComplexType) allowed in an index. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceLimits.MaxComplexObjectsInCollectionsPerDocument">
            <summary> The maximum number of objects in complex collections allowed per document. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics">
            <summary> Response from a get service statistics request. If successful, it includes service level counters and limits. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics.#ctor(Azure.Search.Documents.Indexes.Models.SearchServiceCounters,Azure.Search.Documents.Indexes.Models.SearchServiceLimits)">
            <summary> Initializes a new instance of SearchServiceStatistics. </summary>
            <param name="counters"> Service level resource counters. </param>
            <param name="limits"> Service level general limits. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="counters" /> or <paramref name="limits" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics.Counters">
            <summary> Service level resource counters. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics.Limits">
            <summary> Service level general limits. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchSuggester">
            <summary> Defines how the Suggest API should apply to a group of fields in the index. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchSuggester.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of SearchSuggester. </summary>
            <param name="name"> The name of the suggester. </param>
            <param name="searchMode"> A value indicating the capabilities of the suggester. </param>
            <param name="sourceFields"> The list of field names to which the suggester applies. Each field must be searchable. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchSuggester.Name">
            <summary> The name of the suggester. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchSuggester.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchSuggester" /> class.
            </summary>
            <param name="name">The name of the suggester.</param>
            <param name="sourceFields">The list of field names to which the suggester applies. Each field must be searchable.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> or <paramref name="sourceFields" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchSuggester.#ctor(System.String,System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchSuggester" /> class.
            </summary>
            <param name="name">The name of the suggester.</param>
            <param name="sourceFields">The list of field names to which the suggester applies. Each field must be searchable.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> or <paramref name="sourceFields" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchSuggester.SourceFields">
            <summary> The list of field names to which the suggester applies. Each field must be searchable. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SentimentSkill">
            <summary> Text analytics positive-negative sentiment analysis, scored as a floating point value in a range of zero to 1. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of SentimentSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage})">
            <summary> Initializes a new instance of SentimentSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage">
            <summary> The language codes supported for input text by SentimentSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Nl">
            <summary> Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.El">
            <summary> Greek. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.No">
            <summary> Norwegian (Bokmaal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Pl">
            <summary> Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.PtPT">
            <summary> Portuguese (Portugal). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Ru">
            <summary> Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Sv">
            <summary> Swedish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Tr">
            <summary> Turkish. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage,Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage,Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SentimentSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ShaperSkill">
            <summary> A skill for reshaping the outputs. It creates a complex type to support composite fields (also known as multipart fields). </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ShaperSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of ShaperSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ShaperSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of ShaperSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter">
            <summary> Creates combinations of tokens as a single token. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of ShingleTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary> Initializes a new instance of ShingleTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxShingleSize"> The maximum shingle size. Default and minimum value is 2. </param>
            <param name="minShingleSize"> The minimum shingle size. Default and minimum value is 2. Must be less than the value of maxShingleSize. </param>
            <param name="outputUnigrams"> A value indicating whether the output stream will contain the input tokens (unigrams) as well as shingles. Default is true. </param>
            <param name="outputUnigramsIfNoShingles"> A value indicating whether to output unigrams for those times when no shingles are available. This property takes precedence when outputUnigrams is set to false. Default is false. </param>
            <param name="tokenSeparator"> The string to use when joining adjacent tokens to form a shingle. Default is a single space (" "). </param>
            <param name="filterToken"> The string to insert for each position at which there is no token. Default is an underscore ("_"). </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.MaxShingleSize">
            <summary> The maximum shingle size. Default and minimum value is 2. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.MinShingleSize">
            <summary> The minimum shingle size. Default and minimum value is 2. Must be less than the value of maxShingleSize. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.OutputUnigrams">
            <summary> A value indicating whether the output stream will contain the input tokens (unigrams) as well as shingles. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.OutputUnigramsIfNoShingles">
            <summary> A value indicating whether to output unigrams for those times when no shingles are available. This property takes precedence when outputUnigrams is set to false. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.TokenSeparator">
            <summary> The string to use when joining adjacent tokens to form a shingle. Default is a single space (" "). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ShingleTokenFilter.FilterToken">
            <summary> The string to insert for each position at which there is no token. Default is an underscore ("_"). </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SimilarityAlgorithm">
            <summary> Base type for similarity algorithms. Similarity algorithms are used to calculate scores that tie queries to documents. The higher the score, the more relevant the document is to that specific query. Those scores are used to rank the search results. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SimilarityAlgorithm.#ctor(System.String)">
            <summary> Initializes a new instance of SimilarityAlgorithm. </summary>
            <param name="oDataType"></param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SimilarityAlgorithm.ODataType">
            <summary> Gets or sets the o data type. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SimilarityAlgorithm.#ctor">
            <summary> Initializes a new instance of SimilarityAlgorithm. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SnowballTokenFilter">
            <summary> A filter that stems words using a Snowball-generated stemmer. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SnowballTokenFilter.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage)">
            <summary> Initializes a new instance of SnowballTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="language"> The language to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SnowballTokenFilter.#ctor(System.String,System.String,Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage)">
            <summary> Initializes a new instance of SnowballTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="language"> The language to use. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SnowballTokenFilter.Language">
            <summary> The language to use. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage">
            <summary> The language to use for a Snowball token filter. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Armenian">
            <summary> Selects the Lucene Snowball stemming tokenizer for Armenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Basque">
            <summary> Selects the Lucene Snowball stemming tokenizer for Basque. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Catalan">
            <summary> Selects the Lucene Snowball stemming tokenizer for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Danish">
            <summary> Selects the Lucene Snowball stemming tokenizer for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Dutch">
            <summary> Selects the Lucene Snowball stemming tokenizer for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.English">
            <summary> Selects the Lucene Snowball stemming tokenizer for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Finnish">
            <summary> Selects the Lucene Snowball stemming tokenizer for Finnish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.French">
            <summary> Selects the Lucene Snowball stemming tokenizer for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.German">
            <summary> Selects the Lucene Snowball stemming tokenizer for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.German2">
            <summary> Selects the Lucene Snowball stemming tokenizer that uses the German variant algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Hungarian">
            <summary> Selects the Lucene Snowball stemming tokenizer for Hungarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Italian">
            <summary> Selects the Lucene Snowball stemming tokenizer for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Kp">
            <summary> Selects the Lucene Snowball stemming tokenizer for Dutch that uses the Kraaij-Pohlmann stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Lovins">
            <summary> Selects the Lucene Snowball stemming tokenizer for English that uses the Lovins stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Norwegian">
            <summary> Selects the Lucene Snowball stemming tokenizer for Norwegian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Porter">
            <summary> Selects the Lucene Snowball stemming tokenizer for English that uses the Porter stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Portuguese">
            <summary> Selects the Lucene Snowball stemming tokenizer for Portuguese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Romanian">
            <summary> Selects the Lucene Snowball stemming tokenizer for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Russian">
            <summary> Selects the Lucene Snowball stemming tokenizer for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Spanish">
            <summary> Selects the Lucene Snowball stemming tokenizer for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Swedish">
            <summary> Selects the Lucene Snowball stemming tokenizer for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.SnowballTokenFilterLanguage.Turkish">
            <summary> Selects the Lucene Snowball stemming tokenizer for Turkish. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SoftDeleteColumnDeletionDetectionPolicy">
            <summary> Defines a data deletion detection policy that implements a soft-deletion strategy. It determines whether an item should be deleted based on the value of a designated 'soft delete' column. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SoftDeleteColumnDeletionDetectionPolicy.#ctor">
            <summary> Initializes a new instance of SoftDeleteColumnDeletionDetectionPolicy. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SoftDeleteColumnDeletionDetectionPolicy.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of SoftDeleteColumnDeletionDetectionPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data deletion detection policy. </param>
            <param name="softDeleteColumnName"> The name of the column to use for soft-deletion detection. </param>
            <param name="softDeleteMarkerValue"> The marker value that identifies an item as deleted. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SoftDeleteColumnDeletionDetectionPolicy.SoftDeleteColumnName">
            <summary> The name of the column to use for soft-deletion detection. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SoftDeleteColumnDeletionDetectionPolicy.SoftDeleteMarkerValue">
            <summary> The marker value that identifies an item as deleted. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SplitSkill">
            <summary> A skill to split a string into chunks of text. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry})">
            <summary> Initializes a new instance of SplitSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.Nullable{Azure.Search.Documents.Indexes.Models.SplitSkillLanguage},System.Nullable{Azure.Search.Documents.Indexes.Models.TextSplitMode},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of SplitSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultLanguageCode"> A value indicating which language code to use. Default is en. </param>
            <param name="textSplitMode"> A value indicating which split mode to perform. </param>
            <param name="maximumPageLength"> The desired maximum page length. Default is 10000. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkill.DefaultLanguageCode">
            <summary> A value indicating which language code to use. Default is en. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkill.TextSplitMode">
            <summary> A value indicating which split mode to perform. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkill.MaximumPageLength">
            <summary> The desired maximum page length. Default is 10000. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage">
            <summary> The language codes supported for input text by SplitSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Ko">
            <summary> Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Pt">
            <summary> Portuguese. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.SplitSkillLanguage,Azure.Search.Documents.Indexes.Models.SplitSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.SplitSkillLanguage,Azure.Search.Documents.Indexes.Models.SplitSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.SplitSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.SplitSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SplitSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SqlIntegratedChangeTrackingPolicy">
            <summary> Defines a data change detection policy that captures changes using the Integrated Change Tracking feature of Azure SQL Database. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SqlIntegratedChangeTrackingPolicy.#ctor">
            <summary> Initializes a new instance of SqlIntegratedChangeTrackingPolicy. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SqlIntegratedChangeTrackingPolicy.#ctor(System.String)">
            <summary> Initializes a new instance of SqlIntegratedChangeTrackingPolicy. </summary>
            <param name="oDataType"> Identifies the concrete type of the data change detection policy. </param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.StemmerOverrideTokenFilter">
            <summary> Provides the ability to override other stemming filters with custom dictionary-based stemming. Any dictionary-stemmed terms will be marked as keywords so that they will not be stemmed with stemmers down the chain. Must be placed before any stemming filters. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StemmerOverrideTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of StemmerOverrideTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="rules"> A list of stemming rules in the following format: "word =&gt; stem", for example: "ran =&gt; run". </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="rules" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StemmerOverrideTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of StemmerOverrideTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="rules"> A list of stemming rules in the following format: "word =&gt; stem", for example: "ran =&gt; run". </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StemmerOverrideTokenFilter.Rules">
            <summary> A list of stemming rules in the following format: "word =&gt; stem", for example: "ran =&gt; run". </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.StemmerTokenFilter">
            <summary> Language specific stemming filter. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StemmerTokenFilter.#ctor(System.String,Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage)">
            <summary> Initializes a new instance of StemmerTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="language"> The language to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StemmerTokenFilter.#ctor(System.String,System.String,Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage)">
            <summary> Initializes a new instance of StemmerTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="language"> The language to use. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StemmerTokenFilter.Language">
            <summary> The language to use. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage">
            <summary> The language to use for a stemmer token filter. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Arabic">
            <summary> Selects the Lucene stemming tokenizer for Arabic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Armenian">
            <summary> Selects the Lucene stemming tokenizer for Armenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Basque">
            <summary> Selects the Lucene stemming tokenizer for Basque. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Brazilian">
            <summary> Selects the Lucene stemming tokenizer for Portuguese (Brazil). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Bulgarian">
            <summary> Selects the Lucene stemming tokenizer for Bulgarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Catalan">
            <summary> Selects the Lucene stemming tokenizer for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Czech">
            <summary> Selects the Lucene stemming tokenizer for Czech. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Danish">
            <summary> Selects the Lucene stemming tokenizer for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Dutch">
            <summary> Selects the Lucene stemming tokenizer for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.DutchKp">
            <summary> Selects the Lucene stemming tokenizer for Dutch that uses the Kraaij-Pohlmann stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.English">
            <summary> Selects the Lucene stemming tokenizer for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightEnglish">
            <summary> Selects the Lucene stemming tokenizer for English that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalEnglish">
            <summary> Selects the Lucene stemming tokenizer for English that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.PossessiveEnglish">
            <summary> Selects the Lucene stemming tokenizer for English that removes trailing possessives from words. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Porter2">
            <summary> Selects the Lucene stemming tokenizer for English that uses the Porter2 stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Lovins">
            <summary> Selects the Lucene stemming tokenizer for English that uses the Lovins stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Finnish">
            <summary> Selects the Lucene stemming tokenizer for Finnish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightFinnish">
            <summary> Selects the Lucene stemming tokenizer for Finnish that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.French">
            <summary> Selects the Lucene stemming tokenizer for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightFrench">
            <summary> Selects the Lucene stemming tokenizer for French that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalFrench">
            <summary> Selects the Lucene stemming tokenizer for French that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Galician">
            <summary> Selects the Lucene stemming tokenizer for Galician. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalGalician">
            <summary> Selects the Lucene stemming tokenizer for Galician that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.German">
            <summary> Selects the Lucene stemming tokenizer for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.German2">
            <summary> Selects the Lucene stemming tokenizer that uses the German variant algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightGerman">
            <summary> Selects the Lucene stemming tokenizer for German that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalGerman">
            <summary> Selects the Lucene stemming tokenizer for German that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Greek">
            <summary> Selects the Lucene stemming tokenizer for Greek. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Hindi">
            <summary> Selects the Lucene stemming tokenizer for Hindi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Hungarian">
            <summary> Selects the Lucene stemming tokenizer for Hungarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightHungarian">
            <summary> Selects the Lucene stemming tokenizer for Hungarian that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Indonesian">
            <summary> Selects the Lucene stemming tokenizer for Indonesian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Irish">
            <summary> Selects the Lucene stemming tokenizer for Irish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Italian">
            <summary> Selects the Lucene stemming tokenizer for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightItalian">
            <summary> Selects the Lucene stemming tokenizer for Italian that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Sorani">
            <summary> Selects the Lucene stemming tokenizer for Sorani. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Latvian">
            <summary> Selects the Lucene stemming tokenizer for Latvian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Norwegian">
            <summary> Selects the Lucene stemming tokenizer for Norwegian (Bokmål). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightNorwegian">
            <summary> Selects the Lucene stemming tokenizer for Norwegian (Bokmål) that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalNorwegian">
            <summary> Selects the Lucene stemming tokenizer for Norwegian (Bokmål) that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightNynorsk">
            <summary> Selects the Lucene stemming tokenizer for Norwegian (Nynorsk) that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalNynorsk">
            <summary> Selects the Lucene stemming tokenizer for Norwegian (Nynorsk) that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Portuguese">
            <summary> Selects the Lucene stemming tokenizer for Portuguese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightPortuguese">
            <summary> Selects the Lucene stemming tokenizer for Portuguese that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.MinimalPortuguese">
            <summary> Selects the Lucene stemming tokenizer for Portuguese that does minimal stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.PortugueseRslp">
            <summary> Selects the Lucene stemming tokenizer for Portuguese that uses the RSLP stemming algorithm. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Romanian">
            <summary> Selects the Lucene stemming tokenizer for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Russian">
            <summary> Selects the Lucene stemming tokenizer for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightRussian">
            <summary> Selects the Lucene stemming tokenizer for Russian that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Spanish">
            <summary> Selects the Lucene stemming tokenizer for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightSpanish">
            <summary> Selects the Lucene stemming tokenizer for Spanish that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Swedish">
            <summary> Selects the Lucene stemming tokenizer for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.LightSwedish">
            <summary> Selects the Lucene stemming tokenizer for Swedish that does light stemming. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StemmerTokenFilterLanguage.Turkish">
            <summary> Selects the Lucene stemming tokenizer for Turkish. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.StopAnalyzer">
            <summary> Divides text at non-letters; Applies the lowercase and stopword token filters. This analyzer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StopAnalyzer.#ctor(System.String)">
            <summary> Initializes a new instance of StopAnalyzer. </summary>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StopAnalyzer.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of StopAnalyzer. </summary>
            <param name="oDataType"> Identifies the concrete type of the analyzer. </param>
            <param name="name"> The name of the analyzer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="stopwords"> A list of stopwords. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StopAnalyzer.Stopwords">
            <summary> A list of stopwords. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.StopwordsList">
            <summary> Identifies a predefined list of language-specific stopwords. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Arabic">
            <summary> Selects the stopword list for Arabic. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Armenian">
            <summary> Selects the stopword list for Armenian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Basque">
            <summary> Selects the stopword list for Basque. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Brazilian">
            <summary> Selects the stopword list for Portuguese (Brazil). </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Bulgarian">
            <summary> Selects the stopword list for Bulgarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Catalan">
            <summary> Selects the stopword list for Catalan. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Czech">
            <summary> Selects the stopword list for Czech. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Danish">
            <summary> Selects the stopword list for Danish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Dutch">
            <summary> Selects the stopword list for Dutch. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.English">
            <summary> Selects the stopword list for English. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Finnish">
            <summary> Selects the stopword list for Finnish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.French">
            <summary> Selects the stopword list for French. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Galician">
            <summary> Selects the stopword list for Galician. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.German">
            <summary> Selects the stopword list for German. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Greek">
            <summary> Selects the stopword list for Greek. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Hindi">
            <summary> Selects the stopword list for Hindi. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Hungarian">
            <summary> Selects the stopword list for Hungarian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Indonesian">
            <summary> Selects the stopword list for Indonesian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Irish">
            <summary> Selects the stopword list for Irish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Italian">
            <summary> Selects the stopword list for Italian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Latvian">
            <summary> Selects the stopword list for Latvian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Norwegian">
            <summary> Selects the stopword list for Norwegian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Persian">
            <summary> Selects the stopword list for Persian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Portuguese">
            <summary> Selects the stopword list for Portuguese. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Romanian">
            <summary> Selects the stopword list for Romanian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Russian">
            <summary> Selects the stopword list for Russian. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Sorani">
            <summary> Selects the stopword list for Sorani. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Spanish">
            <summary> Selects the stopword list for Spanish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Swedish">
            <summary> Selects the stopword list for Swedish. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Thai">
            <summary> Selects the stopword list for Thai. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.StopwordsList.Turkish">
            <summary> Selects the stopword list for Turkish. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter">
            <summary> Removes stop words from a token stream. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of StopwordsTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{Azure.Search.Documents.Indexes.Models.StopwordsList},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of StopwordsTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="stopwords"> The list of stopwords. This property and the stopwords list property cannot both be set. </param>
            <param name="stopwordsList"> A predefined list of stopwords to use. This property and the stopwords property cannot both be set. Default is English. </param>
            <param name="ignoreCase"> A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false. </param>
            <param name="removeTrailingStopWords"> A value indicating whether to ignore the last search term if it's a stop word. Default is true. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter.StopwordsList">
            <summary> A predefined list of stopwords to use. This property and the stopwords property cannot both be set. Default is English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter.IgnoreCase">
            <summary> A value indicating whether to ignore case. If true, all words are converted to lower case first. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter.RemoveTrailingStopWords">
            <summary> A value indicating whether to ignore the last search term if it's a stop word. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.StopwordsTokenFilter.Stopwords">
            <summary> The list of stopwords. This property and the stopwords list property cannot both be set. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SynonymMap">
            <summary> Represents a synonym map definition. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SynonymMap.#ctor(System.String,System.String,System.String,Azure.Search.Documents.Indexes.Models.SearchResourceEncryptionKey,System.String)">
            <summary> Initializes a new instance of SynonymMap. </summary>
            <param name="name"> The name of the synonym map. </param>
            <param name="format"> The format of the synonym map. Only the 'solr' format is currently supported. </param>
            <param name="synonyms"> A series of synonym rules in the specified synonym map format. The rules must be separated by newlines. </param>
            <param name="encryptionKey"> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </param>
            <param name="etag"> The ETag of the synonym map. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name">
            <summary> The name of the synonym map. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Synonyms">
            <summary> A series of synonym rules in the specified synonym map format. The rules must be separated by newlines. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymMap.EncryptionKey">
            <summary> A description of an encryption key that you create in Azure Key Vault. This key is used to provide an additional level of encryption-at-rest for your data when you want full assurance that no one, not even Microsoft, can decrypt your data in Azure Cognitive Search. Once you have encrypted your data, it will always remain encrypted. Azure Cognitive Search will ignore attempts to set this property to null. You can change this property as needed if you want to rotate your encryption key; Your data will be unaffected. Encryption with customer-managed keys is not available for free search services, and is only available for paid services created on or after January 1, 2019. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SynonymMap.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> class.
            </summary>
            <param name="name">The name of the synonym map.</param>
            <param name="synonyms">
            The formatted synonyms string to define.
            Because only the "solr" synonym map format is currently supported, these are values delimited by "\n".
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> or <paramref name="synonyms" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> or <paramref name="synonyms" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SynonymMap.#ctor(System.String,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> class.
            </summary>
            <param name="name">The name of the synonym map.</param>
            <param name="reader">
            A <see cref="T:System.IO.TextReader" /> from which formatted synonyms are read.
            Because only the "solr" synonym map format is currently supported, these are values delimited by "\n".
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> or <paramref name="reader" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag">
            <summary>
            The <see cref="T:Azure.ETag" /> of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Format">
            <summary> The format of the synonym map. Only the "solr" format is currently supported. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SynonymTokenFilter">
            <summary> Matches single or multi-word synonyms in a token stream. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SynonymTokenFilter.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of SynonymTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="synonyms"> A list of synonyms in following one of two formats: 1. incredible, unbelievable, fabulous =&gt; amazing - all terms on the left side of =&gt; symbol will be replaced with all terms on its right side; 2. incredible, unbelievable, fabulous, amazing - comma separated list of equivalent words. Set the expand option to change how this list is interpreted. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="synonyms" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SynonymTokenFilter.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of SynonymTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="synonyms"> A list of synonyms in following one of two formats: 1. incredible, unbelievable, fabulous =&gt; amazing - all terms on the left side of =&gt; symbol will be replaced with all terms on its right side; 2. incredible, unbelievable, fabulous, amazing - comma separated list of equivalent words. Set the expand option to change how this list is interpreted. </param>
            <param name="ignoreCase"> A value indicating whether to case-fold input for matching. Default is false. </param>
            <param name="expand"> A value indicating whether all words in the list of synonyms (if =&gt; notation is not used) will map to one another. If true, all words in the list of synonyms (if =&gt; notation is not used) will map to one another. The following list: incredible, unbelievable, fabulous, amazing is equivalent to: incredible, unbelievable, fabulous, amazing =&gt; incredible, unbelievable, fabulous, amazing. If false, the following list: incredible, unbelievable, fabulous, amazing will be equivalent to: incredible, unbelievable, fabulous, amazing =&gt; incredible. Default is true. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymTokenFilter.IgnoreCase">
            <summary> A value indicating whether to case-fold input for matching. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymTokenFilter.Expand">
            <summary> A value indicating whether all words in the list of synonyms (if =&gt; notation is not used) will map to one another. If true, all words in the list of synonyms (if =&gt; notation is not used) will map to one another. The following list: incredible, unbelievable, fabulous, amazing is equivalent to: incredible, unbelievable, fabulous, amazing =&gt; incredible, unbelievable, fabulous, amazing. If false, the following list: incredible, unbelievable, fabulous, amazing will be equivalent to: incredible, unbelievable, fabulous, amazing =&gt; incredible. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SynonymTokenFilter.Synonyms">
            <summary> A list of synonyms in following one of two formats: 1. incredible, unbelievable, fabulous =&gt; amazing - all terms on the left side of =&gt; symbol will be replaced with all terms on its right side; 2. incredible, unbelievable, fabulous, amazing - comma separated list of equivalent words. Set the expand option to change how this list is interpreted. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TagScoringFunction">
            <summary> Defines a function that boosts scores of documents with string values matching a given list of tags. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TagScoringFunction.#ctor(System.String,System.String,System.Double,System.Nullable{Azure.Search.Documents.Indexes.Models.ScoringFunctionInterpolation},Azure.Search.Documents.Indexes.Models.TagScoringParameters)">
            <summary> Initializes a new instance of TagScoringFunction. </summary>
            <param name="type"> Indicates the type of function to use. Valid values include magnitude, freshness, distance, and tag. The function type must be lower case. </param>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="interpolation"> A value indicating how boosting will be interpolated across document scores; defaults to "Linear". </param>
            <param name="parameters"> Parameter values for the tag scoring function. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TagScoringFunction.Parameters">
            <summary> Parameter values for the tag scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TagScoringFunction.#ctor(System.String,System.Double,Azure.Search.Documents.Indexes.Models.TagScoringParameters)">
            <summary> Initializes a new instance of TagScoringFunction. </summary>
            <param name="fieldName"> The name of the field used as input to the scoring function. </param>
            <param name="boost"> A multiplier for the raw score. Must be a positive number not equal to 1.0. </param>
            <param name="parameters"> Parameter values for the tag scoring function. </param>
            <exception cref="T:System.ArgumentException"><paramref name="fieldName" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fieldName" /> or <paramref name="parameters" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TagScoringParameters">
            <summary> Provides parameter values to a tag scoring function. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TagScoringParameters.#ctor(System.String)">
            <summary> Initializes a new instance of TagScoringParameters. </summary>
            <param name="tagsParameter"> The name of the parameter passed in search queries to specify the list of tags to compare against the target field. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tagsParameter" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TagScoringParameters.TagsParameter">
            <summary> The name of the parameter passed in search queries to specify the list of tags to compare against the target field. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TextSplitMode">
            <summary> A value indicating which split mode to perform. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.TextSplitMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextSplitMode.Pages">
            <summary> Split the text into individual pages. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextSplitMode.Sentences">
            <summary> Split the text into individual sentences. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.op_Equality(Azure.Search.Documents.Indexes.Models.TextSplitMode,Azure.Search.Documents.Indexes.Models.TextSplitMode)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TextSplitMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.op_Inequality(Azure.Search.Documents.Indexes.Models.TextSplitMode,Azure.Search.Documents.Indexes.Models.TextSplitMode)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TextSplitMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.TextSplitMode">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.TextSplitMode" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.Equals(Azure.Search.Documents.Indexes.Models.TextSplitMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextSplitMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TextTranslationSkill">
            <summary> A skill to translate text from one language to another. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage)">
            <summary> Initializes a new instance of TextTranslationSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultToLanguageCode"> The language code to translate documents into for documents that don't specify the to language explicitly. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" /> or <paramref name="outputs" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage,System.Nullable{Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage},System.Nullable{Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage})">
            <summary> Initializes a new instance of TextTranslationSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="defaultToLanguageCode"> The language code to translate documents into for documents that don't specify the to language explicitly. </param>
            <param name="defaultFromLanguageCode"> The language code to translate documents from for documents that don't specify the from language explicitly. </param>
            <param name="suggestedFrom"> The language code to translate documents from when neither the fromLanguageCode input nor the defaultFromLanguageCode parameter are provided, and the automatic language detection is unsuccessful. Default is en. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkill.DefaultToLanguageCode">
            <summary> The language code to translate documents into for documents that don't specify the to language explicitly. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkill.DefaultFromLanguageCode">
            <summary> The language code to translate documents from for documents that don't specify the from language explicitly. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkill.SuggestedFrom">
            <summary> The language code to translate documents from when neither the fromLanguageCode input nor the defaultFromLanguageCode parameter are provided, and the automatic language detection is unsuccessful. Default is en. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage">
            <summary> The language codes supported for input text by TextTranslationSkill. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Af">
            <summary> Afrikaans. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ar">
            <summary> Arabic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Bn">
            <summary> Bangla. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Bs">
            <summary> Bosnian (Latin). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Bg">
            <summary> Bulgarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Yue">
            <summary> Cantonese (Traditional). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ca">
            <summary> Catalan. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.ZhHans">
            <summary> Chinese Simplified. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.ZhHant">
            <summary> Chinese Traditional. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Hr">
            <summary> Croatian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Cs">
            <summary> Czech. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Da">
            <summary> Danish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Nl">
            <summary> Dutch. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.En">
            <summary> English. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Et">
            <summary> Estonian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Fj">
            <summary> Fijian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Fil">
            <summary> Filipino. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Fi">
            <summary> Finnish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Fr">
            <summary> French. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.De">
            <summary> German. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.El">
            <summary> Greek. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ht">
            <summary> Haitian Creole. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.He">
            <summary> Hebrew. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Hi">
            <summary> Hindi. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Mww">
            <summary> Hmong Daw. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Hu">
            <summary> Hungarian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Is">
            <summary> Icelandic. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Id">
            <summary> Indonesian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.It">
            <summary> Italian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ja">
            <summary> Japanese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Sw">
            <summary> Kiswahili. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Tlh">
            <summary> Klingon. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ko">
            <summary> Korean. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Lv">
            <summary> Latvian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Lt">
            <summary> Lithuanian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Mg">
            <summary> Malagasy. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ms">
            <summary> Malay. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Mt">
            <summary> Maltese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Nb">
            <summary> Norwegian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Fa">
            <summary> Persian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Pl">
            <summary> Polish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Pt">
            <summary> Portuguese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Otq">
            <summary> Queretaro Otomi. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ro">
            <summary> Romanian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ru">
            <summary> Russian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Sm">
            <summary> Samoan. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.SrCyrl">
            <summary> Serbian (Cyrillic). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.SrLatn">
            <summary> Serbian (Latin). </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Sk">
            <summary> Slovak. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Sl">
            <summary> Slovenian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Es">
            <summary> Spanish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Sv">
            <summary> Swedish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ty">
            <summary> Tahitian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ta">
            <summary> Tamil. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Te">
            <summary> Telugu. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Th">
            <summary> Thai. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.To">
            <summary> Tongan. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Tr">
            <summary> Turkish. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Uk">
            <summary> Ukrainian. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Ur">
            <summary> Urdu. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Vi">
            <summary> Vietnamese. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Cy">
            <summary> Welsh. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Yua">
            <summary> Yucatec Maya. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.op_Equality(Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage,Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.op_Inequality(Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage,Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.Equals(Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextTranslationSkillLanguage.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TextWeights">
            <summary> Defines weights on index fields for which matches should boost scoring in search queries. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TextWeights.#ctor(System.Collections.Generic.IDictionary{System.String,System.Double})">
            <summary> Initializes a new instance of TextWeights. </summary>
            <param name="weights"> The dictionary of per-field weights to boost document scoring. The keys are field names and the values are the weights for each field. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="weights" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TextWeights.Weights">
            <summary> The dictionary of per-field weights to boost document scoring. The keys are field names and the values are the weights for each field. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TokenCharacterKind">
            <summary> Represents classes of characters on which a token filter can operate. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.TokenCharacterKind.Letter">
            <summary> Keeps letters in tokens. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.TokenCharacterKind.Digit">
            <summary> Keeps digits in tokens. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.TokenCharacterKind.Whitespace">
            <summary> Keeps whitespace in tokens. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.TokenCharacterKind.Punctuation">
            <summary> Keeps punctuation in tokens. </summary>
        </member>
        <member name="F:Azure.Search.Documents.Indexes.Models.TokenCharacterKind.Symbol">
            <summary> Keeps symbols in tokens. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TokenFilter">
            <summary> Base type for token filters. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilter.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of TokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilter.ODataType">
            <summary> Identifies the concrete type of the token filter. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilter.Name">
            <summary> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of TokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TokenFilterName">
            <summary> Defines the names of all token filters supported by Azure Cognitive Search. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.ArabicNormalization">
            <summary> A token filter that applies the Arabic normalizer to normalize the orthography. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Apostrophe">
            <summary> Strips all characters after an apostrophe (including the apostrophe itself). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.AsciiFolding">
            <summary> Converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the "Basic Latin" Unicode block) into their ASCII equivalents, if such equivalents exist. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.CjkBigram">
            <summary> Forms bigrams of CJK terms that are generated from the standard tokenizer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.CjkWidth">
            <summary> Normalizes CJK width differences. Folds fullwidth ASCII variants into the equivalent basic Latin, and half-width Katakana variants into the equivalent Kana. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Classic">
            <summary> Removes English possessives, and dots from acronyms. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.CommonGram">
            <summary> Construct bigrams for frequently occurring terms while indexing. Single terms are still indexed too, with bigrams overlaid. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.EdgeNGram">
            <summary> Generates n-grams of the given size(s) starting from the front or the back of an input token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Elision">
            <summary> Removes elisions. For example, "l'avion" (the plane) will be converted to "avion" (plane). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.GermanNormalization">
            <summary> Normalizes German characters according to the heuristics of the German2 snowball algorithm. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.HindiNormalization">
            <summary> Normalizes text in Hindi to remove some differences in spelling variations. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.IndicNormalization">
            <summary> Normalizes the Unicode representation of text in Indian languages. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.KeywordRepeat">
            <summary> Emits each incoming token twice, once as keyword and once as non-keyword. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.KStem">
            <summary> A high-performance kstem filter for English. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Length">
            <summary> Removes words that are too long or too short. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Limit">
            <summary> Limits the number of tokens while indexing. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Lowercase">
            <summary> Normalizes token text to lower case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.htm. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.NGram">
            <summary> Generates n-grams of the given size(s). See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.PersianNormalization">
            <summary> Applies normalization for Persian. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Phonetic">
            <summary> Create tokens for phonetic matches. See https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.PorterStem">
            <summary> Uses the Porter stemming algorithm to transform the token stream. See http://tartarus.org/~martin/PorterStemmer. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Reverse">
            <summary> Reverses the token string. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.ScandinavianNormalization">
            <summary> Normalizes use of the interchangeable Scandinavian characters. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.ScandinavianFoldingNormalization">
            <summary> Folds Scandinavian characters åÅäæÄÆ-&amp;gt;a and öÖøØ-&amp;gt;o. It also discriminates against use of double vowels aa, ae, ao, oe and oo, leaving just the first one. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Shingle">
            <summary> Creates combinations of tokens as a single token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Snowball">
            <summary> A filter that stems words using a Snowball-generated stemmer. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.SoraniNormalization">
            <summary> Normalizes the Unicode representation of Sorani text. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Stemmer">
            <summary> Language specific stemming filter. See https://docs.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Stopwords">
            <summary> Removes stop words from a token stream. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Trim">
            <summary> Trims leading and trailing whitespace from tokens. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Truncate">
            <summary> Truncates the terms to a specific length. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Unique">
            <summary> Filters out tokens with same text as the previous token. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.Uppercase">
            <summary> Normalizes token text to upper case. See http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TokenFilterName.WordDelimiter">
            <summary> Splits words into subwords and performs optional transformations on subword groups. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Equality(Azure.Search.Documents.Indexes.Models.TokenFilterName,Azure.Search.Documents.Indexes.Models.TokenFilterName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Inequality(Azure.Search.Documents.Indexes.Models.TokenFilterName,Azure.Search.Documents.Indexes.Models.TokenFilterName)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.TokenFilterName">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.TokenFilterName" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.Equals(Azure.Search.Documents.Indexes.Models.TokenFilterName)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TokenFilterName.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.TruncateTokenFilter">
            <summary> Truncates the terms to a specific length. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TruncateTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of TruncateTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.TruncateTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of TruncateTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="length"> The length at which terms will be truncated. Default and maximum is 300. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.TruncateTokenFilter.Length">
            <summary> The length at which terms will be truncated. Default and maximum is 300. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.UaxUrlEmailTokenizer">
            <summary> Tokenizes urls and emails as one token. This tokenizer is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.UaxUrlEmailTokenizer.#ctor(System.String)">
            <summary> Initializes a new instance of UaxUrlEmailTokenizer. </summary>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.UaxUrlEmailTokenizer.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of UaxUrlEmailTokenizer. </summary>
            <param name="oDataType"> Identifies the concrete type of the tokenizer. </param>
            <param name="name"> The name of the tokenizer. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="maxTokenLength"> The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.UaxUrlEmailTokenizer.MaxTokenLength">
            <summary> The maximum token length. Default is 255. Tokens longer than the maximum length are split. The maximum token length that can be used is 300 characters. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.UniqueTokenFilter">
            <summary> Filters out tokens with same text as the previous token. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.UniqueTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of UniqueTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.UniqueTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of UniqueTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="onlyOnSamePosition"> A value indicating whether to remove duplicates only at the same position. Default is false. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.UniqueTokenFilter.OnlyOnSamePosition">
            <summary> A value indicating whether to remove duplicates only at the same position. Default is false. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.VisualFeature">
            <summary> The strings indicating what visual feature types to return. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Search.Documents.Indexes.Models.VisualFeature" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Adult">
            <summary> Visual features recognized as adult persons. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Brands">
            <summary> Visual features recognized as commercial brands. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Categories">
            <summary> Categories. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Description">
            <summary> Description. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Faces">
            <summary> Visual features recognized as people faces. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Objects">
            <summary> Visual features recognized as objects. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.VisualFeature.Tags">
            <summary> Tags. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.op_Equality(Azure.Search.Documents.Indexes.Models.VisualFeature,Azure.Search.Documents.Indexes.Models.VisualFeature)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.VisualFeature" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.op_Inequality(Azure.Search.Documents.Indexes.Models.VisualFeature,Azure.Search.Documents.Indexes.Models.VisualFeature)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.Indexes.Models.VisualFeature" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.op_Implicit(System.String)~Azure.Search.Documents.Indexes.Models.VisualFeature">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.Indexes.Models.VisualFeature" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.Equals(Azure.Search.Documents.Indexes.Models.VisualFeature)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.VisualFeature.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.WebApiSkill">
            <summary> A skill that can call a Web API endpoint, allowing you to extend a skillset by having it call your custom code. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.WebApiSkill.#ctor(System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IEnumerable{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.String)">
            <summary> Initializes a new instance of WebApiSkill. </summary>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="uri"> The url for the Web API. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="inputs" />, <paramref name="outputs" /> or <paramref name="uri" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.WebApiSkill.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.InputFieldMappingEntry},System.Collections.Generic.IList{Azure.Search.Documents.Indexes.Models.OutputFieldMappingEntry},System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of WebApiSkill. </summary>
            <param name="oDataType"> Identifies the concrete type of the skill. </param>
            <param name="name"> The name of the skill which uniquely identifies it within the skillset. A skill with no name defined will be given a default name of its 1-based index in the skills array, prefixed with the character '#'. </param>
            <param name="description"> The description of the skill which describes the inputs, outputs, and usage of the skill. </param>
            <param name="context"> Represents the level at which operations take place, such as the document root or document content (for example, /document or /document/content). The default is /document. </param>
            <param name="inputs"> Inputs of the skills could be a column in the source data set, or the output of an upstream skill. </param>
            <param name="outputs"> The output of a skill is either a field in a search index, or a value that can be consumed as an input by another skill. </param>
            <param name="uri"> The url for the Web API. </param>
            <param name="httpHeaders"> The headers required to make the http request. </param>
            <param name="httpMethod"> The method for the http request. </param>
            <param name="timeout"> The desired timeout for the request. Default is 30 seconds. </param>
            <param name="batchSize"> The desired batch size which indicates number of documents. </param>
            <param name="degreeOfParallelism"> If set, the number of parallel calls that can be made to the Web API. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WebApiSkill.Uri">
            <summary> The url for the Web API. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WebApiSkill.HttpMethod">
            <summary> The method for the http request. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WebApiSkill.Timeout">
            <summary> The desired timeout for the request. Default is 30 seconds. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WebApiSkill.BatchSize">
            <summary> The desired batch size which indicates number of documents. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WebApiSkill.DegreeOfParallelism">
            <summary> If set, the number of parallel calls that can be made to the Web API. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WebApiSkill.HttpHeaders">
            <summary> The headers required to make the http request. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter">
            <summary> Splits words into subwords and performs optional transformations on subword groups. This token filter is implemented using Apache Lucene. </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.#ctor(System.String)">
            <summary> Initializes a new instance of WordDelimiterTokenFilter. </summary>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String})">
            <summary> Initializes a new instance of WordDelimiterTokenFilter. </summary>
            <param name="oDataType"> Identifies the concrete type of the token filter. </param>
            <param name="name"> The name of the token filter. It must only contain letters, digits, spaces, dashes or underscores, can only start and end with alphanumeric characters, and is limited to 128 characters. </param>
            <param name="generateWordParts"> A value indicating whether to generate part words. If set, causes parts of words to be generated; for example "AzureSearch" becomes "Azure" "Search". Default is true. </param>
            <param name="generateNumberParts"> A value indicating whether to generate number subwords. Default is true. </param>
            <param name="catenateWords"> A value indicating whether maximum runs of word parts will be catenated. For example, if this is set to true, "Azure-Search" becomes "AzureSearch". Default is false. </param>
            <param name="catenateNumbers"> A value indicating whether maximum runs of number parts will be catenated. For example, if this is set to true, "1-2" becomes "12". Default is false. </param>
            <param name="catenateAll"> A value indicating whether all subword parts will be catenated. For example, if this is set to true, "Azure-Search-1" becomes "AzureSearch1". Default is false. </param>
            <param name="splitOnCaseChange"> A value indicating whether to split words on caseChange. For example, if this is set to true, "AzureSearch" becomes "Azure" "Search". Default is true. </param>
            <param name="preserveOriginal"> A value indicating whether original words will be preserved and added to the subword list. Default is false. </param>
            <param name="splitOnNumerics"> A value indicating whether to split on numbers. For example, if this is set to true, "Azure1Search" becomes "Azure" "1" "Search". Default is true. </param>
            <param name="stemEnglishPossessive"> A value indicating whether to remove trailing "'s" for each subword. Default is true. </param>
            <param name="protectedWords"> A list of tokens to protect from being delimited. </param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.GenerateWordParts">
            <summary> A value indicating whether to generate part words. If set, causes parts of words to be generated; for example "AzureSearch" becomes "Azure" "Search". Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.GenerateNumberParts">
            <summary> A value indicating whether to generate number subwords. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.CatenateWords">
            <summary> A value indicating whether maximum runs of word parts will be catenated. For example, if this is set to true, "Azure-Search" becomes "AzureSearch". Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.CatenateNumbers">
            <summary> A value indicating whether maximum runs of number parts will be catenated. For example, if this is set to true, "1-2" becomes "12". Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.CatenateAll">
            <summary> A value indicating whether all subword parts will be catenated. For example, if this is set to true, "Azure-Search-1" becomes "AzureSearch1". Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.SplitOnCaseChange">
            <summary> A value indicating whether to split words on caseChange. For example, if this is set to true, "AzureSearch" becomes "Azure" "Search". Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.PreserveOriginal">
            <summary> A value indicating whether original words will be preserved and added to the subword list. Default is false. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.SplitOnNumerics">
            <summary> A value indicating whether to split on numbers. For example, if this is set to true, "Azure1Search" becomes "Azure" "1" "Search". Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.StemEnglishPossessive">
            <summary> A value indicating whether to remove trailing "'s" for each subword. Default is true. </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.WordDelimiterTokenFilter.ProtectedWords">
            <summary> A list of tokens to protect from being delimited. </summary>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.ComplexField">
            <summary>
            A complex field or collection of complex fields that contain child fields.
            Child fields may be <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" /> or <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ComplexField.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> class.
            </summary>
            <param name="name">The name of the field, which must be unique within the index or parent field.</param>
            <param name="collection">Whether the field is a collection of strings.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ComplexField.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> class.
            </summary>
            <param name="name">The name of the field, which must be unique within the index or parent field.</param>
            <param name="type">The data type of the field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
            <remarks>
            This is used internally by FieldBuilder to avoid detecting if the type is a collection just
            to return the same type we started with.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.ComplexField.Fields">
            <summary>
            Gets a collection of <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" /> or <see cref="T:Azure.Search.Documents.Indexes.Models.ComplexField" /> child fields.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.ComplexField.Save(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Persists class-specific properties into the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> into which properties are persisted.</param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchableField">
            <summary>
            A <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(String)" field that can be searched.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchableField.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchableField" /> class.
            </summary>
            <param name="name">The name of the field, which must be unique within the index or parent field.</param>
            <param name="collection">Whether the field is a collection of strings.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchableField.AnalyzerName">
            <summary>
            Gets or sets the name of the language analyzer. This property cannot be set when either <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.SearchAnalyzerName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.IndexAnalyzerName" /> are set.
            Once the analyzer is chosen, it cannot be changed for the field in the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchableField.SearchAnalyzerName">
            <summary>
            Gets or sets the name of the language analyzer for searching. This property must be set together with <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.IndexAnalyzerName" />, and cannot be set when <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.AnalyzerName" /> is set.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.AnalyzerName" /> property instead if you need a language analyzer.
            Once the analyzer is chosen, it cannot be changed for the field in the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchableField.IndexAnalyzerName">
            <summary>
            Gets or sets the name of the language analyzer for indexing. This property must be set together with <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.SearchAnalyzerName" />, and cannot be set when <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.AnalyzerName" /> is set.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchableField.AnalyzerName" /> property instead if you need a language analyzer.
            Once the analyzer is chosen, it cannot be changed for the field in the index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchableField.SynonymMapNames">
            <summary>
            Gets a list of names of synonym maps to associate with this field.
            Currently, only one synonym map per field is supported.
            </summary>
            <remarks>
            Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map.
            This attribute can be changed on existing fields.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchableField.Save(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Persists class-specific properties into the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> into which properties are persisted.</param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate">
            <summary>
            Base field type for helper classes to more easily create a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate" /> class.
            </summary>
            <param name="name">The name of the field, which must be unique within the index or parent field.</param>
            <param name="type">The data type of the field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate.Name">
            <summary>
            Gets the name of the field.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate.Type">
            <summary>
            Gets the data type of the field.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate.Save(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Persists class-specific properties into the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> into which properties are persisted.</param>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate.op_Implicit(Azure.Search.Documents.Indexes.Models.SearchFieldTemplate)~Azure.Search.Documents.Indexes.Models.SearchField">
            <summary>
            Casts a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate" /> or derivative to a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />.
            </summary>
            <param name="value">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchFieldTemplate" /> or derivative to cast.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.Models.SimpleField">
            <summary>
            A simple field using a primitive type or a collection of a primitive type.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SimpleField.#ctor(System.String,Azure.Search.Documents.Indexes.Models.SearchFieldDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.Models.SimpleField" /> class.
            </summary>
            <param name="name">The name of the field, which must be unique within the index or parent field.</param>
            <param name="type">The data type of the field.</param>
            <exception cref="T:System.ArgumentException"><paramref name="name" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsKey">
            <summary>
            Gets or sets whether the field is the key field. The default is false.
            A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> must have exactly one key field of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsHidden">
            <summary>
            Gets or sets whether the field is returned in search results. The default is false.
            A key field where <see cref="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsKey" /> is true must have this property set to false.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsFilterable">
            <summary>
            Gets or sets a value indicating whether the field can be referenced in <c>$filter</c> queries. The default is false.
            </summary>
            <remarks>
            Filterable differs from searchable in how strings are handled. Fields of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)" that are filterable do not undergo word-breaking, so comparisons are for exact matches only.
            For example, if you set such a field <c>f</c> to "sunny day", <c>$filter=f eq 'sunny'</c> will find no matches, but <c>$filter=f eq 'sunny day'</c> will.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsFacetable">
            <summary>
            Gets or sets a value indicating whether the field can be retrieved in facet queries. The default is false.
            </summary>
            <remarks>
            Facets are used in presentation of search results that include hit counts by categories.
            For example, in a search for digital cameras, facets might include branch, megapixels, price, etc.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.SimpleField.IsSortable">
            <summary>
            Gets or sets a value indicating whether to enable the field can be referenced in <c>$orderby</c> expressions. The default is false.
            </summary>
            <remarks>
            By default Azure Cognitive Search sorts results by score, but in many experiences users may want to sort by fields in the documents.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.SimpleField.Save(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Persists class-specific properties into the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> into which properties are persisted.</param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.FieldBuilder">
            <summary>
            Builds field definitions for a search index by reflecting over a user-defined model type.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.FieldBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.FieldBuilder" /> class.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.FieldBuilder.Serializer">
            <summary>
            Gets or sets the <see cref="T:Azure.Core.Serialization.ObjectSerializer" /> to use to generate field names that match JSON property names.
            You should use the same value as <see cref="P:Azure.Search.Documents.SearchClientOptions.Serializer" />.
            <see cref="T:Azure.Core.Serialization.JsonObjectSerializer" /> will be used if no value is provided.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.FieldBuilder.Build(System.Type)">
            <summary>
            Creates a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> objects corresponding to
            the properties of the type supplied.
            </summary>
            <param name="modelType">
            The type for which fields will be created, based on its properties.
            </param>
            <returns>A collection of fields.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="modelType" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.FieldBuilder.BuildMapping(System.Type)">
            <summary>
            Creates a dictionary mapping property names to the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> objects corresponding to the properties of the type supplied.
            </summary>
            <param name="modelType">
            The type for which fields will be created, based on its properties.
            </param>
            <returns>A collection of fields.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="modelType" />.</exception>
            <remarks>This overload is used to find the Key field of a SearchIndex so we can associate indexing failures with actions.</remarks>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.FieldBuilderIgnoreAttribute">
            <summary>
            Indicates that the target property should be ignored by <see cref="T:Azure.Search.Documents.Indexes.FieldBuilder" />.
            </summary>
            <remarks>
            This attribute is useful in situations where a property definition doesn't cleanly map to a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />
            object, but its values still need to be converted to and from JSON. In that case,
            <see cref="T:System.Text.Json.Serialization.JsonIgnoreAttribute" /> can't be used since it would disable JSON conversion.
            An example of a scenario where this is useful is when mapping between a string field in Azure Cognitive Search and an enum
            property.
            </remarks>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.ISearchFieldAttribute">
            <summary>
            Represents an attribute that creates a <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" />.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.ISearchFieldAttribute.SetField(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Sets properties on the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> based on attributes' properties that are set.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> to update.</param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.SearchableFieldAttribute">
            <summary>
            Attributes a simple field using a primitive type or a collection of a primitive type.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.AnalyzerName">
            <summary>
            Gets or sets the name of the language analyzer. This property cannot be set when either <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.SearchAnalyzerName" /> or <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.IndexAnalyzerName" /> are set.
            Once the analyzer is chosen, it cannot be changed for the field in the index.
            </summary>
            <value>String values from <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values">LexicalAnalyzerName</see>, or the name of a custom analyzer previously uploaded.</value>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.SearchAnalyzerName">
            <summary>
            Gets or sets the name of the language analyzer for searching. This property must be set together with <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.IndexAnalyzerName" />, and cannot be set when <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.AnalyzerName" /> is set.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.AnalyzerName" /> property instead if you need a language analyzer.
            Once the analyzer is chosen, it cannot be changed for the field in the index.
            </summary>
            <value>String values from <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values">LexicalAnalyzerName</see>, or the name of a custom analyzer previously uploaded.</value>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.IndexAnalyzerName">
            <summary>
            Gets or sets the name of the language analyzer for indexing. This property must be set together with <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.SearchAnalyzerName" />, and cannot be set when <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.AnalyzerName" /> is set.
            This property cannot be set to the name of a language analyzer; use the <see cref="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.AnalyzerName" /> property instead if you need a language analyzer.
            Once the analyzer is chosen, it cannot be changed for the field in the index.
            </summary>
            <value>String values from <see cref="T:Azure.Search.Documents.Indexes.Models.LexicalAnalyzerName.Values">LexicalAnalyzerName</see>, or the name of a custom analyzer previously uploaded.</value>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchableFieldAttribute.SynonymMapNames">
            <summary>
            Gets or sets a list of names of synonym maps to associate with this field.
            Currently, only one synonym map per field is supported.
            </summary>
            <remarks>
            Assigning a synonym map to a field ensures that query terms targeting that field are expanded at query-time using the rules in the synonym map.
            This attribute can be changed on existing fields.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchableFieldAttribute.Azure#Search#Documents#Indexes#ISearchFieldAttribute#SetField(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Sets properties on the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> based on attributes' properties that are set.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> to update.</param>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.SearchIndexClient">
            <summary>
            Azure Cognitive Search client that can be used to manage indexes on a Search service.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.AzureKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.Core.TokenCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="tokenCredential">
            Required. The token credential used to authenticate requests against the Search service.
            See <see href="https://docs.microsoft.com/azure/search/search-security-rbac">Use role-based authorization in Azure Cognitive Search</see> for more information about role-based authorization in Azure Cognitive Search.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Search.Documents.SearchClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
            <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Search.Documents.SearchClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="tokenCredential">
            Required. The token credential used to authenticate requests against the Search service.
            See <see href="https://docs.microsoft.com/azure/search/search-security-rbac">Use role-based authorization in Azure Cognitive Search</see> for more information about role-based authorization in Azure Cognitive Search.
            </param>
            <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.#ctor(System.Uri,Azure.Core.Serialization.ObjectSerializer,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,Azure.Search.Documents.SearchClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="serializer">An optional customized serializer to use for search documents.</param>
            <param name="pipeline">The authenticated <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> used for sending requests to the Search Service.</param>
            <param name="diagnostics">The <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> used to provide tracing support for the client library.</param>
            <param name="version">The REST API version of the Search Service to use when making requests.</param>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchIndexClient.Endpoint">
            <summary>
            Gets the URI endpoint of the Search service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchIndexClient.ServiceName">
            <summary>
            Gets the name of the Search service.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSearchClient(System.String)">
            <summary>
            Get a <see cref="T:Azure.Search.Documents.SearchClient" /> for the given <paramref name="indexName" /> to use for document operations like querying or adding documents to a Search Index.
            </summary>
            <param name="indexName">The name of the desired Search Index.</param>
            <returns>A SearchClient for the desired Search Index.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="indexName" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="indexName" /> is empty.</exception>
            <remarks>
            The same request <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> (including authentication and any other configuration) will be used for the
            <see cref="T:Azure.Search.Documents.SearchClient" />.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetServiceStatistics(System.Threading.CancellationToken)">
            <summary>
            <para>
            Gets service level statistics for a Search service.
            </para>
            <para>
            This operation returns the number and type of objects in your
            service, the maximum allowed for each object type given the service
            tier, actual and maximum storage, and other limits that vary by
            tier. This request pulls information from the service so that you
            don't have to look up or calculate service limits.
            </para>
            <para>
            Statistics on document count and storage size are collected every
            few minutes, not in real time. Therefore, the statistics returned
            by this API may not reflect changes caused by recent indexing
            operations.
            </para>
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetServiceStatisticsAsync(System.Threading.CancellationToken)">
            <summary>
            <para>
            Gets service level statistics for a Search service.
            </para>
            <para>
            This operation returns the number and type of objects in your
            service, the maximum allowed for each object type given the service
            tier, actual and maximum storage, and other limits that vary by
            tier. This request pulls information from the service so that you
            don't have to look up or calculate service limits.
            </para>
            <para>
            Statistics on document count and storage size are collected every
            few minutes, not in real time. Therefore, the statistics returned
            by this API may not reflect changes caused by recent indexing
            operations.
            </para>
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchServiceStatistics" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.AnalyzeText(System.String,Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions,System.Threading.CancellationToken)">
            <summary>
            Shows how an analyzer breaks text into tokens.
            </summary>
            <param name="indexName">The name of the index used to test an analyzer.</param>
            <param name="options">The <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" /> containing the text and analyzer or analyzer components to test.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo" /> for analyzed text.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> or <paramref name="options" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.AnalyzeTextAsync(System.String,Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions,System.Threading.CancellationToken)">
            <summary>
            Shows how an analyzer breaks text into tokens.
            </summary>
            <param name="indexName">The name of the index used to test an analyzer.</param>
            <param name="options">The <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzeTextOptions" /> containing the text and analyzer or analyzer components to test.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.AnalyzedTokenInfo" /> for analyzed text.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> or <paramref name="options" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateIndex(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Threading.CancellationToken)">
            <summary>
            Creates a new search index.
            </summary>
            <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateIndexAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Threading.CancellationToken)">
            <summary>
            Creates a new search index.
            </summary>
            <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateIndex(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new search index or updates an existing index.
            </summary>
            <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create or update.</param>
            <param name="allowIndexDowntime">
            Optional value indicating whether to allow analyzers, tokenizers, token filters, or character filters to be added to the index by temporarily taking the index
            offline for a few seconds. The default is false. This temporarily causes indexing and queries to fail.
            Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
            </param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created or updated.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateIndexAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new search index or updates an existing index.
            </summary>
            <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create or update.</param>
            <param name="allowIndexDowntime">
            Optional value indicating whether to allow analyzers, tokenizers, token filters, or character filters to be added to the index by temporarily taking the index
            offline for a few seconds. The default is false. This temporarily causes indexing and queries to fail.
            Performance and write availability of the index can be impaired for several minutes after the index is updated, or longer for very large indexes.
            </param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> that was created or updated.
            This may differ slightly from what was passed in since the service may return back fields set to their default values depending on the field type and other properties.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndex(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a search index and all the documents it contains.
            </summary>
            <param name="indexName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a search index and all the documents it contains.
            </summary>
            <param name="indexName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndex(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a search index and all the documents it contains.
            </summary>
            <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteIndexAsync(Azure.Search.Documents.Indexes.Models.SearchIndex,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a search index and all the documents it contains.
            </summary>
            <param name="index">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndex.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="index" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndex(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </summary>
            <param name="indexName">Required. The name of the index to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.
            </summary>
            <param name="indexName">Required. The name of the index to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexes(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all indexes.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Pageable`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all indexes.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexNames(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all index names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Pageable`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all index names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexStatistics(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" /> for the given index, including a document count and storage usage.
            </summary>
            <param name="indexName">Required. The name of the index.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" /> names.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetIndexStatisticsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" /> for the given index, including a document count and storage usage.
            </summary>
            <param name="indexName">Required. The name of the index.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexStatistics" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateSynonymMap(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Threading.CancellationToken)">
            <summary>
            Creates a new synonym map.
            </summary>
            <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateSynonymMapAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Threading.CancellationToken)">
            <summary>
            Creates a new synonym map.
            </summary>
            <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateSynonymMap(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new synonym map or updates an existing synonym map.
            </summary>
            <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.CreateOrUpdateSynonymMapAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new synonym map or updates an existing synonym map.
            </summary>
            <param name="synonymMap">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMap(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a synonym map.
            </summary>
            <param name="synonymMapName">The name of a <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMapAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a synonym map.
            </summary>
            <param name="synonymMapName">The name of a <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMap(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a synonym map.
            </summary>
            <param name="synonymMap">The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.DeleteSynonymMapAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a synonym map.
            </summary>
            <param name="synonymMap">The <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMap" /> or <see cref="P:Azure.Search.Documents.Indexes.Models.SynonymMap.Name" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMap(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.
            </summary>
            <param name="synonymMapName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.
            </summary>
            <param name="synonymMapName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="synonymMapName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMaps(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all synonym maps.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all synonym maps.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapNames(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all synonym map names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexClient.GetSynonymMapNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all synonym map names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SynonymMap" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.SearchIndexerClient">
            <summary>
            Azure Cognitive Search client that can be used to manage and query
            indexes and documents, as well as manage other resources, on a Search
            Service.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor(System.Uri,Azure.AzureKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexerClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor(System.Uri,Azure.Core.TokenCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="tokenCredential">
            Required.The token credential used to authenticate requests against the Search service.
            See <see href="https://docs.microsoft.com/azure/search/search-security-rbac">Use role-based authorization in Azure Cognitive Search</see> for more information about role-based authorization in Azure Cognitive Search.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Search.Documents.SearchClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="credential">
            Required. The API key credential used to authenticate requests against the Search service.
            You need to use an admin key to perform any operations on the SearchIndexerClient.
            See <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see> for more information about API keys in Azure Cognitive Search.
            </param>
            <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="credential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Search.Documents.SearchClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.Indexes.SearchIndexerClient" /> class.
            </summary>
            <param name="endpoint">Required. The URI endpoint of the Search service. This is likely to be similar to "https://{search_service}.search.windows.net". The endpoint must use HTTPS.</param>
            <param name="tokenCredential">
            Required. The token credential used to authenticate requests against the Search service.
            See <see href="https://docs.microsoft.com/azure/search/search-security-rbac">Use role-based authorization in Azure Cognitive Search</see> for more information about role-based authorization in Azure Cognitive Search.
            </param>
            <param name="options">Client configuration options for connecting to Azure Cognitive Search.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="endpoint" /> or <paramref name="tokenCredential" /> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the <paramref name="endpoint" /> is not using HTTPS.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchIndexerClient.Endpoint">
            <summary>
            Gets the URI endpoint of the Search service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SearchIndexerClient.ServiceName">
            <summary>
            Gets the name of the Search service.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateDataSourceConnection(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Threading.CancellationToken)">
            <summary>
            Creates a new data source connection.
            </summary>
            <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateDataSourceConnectionAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Threading.CancellationToken)">
            <summary>
            Creates a new data source connection.
            </summary>
            <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateDataSourceConnection(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new data source or updates an existing data source connection.
            </summary>
            <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateDataSourceConnectionAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new data source or updates an existing data source connection.
            </summary>
            <param name="dataSourceConnection">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnection(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a data source connection.
            </summary>
            <param name="dataSourceConnectionName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a data source connection.
            </summary>
            <param name="dataSourceConnectionName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnection(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a data source connection.
            </summary>
            <param name="dataSourceConnection">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteDataSourceConnectionAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a data source connection.
            </summary>
            <param name="dataSourceConnection">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnection" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnection(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.
            </summary>
            <param name="dataSourceConnectionName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.
            </summary>
            <param name="dataSourceConnectionName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataSourceConnectionName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnections(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all data source connections.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all data source connections.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionNames(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all data source connection names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetDataSourceConnectionNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all data source connection names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerDataSourceConnection" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateIndexer(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Threading.CancellationToken)">
            <summary>
            Creates a new indexer.
            </summary>
            <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateIndexerAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Threading.CancellationToken)">
            <summary>
            Creates a new indexer.
            </summary>
            <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateIndexer(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new indexer or updates an existing indexer.
            </summary>
            <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateIndexerAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new indexer or updates an existing indexer.
            </summary>
            <param name="indexer">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> created.
            This may differ slightly from what was passed into the service.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexer(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an indexer.
            </summary>
            <param name="indexerName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an indexer.
            </summary>
            <param name="indexerName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexer(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes an indexer.
            </summary>
            <param name="indexer">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteIndexerAsync(Azure.Search.Documents.Indexes.Models.SearchIndexer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes an indexer.
            </summary>
            <param name="indexer">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexer.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexer" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexer(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.
            </summary>
            <param name="indexerName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.
            </summary>
            <param name="indexerName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexers(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all indexers.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all indexers.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerNames(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all indexer names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all indexer names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexer" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerStatus(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the current status and execution history of an indexer.
            </summary>
            <param name="indexerName">Required. The name of the indexer for which to retrieve status.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetIndexerStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the current status and execution history of an indexer.
            </summary>
            <param name="indexerName">Required. The name of the indexer for which to retrieve status.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerStatus" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.ResetIndexer(System.String,System.Threading.CancellationToken)">
            <summary>
            Resets the change tracking state associated with an indexer.
            </summary>
            <param name="indexerName">Required. The name of the indexer to reset.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.ResetIndexerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Resets the change tracking state associated with an indexer.
            </summary>
            <param name="indexerName">Required. The name of the indexer to reset.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.RunIndexer(System.String,System.Threading.CancellationToken)">
            <summary>
            Run an indexer now.
            </summary>
            <param name="indexerName">Required. The name of the indexer to run.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.RunIndexerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Run an indexer now.
            </summary>
            <param name="indexerName">Required. The name of the indexer to run.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="indexerName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateSkillset(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Threading.CancellationToken)">
            <summary>
            Creates a new skillset.
            </summary>
            <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateSkillsetAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Threading.CancellationToken)">
            <summary>
            Creates a new skillset.
            </summary>
            <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateSkillset(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new skillset or updates an existing skillset.
            </summary>
            <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.CreateOrUpdateSkillsetAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new skillset or updates an existing skillset.
            </summary>
            <param name="skillset">Required. The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to create or update.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>
            The <see cref="T:Azure.Response`1" /> from the server containing the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> that was created.
            This may differ slightly from what was passed in since the service may return back properties set to their default values.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillset(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a skillset.
            </summary>
            <param name="skillsetName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillsetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a skillset.
            </summary>
            <param name="skillsetName">The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillset(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a skillset.
            </summary>
            <param name="skillset">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.DeleteSkillsetAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deletes a skillset.
            </summary>
            <param name="skillset">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to delete.</param>
            <param name="onlyIfUnchanged">
            True to throw a <see cref="T:Azure.RequestFailedException" /> if the <see cref="P:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset.ETag" /> does not match the current service version;
            otherwise, the current service version will be overwritten.
            </param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response" /> from the server.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillset" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillset(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.
            </summary>
            <param name="skillsetName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a specific <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.
            </summary>
            <param name="skillsetName">Required. The name of the <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> to get.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing the requested <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="skillsetName" /> is null.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsets(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all skillsets.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all skillsets.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" />.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetNames(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all skillset names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SearchIndexerClient.GetSkillsetNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of all skillset names.
            </summary>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications that the operation should be canceled.</param>
            <returns>The <see cref="T:Azure.Response`1" /> from the server containing a list of <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset" /> names.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown when a failure is returned by the Search service.</exception>
        </member>
        <member name="T:Azure.Search.Documents.Indexes.SimpleFieldAttribute">
            <summary>
            Attributes a simple field using a primitive type or a collection of a primitive type.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsKey">
            <summary>
            Gets or sets whether the field is the key field. The default is false.
            A <see cref="T:Azure.Search.Documents.Indexes.Models.SearchIndex" /> must have exactly one key field of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsHidden">
            <summary>
            Gets or sets whether the field is returned in search results. The default is false.
            A key field where <see cref="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsKey" /> is true must have this property set to false.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsFilterable">
            <summary>
            Gets or sets a value indicating whether the field can be referenced in <c>$filter</c> queries. The default is false.
            </summary>
            <remarks>
            Filterable differs from searchable in how strings are handled. Fields of type <see cref="P:Azure.Search.Documents.Indexes.Models.SearchFieldDataType.String" /> or "Collection(DataType.String)" that are filterable do not undergo word-breaking, so comparisons are for exact matches only.
            For example, if you set such a field <c>f</c> to "sunny day", <c>$filter=f eq 'sunny'</c> will find no matches, but <c>$filter=f eq 'sunny day'</c> will.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsFacetable">
            <summary>
            Gets or sets a value indicating whether the field can be retrieved in facet queries. The default is false.
            </summary>
            <remarks>
            Facets are used in presentation of search results that include hit counts by categories.
            For example, in a search for digital cameras, facets might include branch, megapixels, price, etc.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.SimpleFieldAttribute.IsSortable">
            <summary>
            Gets or sets a value indicating whether to enable the field can be referenced in <c>$orderby</c> expressions. The default is false.
            </summary>
            <remarks>
            By default Azure Cognitive Search sorts results by score, but in many experiences users may want to sort by fields in the documents.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.SimpleFieldAttribute.Azure#Search#Documents#Indexes#ISearchFieldAttribute#SetField(Azure.Search.Documents.Indexes.Models.SearchField)">
            <summary>
            Sets properties on the given <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> based on attributes' properties that are set.
            </summary>
            <param name="field">The <see cref="T:Azure.Search.Documents.Indexes.Models.SearchField" /> to update.</param>
        </member>
        <member name="T:Azure.Search.Documents.AutocompleteOptions">
            <summary> Parameters for fuzzy matching, and other autocomplete query behaviors. </summary>
            <summary>
            Options for <see cref="M:Azure.Search.Documents.SearchClient.AutocompleteAsync(System.String,System.String,Azure.Search.Documents.AutocompleteOptions,System.Threading.CancellationToken)" /> that
            allow specifying autocomplete behaviors, like fuzzy matching.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.UseFuzzyMatching">
            <summary> A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will autocomplete terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources. </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.HighlightPostTag">
            <summary> A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled. </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.HighlightPreTag">
            <summary> A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled. </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.MinimumCoverage">
            <summary> A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80. </summary>
        </member>
        <member name="M:Azure.Search.Documents.AutocompleteOptions.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Azure.Search.Documents.AutocompleteOptions" />
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.SearchText">
            <summary>
            The search text on which to base autocomplete results.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.SuggesterName">
            <summary>
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.Mode">
            <summary>
            Specifies the mode for Autocomplete. The default is
            <see cref="F:Azure.Search.Documents.Models.AutocompleteMode.OneTerm" />. Use
            <see cref="F:Azure.Search.Documents.Models.AutocompleteMode.TwoTerms" /> to get shingles and
            <see cref="F:Azure.Search.Documents.Models.AutocompleteMode.OneTermWithContext" /> to use the
            current context while producing auto-completed terms.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.Filter">
            <summary>
            An OData expression that filters the documents used to produce
            completed terms for the Autocomplete result.  You can use
            <see cref="M:Azure.Search.Documents.SearchFilter.Create(System.FormattableString)" /> to help
            construct the filter expression.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.Size">
            <summary>
            The number of auto-completed terms to retrieve. This must be a
            value between 1 and 100. The default is 5.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.SearchFields">
            <summary>
            The list of field names to consider when querying for
            auto-completed terms. Target fields must be included in the
            specified suggester.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.AutocompleteOptions.SearchFieldsRaw">
            <summary>
            Join SearchFields so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.AutocompleteOptions.Clone">
            <summary>
            Creates a shallow copy of the AutocompleteOptions.
            </summary>
            <returns>The cloned AutocompleteOptions.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchOptions">
            <summary> Parameters for filtering, sorting, faceting, paging, and other search query behaviors. </summary>
            <summary>
            Options for <see cref="M:Azure.Search.Documents.SearchClient.SearchAsync``1(System.String,Azure.Search.Documents.SearchOptions,System.Threading.CancellationToken)" /> that
            allow specifying filtering, sorting, faceting, paging, and other search
            query behaviors.
            </summary>
            <seealso href="https://docs.microsoft.com/rest/api/searchservice/search-documents#query-parameters">Query Parameters.</seealso>
        </member>
        <member name="M:Azure.Search.Documents.SearchOptions.#ctor">
            <summary> Initializes a new instance of SearchOptions. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchOptions.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.String,System.Nullable{Azure.Search.Documents.Models.SearchQueryType},System.Nullable{Azure.Search.Documents.Models.ScoringStatistics},System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.Nullable{Azure.Search.Documents.Models.SearchMode},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary> Initializes a new instance of SearchOptions. </summary>
            <param name="includeTotalCount"> A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation. </param>
            <param name="facets"> The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs. </param>
            <param name="filter"> The OData $filter expression to apply to the search query. </param>
            <param name="highlightFieldsRaw"> The comma-separated list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting. </param>
            <param name="highlightPostTag"> A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &amp;lt;/em&amp;gt;. </param>
            <param name="highlightPreTag"> A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &amp;lt;em&amp;gt;. </param>
            <param name="minimumCoverage"> A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100. </param>
            <param name="orderByRaw"> The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses. </param>
            <param name="queryType"> A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax. </param>
            <param name="scoringStatistics"> A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency. The default is 'local'. Use 'global' to aggregate scoring statistics globally before scoring. Using global scoring statistics can increase latency of search queries. </param>
            <param name="sessionId"> A value to be used to create a sticky session, which can help getting more consistent results. As long as the same sessionId is used, a best-effort attempt will be made to target the same replica set. Be wary that reusing the same sessionID values repeatedly can interfere with the load balancing of the requests across replicas and adversely affect the performance of the search service. The value used as sessionId cannot start with a '_' character. </param>
            <param name="scoringParameters"> The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be "mylocation--122.2,44.8" (without the quotes). </param>
            <param name="scoringProfile"> The name of a scoring profile to evaluate match scores for matching documents in order to sort the results. </param>
            <param name="searchText"> A full-text search query expression; Use "*" or omit this parameter to match all documents. </param>
            <param name="searchFieldsRaw"> The comma-separated list of field names to which to scope the full-text search. When using fielded search (fieldName:searchExpression) in a full Lucene query, the field names of each fielded search expression take precedence over any field names listed in this parameter. </param>
            <param name="searchMode"> A value that specifies whether any or all of the search terms must be matched in order to count the document as a match. </param>
            <param name="selectRaw"> The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included. </param>
            <param name="skip"> The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use skip due to this limitation, consider using orderby on a totally-ordered key and filter with a range query instead. </param>
            <param name="size"> The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results. </param>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.HighlightPostTag">
            <summary> A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &amp;lt;/em&amp;gt;. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.HighlightPreTag">
            <summary> A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &amp;lt;em&amp;gt;. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.MinimumCoverage">
            <summary> A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.QueryType">
            <summary> A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.ScoringStatistics">
            <summary> A value that specifies whether we want to calculate scoring statistics (such as document frequency) globally for more consistent scoring, or locally, for lower latency. The default is 'local'. Use 'global' to aggregate scoring statistics globally before scoring. Using global scoring statistics can increase latency of search queries. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.SessionId">
            <summary> A value to be used to create a sticky session, which can help getting more consistent results. As long as the same sessionId is used, a best-effort attempt will be made to target the same replica set. Be wary that reusing the same sessionID values repeatedly can interfere with the load balancing of the requests across replicas and adversely affect the performance of the search service. The value used as sessionId cannot start with a '_' character. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.ScoringProfile">
            <summary> The name of a scoring profile to evaluate match scores for matching documents in order to sort the results. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.SearchMode">
            <summary> A value that specifies whether any or all of the search terms must be matched in order to count the document as a match. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.Skip">
            <summary> The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use skip due to this limitation, consider using orderby on a totally-ordered key and filter with a range query instead. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of SearchOptions from a continuation
            token to continue fetching results from a previous search.
            </summary>
            <param name="continuationToken">
            Encapsulates the state required to fetch the next page of search
            results from the index.
            </param>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.SearchText">
            <summary>
            A full-text search query expression;  Use "*" or omit this
            parameter to match all documents.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.Filter">
            <summary>
            The OData $filter expression to apply to the search query.  You can
            use <see cref="M:Azure.Search.Documents.SearchFilter.Create(System.FormattableString)" /> to help
            construct the filter expression.
            </summary>
            <seealso href="https://docs.microsoft.com/azure/search/search-filters">Filters in Azure Cognitive Search</seealso>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.HighlightFields">
            <summary>
            The list of field names to use for hit highlights.  Only searchable
            fields can be used for hit highlighting.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.HighlightFieldsRaw">
            <summary>
            Join HighlightFields so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.SearchFields">
            <summary>
            The list of field names to which to scope the full-text search.
            When using fielded search (fieldName:searchExpression) in a full
            Lucene query, the field names of each fielded search expression
            take precedence over any field names listed in this parameter.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.SearchFieldsRaw">
            <summary>
            Join SearchFields so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.Select">
            <summary>
            The list of fields to retrieve.  If unspecified, all fields marked
            as retrievable in the schema are included.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.SelectRaw">
            <summary>
            Join Select so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.Size">
            <summary>
            The number of search results to retrieve. This can be used in
            conjunction with <see cref="P:Azure.Search.Documents.SearchOptions.Skip" /> to implement client-side
            paging of search results.  If results are truncated due to
            server-side paging, the response will include a continuation token
            that can be used to issue another Search request for the next page
            of results.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.OrderBy">
            <summary>
            The list of OData $orderby expressions by which to sort the
            results. Each expression can be either a field name or a call to
            either the geo.distance() or the search.score() functions. Each
            expression can be followed by asc to indicate ascending, or desc to
            indicate descending. The default is ascending order. Ties will be
            broken by the match scores of documents. If no $orderby is
            specified, the default sort order is descending by document match
            score. There can be at most 32 $orderby clauses.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.OrderByRaw">
            <summary>
            Join OrderBy so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.IncludeTotalCount">
            <summary>
            A value that specifies whether to fetch the total count of results
            as the <see cref="P:Azure.Search.Documents.Models.SearchResults`1.TotalCount" /> property.
            The default value is false.  Setting this value to true may have a
            performance impact.  Note that the count returned is an
            approximation.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.Facets">
            <summary>
            The list of facet expressions to apply to the search query. Each
            facet expression contains a field name, optionally followed by a
            comma-separated list of name:value pairs.
            </summary>
            <seealso href="https://docs.microsoft.com/azure/search/search-filters-facets">How to build a facet filter in Azure Cognitive Search.</seealso>
        </member>
        <member name="P:Azure.Search.Documents.SearchOptions.ScoringParameters">
            <summary>
            The list of parameter values to be used in scoring functions (for
            example, referencePointParameter) using the format name-values. For
            example, if the scoring profile defines a function with a parameter
            called 'mylocation' the parameter string would be
            "mylocation--122.2,44.8" (without the quotes).
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchOptions.Clone">
            <summary>
            Creates a shallow copy of the SearchOptions.
            </summary>
            <returns>The cloned SearchOptions.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SuggestOptions">
            <summary> Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors. </summary>
            <summary>
            Options for <see cref="M:Azure.Search.Documents.SearchClient.SuggestAsync``1(System.String,System.String,Azure.Search.Documents.SuggestOptions,System.Threading.CancellationToken)" /> that
            allow specifying filtering, sorting, and other suggestions query
            behaviors.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.UseFuzzyMatching">
            <summary> A value indicating whether to use fuzzy matching for the suggestion query. Default is false. When set to true, the query will find suggestions even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.HighlightPostTag">
            <summary> A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.HighlightPreTag">
            <summary> A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.MinimumCoverage">
            <summary> A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestion query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SuggestOptions.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Azure.Search.Documents.SuggestOptions" />
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.SearchText">
            <summary>
            The search text to use to suggest documents. Must be at least 1
            character, and no more than 100 characters.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.SuggesterName">
            <summary>
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.Filter">
            <summary>
            An OData expression that filters the documents considered for
            suggestions.  You can use
            <see cref="M:Azure.Search.Documents.SearchFilter.Create(System.FormattableString)" /> to help
            construct the filter expression.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.SearchFields">
            <summary>
            The list of field names to search for the specified search text.
            Target fields must be included in the specified suggester.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.SearchFieldsRaw">
            <summary>
            Join SearchFields so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.Select">
            <summary>
            The list of fields to retrieve. If unspecified, only the key field
            will be included in the results.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.SelectRaw">
            <summary>
            Join Select so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.Size">
            <summary>
            The number of suggestions to retrieve. This must be a value between
            1 and 100. The default is 5.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.OrderBy">
            <summary>
            The list of OData $orderby expressions by which to sort the
            results. Each expression can be either a field name or a call to
            either the geo.distance() or the search.score() functions.  Each
            expression can be followed by asc to indicate ascending, or desc
            to indicate descending. The default is ascending order. Ties will
            be broken by the match scores of documents. If no $orderby is
            specified, the default sort order is descending by document match
            score. There can be at most 32 $orderby clauses.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SuggestOptions.OrderByRaw">
            <summary>
            Join OrderBy so it can be sent as a comma separated string.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SuggestOptions.Clone">
            <summary>
            Creates a shallow copy of the SuggestOptions.
            </summary>
            <returns>The cloned SuggestOptions.</returns>
        </member>
        <member name="P:Azure.Search.Documents.SearchServiceRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchServiceRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of SearchServiceRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchServiceRestClient.GetServiceStatisticsAsync(System.Threading.CancellationToken)">
            <summary> Gets service level statistics for a search service. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchServiceRestClient.GetServiceStatistics(System.Threading.CancellationToken)">
            <summary> Gets service level statistics for a search service. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="P:Azure.Search.Documents.SkillsetsRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of SkillsetsRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.CreateOrUpdateAsync(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new skillset in a search service or updates the skillset if it already exists. </summary>
            <param name="skillsetName"> The name of the skillset to create or update. </param>
            <param name="skillset"> The skillset containing one or more skills to create or update in a search service. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsetName" /> or <paramref name="skillset" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.CreateOrUpdate(System.String,Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new skillset in a search service or updates the skillset if it already exists. </summary>
            <param name="skillsetName"> The name of the skillset to create or update. </param>
            <param name="skillset"> The skillset containing one or more skills to create or update in a search service. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsetName" /> or <paramref name="skillset" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a skillset in a search service. </summary>
            <param name="skillsetName"> The name of the skillset to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsetName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a skillset in a search service. </summary>
            <param name="skillsetName"> The name of the skillset to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsetName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves a skillset in a search service. </summary>
            <param name="skillsetName"> The name of the skillset to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsetName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.Get(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves a skillset in a search service. </summary>
            <param name="skillsetName"> The name of the skillset to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillsetName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> List all skillsets in a search service. </summary>
            <param name="select"> Selects which top-level properties of the skillsets to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.List(System.String,System.Threading.CancellationToken)">
            <summary> List all skillsets in a search service. </summary>
            <param name="select"> Selects which top-level properties of the skillsets to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.CreateAsync(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Threading.CancellationToken)">
            <summary> Creates a new skillset in a search service. </summary>
            <param name="skillset"> The skillset containing one or more skills to create in a search service. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillset" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SkillsetsRestClient.Create(Azure.Search.Documents.Indexes.Models.SearchIndexerSkillset,System.Threading.CancellationToken)">
            <summary> Creates a new skillset in a search service. </summary>
            <param name="skillset"> The skillset containing one or more skills to create in a search service. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="skillset" /> is null. </exception>
        </member>
        <member name="P:Azure.Search.Documents.SynonymMapsRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.Nullable{System.Guid},System.String)">
            <summary> Initializes a new instance of SynonymMapsRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint URL of the search service. </param>
            <param name="xMsClientRequestId"> The tracking ID sent with the request to help with debugging. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.CreateOrUpdateAsync(System.String,Azure.Search.Documents.Indexes.Models.SynonymMap,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new synonym map or updates a synonym map if it already exists. </summary>
            <param name="synonymMapName"> The name of the synonym map to create or update. </param>
            <param name="synonymMap"> The definition of the synonym map to create or update. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMapName" /> or <paramref name="synonymMap" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.CreateOrUpdate(System.String,Azure.Search.Documents.Indexes.Models.SynonymMap,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new synonym map or updates a synonym map if it already exists. </summary>
            <param name="synonymMapName"> The name of the synonym map to create or update. </param>
            <param name="synonymMap"> The definition of the synonym map to create or update. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMapName" /> or <paramref name="synonymMap" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a synonym map. </summary>
            <param name="synonymMapName"> The name of the synonym map to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMapName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Deletes a synonym map. </summary>
            <param name="synonymMapName"> The name of the synonym map to delete. </param>
            <param name="ifMatch"> Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value. </param>
            <param name="ifNoneMatch"> Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this value. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMapName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves a synonym map definition. </summary>
            <param name="synonymMapName"> The name of the synonym map to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMapName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.Get(System.String,System.Threading.CancellationToken)">
            <summary> Retrieves a synonym map definition. </summary>
            <param name="synonymMapName"> The name of the synonym map to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMapName" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Lists all synonym maps available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the synonym maps to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.List(System.String,System.Threading.CancellationToken)">
            <summary> Lists all synonym maps available for a search service. </summary>
            <param name="select"> Selects which top-level properties of the synonym maps to retrieve. Specified as a comma-separated list of JSON property names, or '*' for all properties. The default is all properties. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.CreateAsync(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Threading.CancellationToken)">
            <summary> Creates a new synonym map. </summary>
            <param name="synonymMap"> The definition of the synonym map to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMap" /> is null. </exception>
        </member>
        <member name="M:Azure.Search.Documents.SynonymMapsRestClient.Create(Azure.Search.Documents.Indexes.Models.SynonymMap,System.Threading.CancellationToken)">
            <summary> Creates a new synonym map. </summary>
            <param name="synonymMap"> The definition of the synonym map to create. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="synonymMap" /> is null. </exception>
        </member>
        <member name="T:Azure.Search.Documents.GetDocumentOptions">
            <summary>
            Options for <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.GetDocumentOptions.SelectedFields">
            <summary>
            A list of field names to retrieve.  Only fields marked as
            retrievable can be included in this clause.  Any field not
            retrieved will be missing from the returned document.  If empty,
            all fields marked as retrievable in the schema are returned.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.GetDocumentOptions.SelectedFieldsOrNull">
            <summary>
            Gets the selected fields.  If the collection is null or empty, we
            return null.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.IndexDocumentsOptions">
            <summary>
            Options for <see cref="M:Azure.Search.Documents.SearchClient.IndexDocumentsAsync``1(Azure.Search.Documents.Models.IndexDocumentsBatch{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError">
            <summary>
            Gets or sets a value indicating whether to throw an exception on
            any individual failure in the batch of document write operations.
            Set this to true if you're not inspecting the results of the Index
            Documents action.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.SearchAudience">
            <summary> Cloud audiences available for Search. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Search.Documents.SearchAudience" /> object.
            </summary>
            <param name="value">The Azure Active Directory audience to use when forming authorization scopes.For the Language service, this value corresponds to a URL that identifies the Azure cloud where the resource is located.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
            <remarks>Please use one of the constant members over creating a custom value unless you have special needs for doing so.</remarks>
        </member>
        <member name="P:Azure.Search.Documents.SearchAudience.AzureChina">
            <summary> Azure China. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchAudience.AzureGovernment">
            <summary> Azure Government. </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchAudience.AzurePublicCloud">
            <summary> Azure Public Cloud. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.op_Equality(Azure.Search.Documents.SearchAudience,Azure.Search.Documents.SearchAudience)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.SearchAudience" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.op_Inequality(Azure.Search.Documents.SearchAudience,Azure.Search.Documents.SearchAudience)">
            <summary> Determines if two <see cref="T:Azure.Search.Documents.SearchAudience" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.op_Implicit(System.String)~Azure.Search.Documents.SearchAudience">
            <summary> Converts a string to a <see cref="T:Azure.Search.Documents.SearchAudience" />. </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.Equals(Azure.Search.Documents.SearchAudience)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchAudience.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchClient">
            <summary>
            Azure Cognitive Search client that can be used to query an index and
            upload, merge, or delete documents.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClient.Endpoint">
            <summary>
            Gets the URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            </summary>
            <remarks>
            This is not the URI of the Search Index.  You could construct that
            URI with "{Endpoint}/indexes/{IndexName}" if needed.
            </remarks>
        </member>
        <member name="P:Azure.Search.Documents.SearchClient.ServiceName">
            <summary>
            Gets the name of the Search Service.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClient.IndexName">
            <summary>
            Gets the name of the Search Index.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClient.Serializer">
            <summary>
            Gets an <see cref="T:Azure.Core.Serialization.ObjectSerializer" /> that can be used to
            customize the serialization of strongly typed models.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClient.ClientDiagnostics">
            <summary>
            Gets the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> used
            to provide tracing support for the client library.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.#ctor">
            <summary>
            Initializes a new instance of the SearchClient class for
            mocking.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.#ctor(System.Uri,System.String,Azure.AzureKeyCredential)">
            <summary>
            Initializes a new instance of the SearchClient class for
            querying an index and uploading, merging, or deleting documents.
            </summary>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The endpoint must use HTTPS.
            </param>
            <param name="indexName">
            Required.  The name of the Search Index.
            </param>
            <param name="credential">
            Required.  The API key credential used to authenticate requests
            against the search service.  You need to use an admin key to
            modify the documents in a Search Index.  See
            <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see>
            for more information about API keys in Azure Cognitive Search.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="endpoint" />,
            <paramref name="indexName" />, or <paramref name="credential" /> is
            null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS or
            the <paramref name="indexName" /> is empty.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)">
            <summary>
            Initializes a new instance of the SearchClient class for
            querying an index and uploading, merging, or deleting documents.
            </summary>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The endpoint must use HTTPS.
            </param>
            <param name="indexName">
            Required.  The name of the Search Index.
            </param>
            <param name="tokenCredential">
            Required.  The token credential used to authenticate requests against the Search service.
            See <see href="https://docs.microsoft.com/azure/search/search-security-rbac">Use role-based authorization in Azure Cognitive Search</see> for
            more information about role-based authorization in Azure Cognitive Search.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="endpoint" />,
            <paramref name="indexName" />, or <paramref name="tokenCredential" /> is
            null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS or
            the <paramref name="indexName" /> is empty.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.#ctor(System.Uri,System.String,Azure.AzureKeyCredential,Azure.Search.Documents.SearchClientOptions)">
            <summary>
            Initializes a new instance of the SearchClient class for
            querying an index and uploading, merging, or deleting documents.
            </summary>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The endpoint must use HTTPS.
            </param>
            <param name="indexName">
            Required.  The name of the Search Index.
            </param>
            <param name="credential">
            Required.  The API key credential used to authenticate requests
            against the search service.  You need to use an admin key to
            modify the documents in a Search Index.  See
            <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see>
            for more information about API keys in Azure Cognitive Search.
            </param>
            <param name="options">
            Client configuration options for connecting to Azure Cognitive
            Search.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="endpoint" />,
            <paramref name="indexName" />, or <paramref name="credential" /> is
            null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS or
            the <paramref name="indexName" /> is empty.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Search.Documents.SearchClientOptions)">
            <summary>
            Initializes a new instance of the SearchClient class for
            querying an index and uploading, merging, or deleting documents.
            </summary>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The endpoint must use HTTPS.
            </param>
            <param name="indexName">
            Required.  The name of the Search Index.
            </param>
            <param name="tokenCredential">
            Required.  The token credential used to authenticate requests against the Search service.
            See <see href="https://docs.microsoft.com/azure/search/search-security-rbac">Use role-based authorization in Azure Cognitive Search</see> for
            more information about role-based authorization in Azure Cognitive Search.
            </param>
            <param name="options">
            Client configuration options for connecting to Azure Cognitive
            Search.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="endpoint" />,
            <paramref name="indexName" />, or <paramref name="tokenCredential" /> is
            null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS or
            the <paramref name="indexName" /> is empty.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.#ctor(System.Uri,System.String,Azure.Core.Serialization.ObjectSerializer,Azure.Core.Pipeline.HttpPipeline,Azure.Core.Pipeline.ClientDiagnostics,Azure.Search.Documents.SearchClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the SearchClient class from a
            <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" />.
            </summary>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The endpoint must use HTTPS.
            </param>
            <param name="indexName">
            Required.  The name of the Search Index.
            </param>
            <param name="serializer">
            An optional customized serializer to use for search documents.
            </param>
            <param name="pipeline">
            The authenticated <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> used for sending
            requests to the Search Service.
            </param>
            <param name="diagnostics">
            The <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> used to
            provide tracing support for the client library.
            </param>
            <param name="version">
            The REST API version of the Search Service to use when making
            requests.
            </param>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.GetSearchIndexClient">
            <summary>
            Get a SearchIndexClient with the same pipeline.
            </summary>
            <returns>A SearchIndexClient.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.GetDocumentCount(System.Threading.CancellationToken)">
            <summary>
            Retrieves a count of the number of documents in this search index.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>The number of documents in the search index.</returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.GetDocumentCountAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves a count of the number of documents in this search index.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>The number of documents in the search index.</returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.GetDocument``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from Azure Cognitive Search.  This is useful
            when a user clicks on a specific search result, and you want to
            look up specific details about that document. You can only get one
            document at a time.  Use Search to get multiple documents in a
            single request.
            <see href="https://docs.microsoft.com/rest/api/searchservice/lookup-document">Lookup Document</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="key">
            Required.  An string value that uniquely identifies each document
            in the index.  The key is sometimes referred to as a document ID.
            See
            <see href="https://docs.microsoft.com/rest/api/searchservice/naming-rules">Naming rules</see>
            for the rules for constructing valid document keys.
            </param>
            <param name="options">
            Options to customize the operation's behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            The document corresponding to the <paramref name="key" />.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            The generic overloads of the <see cref="M:Azure.Search.Documents.SearchClient.GetDocument``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" /> and
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" /> methods support mapping of Azure
            Search field types to .NET types via the type parameter
            <typeparamref name="T" />.  Note that all search field types except
            collections are nullable, so we recommend using nullable types for
            the properties of <typeparamref name="T" />. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more information.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieves a document from Azure Cognitive Search.  This is useful
            when a user clicks on a specific search result, and you want to
            look up specific details about that document. You can only get one
            document at a time.  Use Search to get multiple documents in a
            single request.
            <see href="https://docs.microsoft.com/rest/api/searchservice/lookup-document">Lookup Document</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="key">
            Required.  An string value that uniquely identifies each document
            in the index.  The key is sometimes referred to as a document ID.
            See
            <see href="https://docs.microsoft.com/rest/api/searchservice/naming-rules">Naming rules</see>
            for the rules for constructing valid document keys.
            </param>
            <param name="options">
            Options to customize the operation's behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            The document corresponding to the <paramref name="key" />.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            The <see cref="M:Azure.Search.Documents.SearchClient.GetDocument``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" /> and <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            methods support mapping of Azure Search field types to .NET types
            via the type parameter <typeparamref name="T" />.  Note that all
            search field types except collections are nullable, so we recommend
            using nullable types for the properties of <typeparamref name="T" />.
            The type mapping is as follows:
            <list type="table">
            <listheader>
            <term>Search field type</term>
            <description>.NET type</description>
            </listheader>
            <item>
            <term>Edm.String</term>
            <description><see cref="T:System.String" /> (string in C# and F#)</description>
            </item>
            <item>
            <term>Edm.Boolean</term>
            <description><see cref="T:System.Nullable`1" /> (bool? in C#,\
            Nullable&lt;bool&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.Double</term>
            <description><see cref="T:System.Nullable`1" /> (double? in C#,
            Nullable&lt;float&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.Int32</term>
            <description><see cref="T:System.Nullable`1" /> (int? in C#,
            Nullable&lt;int&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.Int64</term>
            <description><see cref="T:System.Nullable`1" /> (long? in C#,
            Nullable&lt;int64&gt; in F#)</description>
            </item>
            <item>
            <term>Edm.DateTimeOffset</term>
            <description>
            <see cref="T:System.Nullable`1" /> (DateTimeOffset? in
            C#, Nullable&lt;DateTimeOffset&gt; in F#) or
            System.Nullable&lt;System.DateTime&gt; (DateTime? in C#,
            Nullable&lt;DateTime&gt; in F#). Both types work, although we
            recommend using DateTimeOffset.  When retrieving documents,
            DateTime values will always be in UTC. When indexing documents,
            DateTime values are interpreted as follows:
            <list type="table">
            <item>
            <term>UTC DateTime</term>
            <description>Sent as-is to the index.</description>
            </item>
            <item>
            <term>Local DateTime</term>
            <description>Converted to UTC before being sent to the index.
            </description>
            </item>
            <item>
            <term>DateTime with unspecified time zone</term>
            <description>Assumed to be UTC and sent as-is to the index.
            </description>
            </item>
            </list>
            </description>
            </item>
            <item>
            <term>Edm.GeographyPoint</term>
            <description> Azure.Core.GeoJson.GeoPoint
            </description>
            </item>
            <item>
            <term>Edm.ComplexType</term>
            <description>
            Any type that can be deserialized from the JSON objects in the
            complex field.  This can be a value type or a reference type, but
            we recommend using a reference type since complex fields are
            nullable in Azure Cognitive Search.
            </description>
            </item>
            <item>
            <term>Collection(Edm.String)</term>
            <description><see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;string&gt;
            in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Boolean)</term>
            <description><see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;bool&gt; in
            F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Double)</term>
            <description><see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;float&gt; in
            F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Int32)</term>
            <description><see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;int&gt; in
            F#)</description>
            </item>
            <item>
            <term>Collection(Edm.Int64)</term>
            <description><see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;int64&gt; in
            F#)</description>
            </item>
            <item>
            <term>Collection(Edm.DateTimeOffset)</term>
            <description>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> or
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;DateTimeOffset&gt; or
            seq&lt;DateTime&gt; in F#). Both types work, although we recommend
            using <see cref="T:System.Collections.Generic.IEnumerable`1" />.  See the notes
            above on Edm.DateTimeOffset for details.
            </description>
            </item>
            <item>
            <term>Collection(Edm.GeographyPoint)</term>
            <description>sequence of Azure.Core.GeoJson.GeoPoint
            (seq&lt;GeoPoint&gt; in F#)</description>
            </item>
            <item>
            <term>Collection(Edm.ComplexType)</term>
            <description>
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> (seq&lt;T&gt; in F#) where T is any
            type that can be deserialized from the JSON objects in the complex
            collection field. This can be a value type or a reference type.
            </description>
            </item>
            </list>
            You can also use the dynamic <see cref="T:Azure.Search.Documents.Models.SearchDocument" /> as your
            <typeparamref name="T" /> and we will attempt to map JSON types in
            the response payload to .NET types. This mapping does not
            have the benefit of precise type information from the index, so the
            mapping is not always correct. In particular, be aware of the
            following cases:
            <list type="bullet">
            <item>
            <description>
            Any numeric value without a decimal point will be deserialized to
            a <see cref="T:System.Int32" /> (int in C#, int32 in F#) if it can be
            converted or a <see cref="T:System.Int64" /> (long in C#, int64 in F#)
            otherwise.
            </description>
            </item>
            <item>
            <description>
            Special double-precision floating point values such as NaN and
            Infinity will be deserialized as type <see cref="T:System.String" /> rather
            than <see cref="T:System.Double" />, even if they are in arrays with regular
            floating point values.
            </description>
            </item>
            <item>
            <description>
            Any Edm.DateTimeOffset field will be deserialized as a
            <see cref="T:System.DateTimeOffset" />, not <see cref="T:System.DateTime" />.
            </description>
            </item>
            <item>
            <description>
            Any empty JSON array will be deserialized as an array of
            <see cref="T:System.Object" /> (object[] in C#, obj[] in F#).
            </description>
            </item>
            <item>
            <description>
            Complex fields will be recursively deserialized into instances of
            type <see cref="T:Azure.Search.Documents.Models.SearchDocument" />.  Similarly, complex collection
            fields will be deserialized into arrays of such instances.
            </description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.Search``1(System.String,Azure.Search.Documents.SearchOptions,System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/search-documents">Search Documents</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="searchText">
            A full-text search query expression;  Use "*" or omit this
            parameter to match all documents.  See
            <see href="https://docs.microsoft.com/azure/search/query-simple-syntax">Simple query syntax in Azure Cognitive Search</see>
            for more information about search query syntax.
            </param>
            <param name="options">
            Options that allow specifying filtering, sorting, faceting, paging,
            and other search query behaviors.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            Search and SearchAsync methods support mapping of search field
            types to .NET types via the type parameter T.  You can provide your
            own type <typeparamref name="T" /> or use the dynamic
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" />. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            Azure Cognitive Search might not be able to include all results in
            a single response in which case <see cref="M:Azure.Search.Documents.Models.SearchResults`1.GetResults" />
            will automatically continue making additional requests as you
            enumerate through the results.  You can also process the results a
            page at a time with the <see cref="M:Azure.Pageable`1.AsPages(System.String,System.Nullable{System.Int32})" />
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.SearchAsync``1(System.String,Azure.Search.Documents.SearchOptions,System.Threading.CancellationToken)">
            <summary>
            Searches for documents in the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/search-documents">Search Documents</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="searchText">
            A full-text search query expression;  Use "*" or omit this
            parameter to match all documents.  See
            <see href="https://docs.microsoft.com/azure/search/query-simple-syntax">Simple query syntax in Azure Cognitive Search</see>
            for more information about search query syntax.
            </param>
            <param name="options">
            Options that allow specifying filtering, sorting, faceting, paging,
            and other search query behaviors.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the documents matching the query.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            Search and SearchAsync methods support mapping of search field
            types to .NET types via the type parameter T.  You can provide your
            own type <typeparamref name="T" /> or use the dynamic
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" />. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            Azure Cognitive Search might not be able to include all results in
            a single response in which case
            <see cref="M:Azure.Search.Documents.Models.SearchResults`1.GetResultsAsync" /> will automatically
            continue making additional requests as you enumerate through the
            results.  You can also process the results a page at a time with
            the <see cref="M:Azure.AsyncPageable`1.AsPages(System.String,System.Nullable{System.Int32})" /> method.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.Suggest``1(System.String,System.String,Azure.Search.Documents.SuggestOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a "search-as-you-type" query consisting of a partial text
            input (three character minimum).  It returns matching text found in
            suggester-aware fields.  Azure Cognitive Search looks for matching
            values in fields that are predefined in a Suggester.  For example,
            if you enable suggestions on a city field, typing "sea" produces
            documents containing "Seattle", "Sea Tac", and "Seaside" (all
            actual city names) for that field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/suggestions">Suggestions</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="searchText">
            The search text to use to suggest documents. Must be at least 1
            character, and no more than 100 characters.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </param>
            <param name="options">
            Options for filtering, sorting, and other suggestions query
            behaviors.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing suggestion query results from an index.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            Suggest and SuggestAsync methods support mapping of search field
            types to .NET types via the type parameter T.  You can provide your
            own type <typeparamref name="T" /> or use the dynamic
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" />. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.SuggestAsync``1(System.String,System.String,Azure.Search.Documents.SuggestOptions,System.Threading.CancellationToken)">
            <summary>
            Executes a "search-as-you-type" query consisting of a partial text
            input (three character minimum).  It returns matching text found in
            suggester-aware fields.  Azure Cognitive Search looks for matching
            values in fields that are predefined in a Suggester.  For example,
            if you enable suggestions on a city field, typing "sea" produces
            documents containing "Seattle", "Sea Tac", and "Seaside" (all
            actual city names) for that field.
            <see href="https://docs.microsoft.com/rest/api/searchservice/suggestions">Suggestions</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="searchText">
            The search text to use to suggest documents. Must be at least 1
            character, and no more than 100 characters.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </param>
            <param name="options">
            Options for filtering, sorting, and other suggestions query
            behaviors.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing suggestion query results from an index.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            Suggest and SuggestAsync methods support mapping of search field
            types to .NET types via the type parameter T.  You can provide your
            own type <typeparamref name="T" /> or use the dynamic
            <see cref="T:Azure.Search.Documents.Models.SearchDocument" />. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.Autocomplete(System.String,System.String,Azure.Search.Documents.AutocompleteOptions,System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in
            the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/autocomplete">Autocomplete</see>
            </summary>
            <param name="searchText">
            The search text on which to base autocomplete results.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </param>
            <param name="options">
            Options that allow specifying autocomplete behaviors, like fuzzy
            matching.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>The result of Autocomplete query.</returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.AutocompleteAsync(System.String,System.String,Azure.Search.Documents.AutocompleteOptions,System.Threading.CancellationToken)">
            <summary>
            Suggests query terms based on input text and matching documents in
            the search index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/autocomplete">Autocomplete</see>
            </summary>
            <param name="searchText">
            The search text on which to base autocomplete results.
            </param>
            <param name="suggesterName">
            The name of the suggester as specified in the suggesters collection
            that's part of the index definition.
            </param>
            <param name="options">
            Options that allow specifying autocomplete behaviors, like fuzzy
            matching.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>The result of Autocomplete query.</returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.IndexDocuments``1(Azure.Search.Documents.Models.IndexDocumentsBatch{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search
            index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents">Add, Update or Delete Documents</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="batch">
            The batch of document index actions.
            </param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the IndexDocuments and IndexDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            individual <see cref="T:Azure.RequestFailedException" />s wrapped into an
            <see cref="T:System.AggregateException" /> that's thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.IndexDocumentsAsync``1(Azure.Search.Documents.Models.IndexDocumentsBatch{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Sends a batch of upload, merge, and/or delete actions to the search
            index.
            <see href="https://docs.microsoft.com/rest/api/searchservice/addupdate-or-delete-documents">Add, Update or Delete Documents</see>
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="batch">
            The batch of document index actions.
            </param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the IndexDocuments and IndexDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            individual <see cref="T:Azure.RequestFailedException" />s wrapped into an
            <see cref="T:System.AggregateException" /> that's thrown on partial failure.
            </para>
            </remarks>&gt;
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.UploadDocuments``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Upload documents to the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to upload.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the UploadDocuments and UploadDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.UploadDocumentsAsync``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Upload documents to the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to upload.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the UploadDocuments and UploadDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.MergeDocuments``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Merge documents to the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to merge.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the MergeDocuments and MergeDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.MergeDocumentsAsync``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Merge documents to the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to merge.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the MergeDocuments and MergeDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.MergeOrUploadDocuments``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Merge or upload documents to the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to merge or upload.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the MergeOrUploadDocuments and
            MergeOrUploadDocumentsAsync methods support mapping of search field
            types to .NET types via the type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.MergeOrUploadDocumentsAsync``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Merge or upload documents to the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to merge or upload.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the MergeOrUploadDocuments and
            MergeOrUploadDocumentsAsync methods support mapping of search field
            types to .NET types via the type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.DeleteDocuments``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Delete documents from the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to delete.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the DeleteDocuments and DeleteDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.DeleteDocumentsAsync``1(System.Collections.Generic.IEnumerable{``0},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Delete documents from the index as a batch.
            </summary>
            <typeparam name="T">
            The .NET type that maps to the index schema. Instances of this type
            can be retrieved as documents from the index.
            </typeparam>
            <param name="documents">The documents to delete.</param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            The generic overloads of the DeleteDocuments and DeleteDocumentsAsync
            methods support mapping of search field types to .NET types via the
            type parameter T. See
            <see cref="M:Azure.Search.Documents.SearchClient.GetDocumentAsync``1(System.String,Azure.Search.Documents.GetDocumentOptions,System.Threading.CancellationToken)" />
            for more details on the type mapping.
            </para>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.DeleteDocuments(System.String,System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Delete documents from the index as a batch given only their keys.
            </summary>
            <param name="keyName">
            The name of the key field that uniquely identifies documents in
            the index.
            </param>
            <param name="keyValues">
            The keys of the documents to delete.
            </param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="M:Azure.Search.Documents.SearchClient.DeleteDocumentsAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Azure.Search.Documents.IndexDocumentsOptions,System.Threading.CancellationToken)">
            <summary>
            Delete documents from the index as a batch given only their keys.
            </summary>
            <param name="keyName">
            The name of the key field that uniquely identifies documents in
            the index.
            </param>
            <param name="keyValues">
            The keys of the documents to delete.
            </param>
            <param name="options">
            Options that allow specifying document indexing behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>
            Response containing the status of operations for all actions in the
            batch of actions.
            </returns>
            <exception cref="T:Azure.RequestFailedException">
            Thrown when a failure is returned by the Search Service.
            </exception>
            <remarks>
            <para>
            By default, an exception will only be thrown if the entire request
            fails.  Individual failures are described in the
            <see cref="P:Azure.Search.Documents.Models.IndexDocumentsResult.Results" /> collection.  You can set
            <see cref="P:Azure.Search.Documents.IndexDocumentsOptions.ThrowOnAnyError" /> if you want
            exceptions thrown on partial failure.
            </para>
            </remarks>
        </member>
        <member name="T:Azure.Search.Documents.SearchClientOptions">
            <summary>
            Provides the client configuration options for connecting to Azure
            Cognitive Search.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion">
            <summary>
            The versions of Azure Cognitive Search supported by this client
            library.  For more, see
            <see href="https://docs.microsoft.com/azure/search/search-api-versions">
            API versions in Azure Cognitive Search</see>.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.SearchClientOptions.ServiceVersion.V2020_06_30">
            <summary>
            The 2020_06_30 version of the Azure Cognitive Search
            service.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.SearchClientOptions.LatestVersion">
            <summary>
            The Latest service version supported by this client library.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.SearchClientOptions.ContinuationTokenVersion">
            <summary>
            The service version to use when creating continuation tokens that
            can be passed between different client libraries.  Changing this
            value requires updating <see cref="T:Azure.Search.Documents.Models.SearchContinuationToken" />.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClientOptions.Version">
            <summary>
            Gets the <see cref="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion" /> of the service API used when
            making requests.  For more, see
            <see href="https://docs.microsoft.com/azure/search/search-api-versions">
            API versions in Azure Cognitive Search</see>.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClientOptions.Serializer">
            <summary>
            Gets or sets an <see cref="T:Azure.Core.Serialization.ObjectSerializer" /> that can be used to
            customize the serialization of strongly typed models.  The
            serializer needs to support JSON and <see cref="T:Azure.Core.Serialization.JsonObjectSerializer" />
            will be used if no value is provided.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.SearchClientOptions.Audience">
            <summary>
            Gets or sets the Audience to use for authentication with Azure Active Directory (AAD). The audience is not considered when using a shared key.
            </summary>
            <value>If <c>null</c>, <see cref="P:Azure.Search.Documents.SearchAudience.AzurePublicCloud" /> will be assumed.</value>
        </member>
        <member name="M:Azure.Search.Documents.SearchClientOptions.#ctor(Azure.Search.Documents.SearchClientOptions.ServiceVersion)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Search.Documents.SearchClientOptions" />
             class.
             </summary>
             <param name="version">
             An optional <see cref="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion" /> to specify the version of
             the REST API to use.  For more, see
             <see href="https://docs.microsoft.com/azure/search/search-api-versions">
             API versions in Azure Cognitive Search</see>.
            
             If not provided, the <paramref name="version" /> will default to the
             latest supported by this client library.  It is recommended that
             application authors allow the version to float to the latest and
             library authors pin to a specific version.
             </param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             Thrown when the <paramref name="version" /> is not supported by this
             client library.
             </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchClientOptions.Build(Azure.AzureKeyCredential)">
            <summary>
            Create an <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> to send requests to the Search
            Service.
            </summary>
            <param name="credential">
            The <see cref="T:Azure.AzureKeyCredential" /> to authenticate requests.
            </param>
            <returns>An <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> to send requests.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchClientOptions.Build(Azure.Core.TokenCredential)">
            <summary>
            Create an <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> to send requests to the Search service.
            </summary>
            <param name="credential">
            The <see cref="T:Azure.Core.TokenCredential" /> to authenticate requests.
            </param>
            <returns>An <see cref="T:Azure.Core.Pipeline.HttpPipeline" /> to send requests.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchExtensions">
            <summary>
            Search extension methods.
            </summary>
            <summary>
            Search extension methods.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.Validate(Azure.Search.Documents.SearchClientOptions.ServiceVersion)">
            <summary>
            Validate a <see cref="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion" />.
            </summary>
            <param name="version">
            The <see cref="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion" /> to validate.
            </param>
            <returns>
            The validated version.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the <paramref name="version" /> is not supported by this
            client library.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.ToVersionString(Azure.Search.Documents.SearchClientOptions.ServiceVersion)">
            <summary>
            Get a version string, like "2019-05-06", corresponding to a given
            <see cref="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion" /> value.
            </summary>
            <param name="version">
            The <see cref="T:Azure.Search.Documents.SearchClientOptions.ServiceVersion" /> value to
            convert into a version string.
            </param>
            <returns>
            The version string.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when the <paramref name="version" /> is not supported by this
            client library.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.AssertHttpsScheme(System.Uri,System.String)">
            <summary>
            Assert that the given URI uses HTTPS as its scheme.
            </summary>
            <param name="endpoint">The URI to validate.</param>
            <param name="paramName">
            The name of the parameter for this URI, to use with an
            <see cref="T:System.ArgumentException" />.
            </param>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="endpoint" /> is not using HTTPS as
            its scheme.
            </exception>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.GetSearchServiceName(System.Uri)">
            <summary>
            Get the name of the Search Service from its
            <paramref name="endpoint" />.
            </summary>
            <param name="endpoint">The endpoint of the Search Service.</param>
            <returns>The name of the Search Service.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.CommaJoin(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Join a collection of strings into a single comma separated string.
            If the collection is null or empty, a null string will be returned.
            </summary>
            <param name="items">The items to join.</param>
            <returns>The items joined together by commas.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.CommaSplit(System.String)">
            <summary>
            Split a collection of strings by commas.
            </summary>
            <param name="value">The value to split.</param>
            <returns>A collection of individual values.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.CopyToAsync(System.IO.Stream,System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Copy from a source stream to a destination either synchronously or
            asynchronously.
            </summary>
            <param name="source">The stream to read from.</param>
            <param name="destination">The stream to write to.</param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>A Task representing the computation.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchExtensions.CopyToMemoryStreamAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Copy a Stream into memory.
            </summary>
            <param name="source">The stream to read.</param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>The source stream as a MemoryStream.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchFilter">
            <summary>
            The SearchFilter class is used to help construct valid OData filter
            expressions, like the kind used by <see cref="P:Azure.Search.Documents.SearchOptions.Filter" />,
            by automatically replacing, quoting, and escaping interpolated
            parameters.
            For more information, see <see href="https://docs.microsoft.com/azure/search/search-filters">Filters in Azure Cognitive Search</see>.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SearchFilter.Create(System.FormattableString)">
            <summary>
            Create an OData filter expression from an interpolated string.  The
            interpolated values will be quoted and escaped as necessary.
            </summary>
            <param name="filter">An interpolated filter string.</param>
            <returns>A valid OData filter expression.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SearchFilter.Create(System.FormattableString,System.IFormatProvider)">
            <summary>
            Create an OData filter expression from an interpolated string.  The
            interpolated values will be quoted and escaped as necessary.
            </summary>
            <param name="filter">An interpolated filter string.</param>
            <param name="formatProvider">
            Format provider used to convert values to strings.
            <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> is used as a default.
            </param>
            <returns>A valid OData filter expression.</returns>
        </member>
        <member name="T:Azure.Search.Documents.JsonSerialization">
            <summary>
            JSON serialization and conversion helpers.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.JsonSerialization.SerializerOptions">
            <summary>
            Default JsonSerializerOptions to use.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.AddSearchConverters(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Add all of the Search JsonConverters.
            </summary>
            <param name="options">Serialization options.</param>
            <returns>Serialization options.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.Float(System.Single,System.IFormatProvider)">
            <summary>
            Format floating point values.
            </summary>
            <param name="value">Float.</param>
            <param name="formatProvider">Format Provider.</param>
            <returns>OData string.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.Double(System.Double,System.IFormatProvider)">
            <summary>
            Format floating point values.
            </summary>
            <param name="value">Double.</param>
            <param name="formatProvider">Format Provider.</param>
            <returns>OData string.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.Date(System.DateTime,System.IFormatProvider)">
            <summary>
            Format dates.
            </summary>
            <param name="value">Date</param>
            <param name="formatProvider">Format Provider.</param>
            <returns>OData string.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.Date(System.DateTimeOffset,System.IFormatProvider)">
            <summary>
            Format dates.
            </summary>
            <param name="value">Date</param>
            <param name="formatProvider">Format Provider.</param>
            <returns>OData string.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.ToStream(System.Text.Json.JsonElement)">
            <summary>
            Get a stream representation of a JsonElement.  This is an
            inefficient hack to let us rip out nested sub-documents
            representing different model types and pass them to
            ObjectSerializer.
            </summary>
            <param name="element">The JsonElement.</param>
            <returns>The JsonElement's content wrapped in a Stream.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.GetSearchObject(System.Text.Json.JsonElement)">
            <summary>
            Convert a JSON value into a .NET object relative to Search's EDM
            types.
            </summary>
            <param name="element">The JSON element.</param>
            <returns>A corresponding .NET value.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.ReadSearchDocument(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions,System.Nullable{System.Int32})">
            <summary>
            Parse JSON into a SearchDocument.
            </summary>
            <param name="reader">The JSON reader.</param>
            <param name="typeToConvert">The type to convert to.</param>
            <param name="options">Serialization options.</param>
            <param name="recursionDepth">
            Depth of the current read recursion to bail out of circular
            references.
            </param>
            <returns>A deserialized SearchDocument.</returns>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.WriteSearchDocument(System.Text.Json.Utf8JsonWriter,Azure.Search.Documents.Models.SearchDocument,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serialize a SearchDocument as JSON.
            </summary>
            <param name="writer">JSON writer.</param>
            <param name="document">The document.</param>
            <param name="options">Serialization options.</param>
        </member>
        <member name="M:Azure.Search.Documents.JsonSerialization.DeserializeAsync``1(System.IO.Stream,Azure.Core.Serialization.ObjectSerializer,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Deserialize a JSON stream.
            </summary>
            <typeparam name="T">
            The target type to deserialize the JSON stream into.
            </typeparam>
            <param name="json">A JSON stream.</param>
            <param name="serializer">
            Optional serializer that can be used to customize the serialization
            of strongly typed models.
            </param>
            <param name="async">Whether to execute sync or async.</param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
            that the operation should be canceled.
            </param>
            <returns>A deserialized object.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SearchDateTimeConverter">
            <summary>
            Convert dates to and from JSON.  They're expected to be in 8601 UTC.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.SearchDateTimeOffsetConverter">
            <summary>
            Convert dates to and from JSON.  They're expected to be in 8601 UTC.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.SearchDoubleConverter">
            <summary>
            Convert doubles to and from JSON.  Search allows INF, -INF, and NaN as
            string values.
            </summary>
        </member>
        <member name="T:Azure.Search.Documents.GeographyLineStringProxy">
            <summary>
            Proxy for a Microsoft.Spatial.GeographyLineString class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyLineStringProxy.#ctor(System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.GeographyLineStringProxy" /> class.
            </summary>
            <param name="value">The Microsoft.Spatial.GeographyLineString object to proxy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.GeographyLineStringProxy.Points">
            <summary>
            Gets the point collection.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyLineStringProxy.ToString">
            <summary>
            Returns an OData filter representation of the underlying Microsoft.Spatial.Geography object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azure.Search.Documents.GeographyPointProxy">
            <summary>
            Proxy for a Microsoft.Spatial.GeographyPoint class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.#ctor(System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.GeographyPointProxy" /> class.
            </summary>
            <param name="value">The Microsoft.Spatial.GeographyPoint object to proxy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.GeographyPointProxy.Latitude">
            <summary>
            Gets the latitude.
            </summary>
        </member>
        <member name="P:Azure.Search.Documents.GeographyPointProxy.Longitude">
            <summary>
            Gets the longitude.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.op_Equality(Azure.Search.Documents.GeographyPointProxy,Azure.Search.Documents.GeographyPointProxy)">
            <summary>
            Determines whether the <paramref name="left" /> has the same values as the <paramref name="right" /> value.
            </summary>
            <param name="left">The first <see cref="T:Azure.Search.Documents.GeographyPointProxy" /> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Search.Documents.GeographyPointProxy" /> to compare.</param>
            <returns><c>true</c> if the <paramref name="left" /> has the same values as the <paramref name="right" /> value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.op_Inequality(Azure.Search.Documents.GeographyPointProxy,Azure.Search.Documents.GeographyPointProxy)">
            <summary>
            Determines whether the <paramref name="left" /> has the same values as the <paramref name="right" /> value.
            </summary>
            <param name="left">The first <see cref="T:Azure.Search.Documents.GeographyPointProxy" /> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Search.Documents.GeographyPointProxy" /> to compare.</param>
            <returns><c>true</c> if the <paramref name="left" /> has the same values as the <paramref name="right" /> value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.Equals(Azure.Search.Documents.GeographyPointProxy)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary><param name="obj">The object to compare with the current object.</param><returns><see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.GetHashCode">
            <summary>Serves as the default hash function.</summary><returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPointProxy.ToString">
            <summary>
            Returns an OData filter representation of the underlying Microsoft.Spatial.Geography object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azure.Search.Documents.GeographyPolygonProxy">
            <summary>
            Proxy for a Microsoft.Spatial.GeographyPolygon class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPolygonProxy.#ctor(System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.GeographyPolygonProxy" /> class.
            </summary>
            <param name="value">The Microsoft.Spatial.GeographyPolygon object to proxy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.GeographyPolygonProxy.Rings">
            <summary>
            Gets the collection of rings.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyPolygonProxy.ToString">
            <summary>
            Returns an OData filter representation of the underlying Microsoft.Spatial.Geography object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azure.Search.Documents.GeographyProxy">
            <summary>
            Proxy for a Microsoft.Spatial.Geography class.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyProxy.#ctor(System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Search.Documents.GeographyProxy" /> class.
            </summary>
            <param name="value">The Microsoft.Spatial.Geography object to proxy. This is assumed to derive from a Microsoft.Spatial.Geography class.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="P:Azure.Search.Documents.GeographyProxy.Value">
            <summary>
            Gets the original value passed into the proxy.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.GeographyProxy.ToString">
            <summary>
            Returns an OData filter representation of the underlying Microsoft.Spatial.Geography object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyProxy.GetPropertyValue``1(System.Reflection.PropertyInfo@,System.String)">
            <summary>
            Gets the value of the named property.
            </summary>
            <typeparam name="T">The type of property to get.</typeparam>
            <param name="property">A reference to a statically cached <see cref="T:System.Reflection.PropertyInfo" />.</param>
            <param name="name">The name of the property.</param>
            <returns>The value of the named property.</returns>
        </member>
        <member name="M:Azure.Search.Documents.GeographyProxy.GetCollectionPropertyValue``1(System.Reflection.PropertyInfo@,System.Collections.Generic.IReadOnlyList{``0}@,System.String,System.Func{System.Object,``0})">
            <summary>
            Gets the proxied collection value of the named property.
            </summary>
            <typeparam name="T">The type of the proxy to get.</typeparam>
            <param name="property">A reference to a statically cached <see cref="T:System.Reflection.PropertyInfo" />.</param>
            <param name="proxies">A reference to an cached collection of proxies.</param>
            <param name="name">The name of the property.</param>
            <param name="factory">The factory method to create an instance of the <typeparamref name="T" /> proxy class.</param>
            <returns>A proxied collection of the named property.</returns>
        </member>
        <member name="T:Azure.Search.Documents.SpatialFormatter">
            <summary>
            Encodes geographic data from both Azure.Core and Microsoft.Spatial for use in OData filters.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SpatialFormatter.EncodePoint(System.Double,System.Double)">
            <summary>
            Encodes the longitude and latitude of points or positions for use in OData filters.
            </summary>
            <param name="longitude">The longitude to encode, which may also be known as Y.</param>
            <param name="latitude">The latitude to encode, which may also be known as X.</param>
            <returns>The OData filter-encoded POINT string.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SpatialFormatter.EncodePolygon(Azure.Core.GeoJson.GeoLineString)">
            <summary>
            Encodes a polygon for use in OData filters.
            </summary>
            <param name="line">The <see cref="T:Azure.Core.GeoJson.GeoLineString" /> to encode.</param>
            <returns>The OData filter-encoded POLYGON string.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="line" /> has fewer than 4 points, or the first and last points do not match.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="line" /> or <see cref="P:Azure.Core.GeoJson.GeoLineString.Coordinates" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.SpatialFormatter.EncodePolygon(Azure.Core.GeoJson.GeoPolygon)">
            <summary>
            Encodes a polygon for use in OData filters.
            <seealso cref="M:Azure.Search.Documents.SpatialFormatter.EncodePolygon(Azure.Core.GeoJson.GeoLinearRing)" />
            </summary>
            <param name="polygon">The <see cref="T:Azure.Core.GeoJson.GeoPolygon" /> to encode.</param>
            <returns>The OData filter-encoded POLYGON string.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="polygon" /> or <see cref="P:Azure.Core.GeoJson.GeoPolygon.Rings" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.SpatialFormatter.EncodePolygon(Azure.Search.Documents.GeographyLineStringProxy)">
            <summary>
            Encodes a polygon for use in OData filters.
            </summary>
            <param name="line">The <see cref="T:Azure.Search.Documents.GeographyLineStringProxy" /> to encode.</param>
            <returns>The OData filter-encoded POLYGON string.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="line" /> has fewer than 4 points, or the first and last points do not match.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="line" /> or <see cref="P:Azure.Search.Documents.GeographyLineStringProxy.Points" /> is null.</exception>
        </member>
        <member name="M:Azure.Search.Documents.SpatialFormatter.EncodePolygon(Azure.Search.Documents.GeographyPolygonProxy)">
            <summary>
            Encodes a polygon for use in OData filters.
            <seealso cref="M:Azure.Search.Documents.SpatialFormatter.EncodePolygon(Azure.Search.Documents.GeographyLineStringProxy)" />
            </summary>
            <param name="polygon">The <see cref="T:Azure.Search.Documents.GeographyPolygonProxy" /> to encode.</param>
            <returns>The OData filter-encoded POLYGON string.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="polygon" /> or <see cref="P:Azure.Search.Documents.GeographyPolygonProxy.Rings" /> is null.</exception>
        </member>
        <member name="T:Azure.Search.Documents.SpatialProxyFactory">
            <summary>
            Creates <see cref="T:Azure.Search.Documents.GeographyProxy" /> instances from unknown objects.
            </summary>
        </member>
        <member name="M:Azure.Search.Documents.SpatialProxyFactory.CanCreate(System.Type)">
            <summary>
            Gets a value indicating whether the given <paramref name="type" /> can be created by this factory.
            </summary>
            <param name="type">The type to check.</param>
            <returns>A value indicating whether <paramref name="type" /> can be created by this factory.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SpatialProxyFactory.TryCreate(System.Object,Azure.Search.Documents.GeographyProxy@)">
            <summary>
            Attempts to creates a <see cref="T:Azure.Search.Documents.GeographyProxy" /> from the given <paramref name="value" /> if supported.
            <seealso cref="M:Azure.Search.Documents.SpatialProxyFactory.CanCreate(System.Type)" />
            </summary>
            <param name="value">The value to proxy.</param>
            <param name="proxy">The proxied value if supported.</param>
            <returns>True if the <paramref name="value" /> could be proxied; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Search.Documents.SpatialProxyFactory.IsSupportedPoint(System.Type)">
            <summary>
            Gets a value indicating whether the given <paramref name="type" /> represents a supported spatial point.
            </summary>
            <param name="type">The type to check.</param>
            <returns>A value indicating whether the given <paramref name="type" /> represents a supported spatial point.</returns>
        </member>
        <member name="T:Azure.Search.Documents.Constants">
            <summary>
            Constants used by the Search client library.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.All">
            <summary>
            Gets "*" to select all fields, properties, or rows.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ApiKeyHeaderName">
            <summary>
            The name of the API key header used for signing requests.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.NanValue">
            <summary>
            Gets the representation of a NaN value.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.InfValue">
            <summary>
            Gets the representation of positive infinity.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.NegativeInfValue">
            <summary>
            Gets the representation of negative infinity.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ODataKeyPrefix">
            <summary>
            The prefix for special OData keys.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchTextKeyJson">
            <summary>
            The @search.text key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchCoverageKeyJson">
            <summary>
            The @search.coverage key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchScoreKeyJson">
            <summary>
            The @search.score key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchFacetsKeyJson">
            <summary>
            The @search.facets key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchNextPageKeyJson">
            <summary>
            The @search.nextPageParameters key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchAnswersKeyJson">
            <summary>
            The @search.answers key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchHighlightsKeyJson">
            <summary>
            The @search.highlights key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchRerankerScoreKeyJson">
            <summary>
            The @search.rerankerScore key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchCaptionsKeyJson">
            <summary>
            The @search.captions key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.SearchActionKeyJson">
            <summary>
            The @search.action key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ODataCountKeyJson">
            <summary>
            The @odata.count key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ODataNextLinkKeyJson">
            <summary>
            The @odata.nextLink key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.NameKey">
            <summary>
            The name key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ValueKey">
            <summary>
            The value key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ValueKeyJson">
            <summary>
            The value key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.CountKey">
            <summary>
            The count key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.CountKeyJson">
            <summary>
            The count key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.FromKey">
            <summary>
            The to key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.ToKey">
            <summary>
            The from key.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.MaxJsonRecursionDepth">
            <summary>
            The default recursion limit if we don't get a value from
            <see cref="P:System.Text.Json.JsonSerializerOptions.MaxDepth" />.
            The service limit is (currently) 10.
            </summary>
        </member>
        <member name="F:Azure.Search.Documents.Constants.CopyBufferSize">
            <summary>
            The default size of buffer to use when copying data between streams.
            </summary>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.#ctor(Azure.AzureKeyCredential,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.AzureKeyCredentialPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
            <param name="name">The name of the key header used for the credential.</param>
        </member>
        <member name="M:Azure.Core.AzureKeyCredentialPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.ObjectNotDisposedException">
            <summary>
            An exception thrown and immediately caught by finalizers with pending
            work or resources that were not properly disposed.  This exception only
            exists to notify users of incorrect usage while debugging with first
            chance exceptions.
            </summary>
        </member>
        <member name="M:Azure.Core.ObjectNotDisposedException.#ctor(System.String)">
            <summary>
            Creates a new instance of an ObjectNotDisposedException.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Azure.Core.SyncAsyncEventHandlerExtensions">
            <summary>
            Extensions for raising <see cref="T:Azure.Core.SyncAsyncEventHandler`1" />
            events.
            </summary>
        </member>
        <member name="M:Azure.Core.SyncAsyncEventHandlerExtensions.RaiseAsync``1(Azure.Core.SyncAsyncEventHandler{``0},``0,System.String,System.String,Azure.Core.Pipeline.ClientDiagnostics)">
            <summary>
            Raise an <see cref="T:Azure.Core.SyncAsyncEventHandler`1" />
            event by executing each of the handlers sequentially (to avoid
            introducing accidental parallelism in customer code) and collecting
            any exceptions.
            </summary>
            <typeparam name="T">Type of the event arguments.</typeparam>
            <param name="eventHandler">The event's delegate.</param>
            <param name="e">
            An <see cref="T:Azure.SyncAsyncEventArgs" /> instance that contains the
            event data.
            </param>
            <param name="declaringTypeName">
            The name of the type declaring the event to construct a helpful
            exception message and distributed tracing span.
            </param>
            <param name="eventName">
            The name of the event to construct a helpful exception message and
            distributed tracing span.
            </param>
            <param name="clientDiagnostics">
            Client diagnostics to wrap all the handlers in a new distributed
            tracing span.
            </param>
            <returns>
            A task that represents running all of the event's handlers.
            </returns>
            <exception cref="T:System.AggregateException">
            An exception was thrown during the execution of at least one of the
            event's handlers.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="e" />, <paramref name="declaringTypeName" />,
            <paramref name="eventName" />, or <paramref name="clientDiagnostics" />
            are null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="declaringTypeName" /> or
            <paramref name="eventName" /> are empty.
            </exception>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.BuildPageForResponse(Azure.Response,System.String,System.String)">
            <summary>
            Returns a <see cref="T:Azure.Page`1" /> for a given response.
            </summary>
            <param name="response"></param>
            <param name="itemPropertyName"></param>
            <param name="nextLinkPropertyName"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation{`0},Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then use as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the property <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />
            property and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.DelayStrategy">
            <summary>
            Strategy to control delay behavior.
            </summary>
        </member>
        <member name="M:Azure.Core.DelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the interval of next delay iteration.
            </summary>
            <remarks> Note that the value could change per call. </remarks>
            <param name="response"> Server response. </param>
            <param name="suggestedInterval"> Suggested pollingInterval. It is up to strategy
            implementation to decide how to deal with this parameter. </param>
            <returns> Delay interval of next iteration. </returns>
        </member>
        <member name="T:Azure.Core.ConstantDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> with constant polling interval.
            </summary>
            <remarks>Polling interval is always equal to the given polling interval.</remarks>
        </member>
        <member name="M:Azure.Core.ConstantDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.ExponentialDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" />. Polling interval changes according to
            the sequence {1, 1, 1, 2, 4, ...32}.
            </summary>
            <remarks>Polling interval always follows the given sequence.</remarks>
        </member>
        <member name="M:Azure.Core.ExponentialDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from {1, 1, 1, 2, 4, ...32}.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
        </member>
        <member name="T:Azure.Core.RetryAfterDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> of which the interval is from
            retry-after header of service response.
            </summary>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.#ctor(Azure.Core.DelayStrategy)">
            <summary>
            Create a <see cref="T:Azure.Core.RetryAfterDelayStrategy" /> with a default retry-after value which normally
            comes from the initial response of an LRO operation.
            </summary>
            <param name="fallbackStrategy"> Fallback strategy if retry after is not present. </param>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of retry-after header of given service response and <paramref name="suggestedInterval" />.
            If retry-after header is not found, adopt the value of last retry-after header.
            </summary>
            <param name="response">Service response which might carry retry-after header.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of retry-after header and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.ExtractFailureContent(System.String,Azure.Core.ResponseHeaders,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Partial method that can optionally be defined to extract the error
            message, code, and details in a service specific manner.
            </summary>
            <param name="content">The error content.</param>
            <param name="responseHeaders">The response headers.</param>
            <param name="additionalInfo">Additional error details.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.DiagnosticScope.ActivityKind">
            <summary>
            Kind describes the relationship between the Activity, its parents, and its children in a Trace.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Internal">
            <summary>
            Default value.
            Indicates that the Activity represents an internal operation within an application, as opposed to an operations with remote parents or children.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Server">
            <summary>
            Server activity represents request incoming from external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Client">
            <summary>
            Client activity represents outgoing request to the external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Producer">
            <summary>
            Producer activity represents output provided to external components.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Consumer">
            <summary>
            Consumer activity represents output received from an external component.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.AssertEnumDefined(System.Type,System.Object,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not defined for <paramref name="enumType" />.
            </summary>
            <param name="enumType">The type to validate against.</param>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not defined for <paramref name="enumType" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Microsoft.Extensions.Azure.SearchClientBuilderExtensions">
            <summary>
            Extension methods to add <see cref="T:Azure.Search.Documents.SearchClient" /> to the Azure client
            builder.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.SearchClientBuilderExtensions.AddSearchClient``1(``0,System.Uri,System.String,Azure.AzureKeyCredential)">
            <summary>
            Registers a <see cref="T:Azure.Search.Documents.SearchClient" /> instance with the provided
            <paramref name="endpoint" />, <paramref name="indexName" />, and
            <paramref name="credential" />.
            </summary>
            <typeparam name="TBuilder">Type of the client factory builder.</typeparam>
            <param name="builder">The client factory builder.</param>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The URI must use HTTPS.
            </param>
            <param name="indexName">
            Required.  The name of the Search Index.
            </param>
            <param name="credential">
            Required.  The API key credential used to authenticate requests
            against the search service.  You need to use an admin key to
            modify the documents in a Search Index.  See
            <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see>
            for more information about API keys in Azure Cognitive Search.
            </param>
            <returns>An Azure client builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Azure.SearchClientBuilderExtensions.AddSearchClient``2(``0,``1)">
            <summary>
            Registers a <see cref="T:Azure.Search.Documents.SearchClient" /> instance with connection
            options loaded from the provided <paramref name="configuration" />
            instance.
            </summary>
            <typeparam name="TBuilder">Type of the client factory builder.</typeparam>
            <typeparam name="TConfiguration">Type of the configuration.</typeparam>
            <param name="builder">The client factory builder.</param>
            <param name="configuration">The client configuration.</param>
            <returns>An Azure client builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Azure.SearchClientBuilderExtensions.AddSearchIndexClient``1(``0,System.Uri,Azure.AzureKeyCredential)">
            <summary>
            Registers a <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> instance with the
            provided <paramref name="endpoint" /> and <paramref name="credential" />.
            </summary>
            <typeparam name="TBuilder">Type of the client factory builder.</typeparam>
            <param name="builder">The client factory builder.</param>
            <param name="endpoint">
            Required.  The URI endpoint of the Search Service.  This is likely
            to be similar to "https://{search_service}.search.windows.net".
            The URI must use HTTPS.
            </param>
            <param name="credential">
            Required.  The API key credential used to authenticate requests
            against the search service.  You need to use an admin key to
            modify the documents in a Search Index.  See
            <see href="https://docs.microsoft.com/azure/search/search-security-api-keys">Create and manage api-keys for an Azure Cognitive Search service</see>
            for more information about API keys in Azure Cognitive Search.
            </param>
            <returns>An Azure client builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Azure.SearchClientBuilderExtensions.AddSearchIndexClient``2(``0,``1)">
            <summary>
            Registers a <see cref="T:Azure.Search.Documents.Indexes.SearchIndexClient" /> instance with connection
            options loaded from the provided <paramref name="configuration" />
            instance.
            </summary>
            <typeparam name="TBuilder">Type of the client factory builder.</typeparam>
            <typeparam name="TConfiguration">Type of the configuration.</typeparam>
            <param name="builder">The client factory builder.</param>
            <param name="configuration">The client configuration.</param>
            <returns>An Azure client builder.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary><returns><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><param name="value">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><param name="value">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><returns><see langword="true" /> if <paramref name="value" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="value" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary><param name="value">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><returns><see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary><param name="destination">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param><param name="offset">The zero-based index in <paramref name="destination" /> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="destination" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="offset" /> to the end of the destination <paramref name="destination" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Indexes.Models.IndexingParametersConfiguration.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
            <summary>Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="P:Azure.Search.Documents.Models.FacetResult.System#Collections#Generic#IReadOnlyCollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>Gets the number of elements in the collection.</summary><returns>The number of elements in the collection.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary><returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary><returns><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.</summary><param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><returns><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary><param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:Azure.Search.Documents.Models.SearchDocument.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary><param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><returns><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
